{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7e99cdba_71e99694",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1432579
      },
      "writtenOn": "2024-02-13T10:36:18Z",
      "side": 1,
      "message": "Sorry, I am a bit confused by this patch. Didn\u0027t we agree in the last meeting that host should inject the value of the hashtree in the DT it passes to crossvm, and pvmfw will use the value passed from bootloader to verify the DT.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 26
      },
      "revId": "01c4f57431b9fa44603abc49d0d10d66c6d19378",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "892d0cf2_a75e5ae6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1019013
      },
      "writtenOn": "2024-02-13T10:48:29Z",
      "side": 1,
      "message": "\u003e Didn\u0027t we agree in the last meeting that host should inject the value of the hashtree in the DT it passes to crossvm, and pvmfw will use the value passed from bootloader to verify the DT.\n\nThis was my idea to test loading vendor image. At that time, I proposed that approach to test vendor image features with test image and arbitrary VM reference DT (e.g. test invalid vendor image hashkey). However, it requires to inject arbitrary VM reference DT so can only run on production device.\nSee: b/323768068.\n\n\nBut Jiyong proposed an idea to test whether real vendor image can be loaded. It\u0027s simpler and can be a CTS test. This CL is written based on the Jiyong\u0027s idea, and more complex test scenario would be handled in another issue. (but with less priority).\n\nHope this answers your question.",
      "parentUuid": "7e99cdba_71e99694",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 26
      },
      "revId": "01c4f57431b9fa44603abc49d0d10d66c6d19378",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e07b635_859140c8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1432579
      },
      "writtenOn": "2024-02-13T13:02:22Z",
      "side": 1,
      "message": "\u003e However, it requires to inject arbitrary VM reference DT so can only run on production device.\n\nYou meant non-production devices, right? I am not sure I agree, if the DT is constructed by the host, and pvmfw verifies it before booting a pVM, then approach should be safe on production devices as well. @ptosi@google.com wdyt?\n\n\u003e But Jiyong proposed an idea to test whether real vendor image can \u003ebe loaded. It\u0027s simpler and can be a CTS test. This CL is written \u003ebased on the Jiyong\u0027s idea, and more complex test scenario would \u003ebe handled in another issue. (but with less priority).\n\nWell, the caveat of this approach is that we don\u0027t really get any coverage in presubmit \u0026 postsubmit. I\u0027m not against having a test that verifies that microdroid can boot with the /vendor/etc/microdroid/microdroid-vendor.img - this sounds like a useful test. I am not sure that enabling presubmit \u0026 postsubmit coverage of the vendor modules feature has a lesser priority",
      "parentUuid": "892d0cf2_a75e5ae6",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 26
      },
      "revId": "01c4f57431b9fa44603abc49d0d10d66c6d19378",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "baefd460_e8cc7483",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1019013
      },
      "writtenOn": "2024-02-13T13:10:02Z",
      "side": 1,
      "message": "\u003e \u003e However, it requires to inject arbitrary VM reference DT so can only run on production device.\n\n\u003e You meant non-production devices, right? I am not sure I agree, if the DT is constructed by the host, and pvmfw verifies it before booting a pVM, then approach should be safe on production devices as well. \n\nI\u0027m terribly sorry here. Such test __CAN\u0027T__ run on the production device. (otherwise DT can contain malicious data.\n\nFor test purpose, we can run protected VM with arbitrary data. Custom `pvmfw` can be used for booting VM, and there\u0027s already a test for it. (e.g. DebugPolicyHostTests). It\u0027s done by passing `--protected-vm-with-firmware` to crosvm.\n\nHowever, launching custom pvmfw is only allowed in userdebug or eng build, so those test isn\u0027t a part of CTS.\n\n\n\u003e I am not sure that enabling presubmit \u0026 postsubmit coverage of the vendor modules feature has a lesser priority\n\nI\u0027m sorry but I don\u0027t understand this. Could you explain your idea about vendor module tests?",
      "parentUuid": "0e07b635_859140c8",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 26
      },
      "revId": "01c4f57431b9fa44603abc49d0d10d66c6d19378",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c031c7e_845f5aee",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1432579
      },
      "writtenOn": "2024-02-13T13:19:06Z",
      "side": 1,
      "message": "Running microdroid with microdroid-vendor.img relies on a bunch of changes in the userspace that ideally we would want to have end-to-end coverage on. These changes are not specific to pVMs, so we can run tests on non-protected Microdroid VMs.\n\nRight now, we don\u0027t have any end-to-end coverage for userspace changes, and this patch won\u0027t address this problem (since none of the devices we use in presubmit have microdroid-vendor.img, and the  -pvkm_experimental variants are not stable enough to run in presubmit).\n\nAgain, I am not against this change. What I am saying is that running microdroid-vendor-partition tests in presubmit on non-protected VMs shouldn\u0027t have a lesser priority.\n\nI don\u0027t think that we need to do anything fancy to enable such testing. Making host responsible for constructing the DT instead of simply copying the reference DT from the ABL should be enough (in case of pVMs the pvmfw will still be responsible for validating the DT). Although I might be missing something here",
      "parentUuid": "baefd460_e8cc7483",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 26
      },
      "revId": "01c4f57431b9fa44603abc49d0d10d66c6d19378",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4287749_ae707af0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1019013
      },
      "writtenOn": "2024-02-13T13:48:48Z",
      "side": 1,
      "message": "Seems like that we\u0027re on the same page -- we all like more tests ðŸ˜Š.\n\nBut let me answer your questions here.\n\n\n\u003e I don\u0027t think that we need to do anything fancy to enable such testing. Making host responsible for constructing the DT instead of simply copying the reference DT from the ABL should be enough (in case of pVMs the pvmfw will still be responsible for validating the DT). Although I might be missing something here\n\nI only meant that \u0027Making host responsible for constructing the DT instead of simply copying the reference DT from the ABL\u0027 would be a test only feature. I think that test relies on real code path should be prioritized more than with fake data, especially when the former can be in CTS and the latter cannot be in the CTS.\n\nTo clarify, I\u0027m not saying that we\u0027ll stop here. I would add more tests with test vendor image with more coverage. However, vendor/OEM/.. are less motivated to run our tests if it\u0027s a xTS. I would prefer writing CTS to make all Androids more secure.",
      "parentUuid": "2c031c7e_845f5aee",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 26
      },
      "revId": "01c4f57431b9fa44603abc49d0d10d66c6d19378",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa7d070b_bc183d1f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1882526
      },
      "writtenOn": "2024-02-13T14:04:48Z",
      "side": 1,
      "message": "AFAICT, the more urgent change is to provide a way to inject a fake VM reference into the host. Ideally, that \"test interface\" would pass a path to a file structure similar to `/proc/device-tree` (pushed to `/data`) so that most of the code executed by the test remains unchanged (including the input parsers).\n\nOn top of that, we\u0027d implement vendor image tests (by `adb push`-ing the hashtree to that pseudo-DT FS) and other similar tests, enabling almost-E2E testing of vendor guest images in PS. Given how close to ABL that \"test interface\" will be, a subset of these tests (those which expect everything to go well) could even become part of CTS, where they\u0027d run with the actual `/proc/device-tree`.\n\nAt first, only non-protected VMs (and protected-without-firmware?) will be covered by these tests but testing will then be extended to protected-with-firmware once we\u0027ve ported the DP infrastructure to this new use-case, expanding the PS test coverage to our pvmfw code. For the CTS subset mentioned above, regular pVMs will be used (validating the device\u0027s pvmfw).\n\nDo we all agree on this?",
      "parentUuid": "f4287749_ae707af0",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 26
      },
      "revId": "01c4f57431b9fa44603abc49d0d10d66c6d19378",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87078dea_76056478",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1432579
      },
      "writtenOn": "2024-02-13T14:26:27Z",
      "side": 1,
      "message": "\u003e I only meant that \u0027Making host responsible for constructing the DT instead of simply copying the reference DT from the ABL\u0027 would be a test only feature\n\nThis won\u0027t be a test-only feature though. I am suggesting we use this code path for both protected \u0026 non-protected VMs. We anyway need host to create a DT for the VmId feature Shikha is working on\n\nIn fact, this approach aligns with your idea on writing more CTS test, since these tests won\u0027t rely on file on /vendor partition. We will have more vendor-agnostic tests. Additionally, it will allow vendors to prototype their microdroid-vendor.img without doing changes in ABL.\n\n\u003e AFAICT, the more urgent change is to provide a way to inject a fake VM reference into the host\n\nI am proposing the opposite change though :)",
      "parentUuid": "fa7d070b_bc183d1f",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 26
      },
      "revId": "01c4f57431b9fa44603abc49d0d10d66c6d19378",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c096a6e_3651f94a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1019013
      },
      "writtenOn": "2024-02-13T16:37:42Z",
      "side": 1,
      "message": "\u003e This won\u0027t be a test-only feature though. I am suggesting we use this code path for both protected \u0026 non-protected VMs. We anyway need host to create a DT for the VmId feature Shikha is working on\n\nI\u0027m little confused here. For normal use cases, virtmgr will create overlay DT from hardcoded path `/proc/device-tree/avf/reference` (which we believe to be safe because only ABL will write here) and randomly generated insecure VM ID (from shikha\u0027s recent change). This CL tests whether the normal case works as expected (i.e. can load built-in vendor image).\n\nIf we would like to load arbitrary vendor image nor test invalid vendor image hashkey, the overlay DT should be come from somewhere else. I call it as test feature because it shouldn\u0027t be used on production device.\n\nNikita, could you confirm whether we\u0027re on the same page for this?\n\nAgain, I\u0027m not opposing to add such features for rich test cases, but this CL is already written for simpler purpose.",
      "parentUuid": "87078dea_76056478",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 26
      },
      "revId": "01c4f57431b9fa44603abc49d0d10d66c6d19378",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e299772_5bb0e8ca",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1432579
      },
      "writtenOn": "2024-02-13T17:59:56Z",
      "side": 1,
      "message": "What I am saying is, that there is no need on host side to simply copy the /proc/device-tree/avf/reference. Instead, virtmngr can read it, get the rootdiget of the microdroid-vendor.img that was passed in VirtualMachineAppConfig (https://cs.android.com/android/platform/superproject/main/+/main:packages/modules/Virtualization/virtualizationservice/aidl/android/system/virtualizationservice/VirtualMachineAppConfig.aidl;l\u003d110;drc\u003d6ef80977be32b8280118264c554e1a3fad30d384), and inject the value into the DT. Basically what @seungjaeyoo@google.com implemented before VM reference DT.\n\nThis won\u0027t affect the security of the pVMs, since pvmfw will only allow the rootdigest that was passed to it from ABL, and reject any other. However, this will make it easier to test non-protected VMs, and interact on the content of microdroid-vendor.img during development.\n\nAdditionally, from my chat with @alanstokes@google.com it sounds like this approach will also help with testing how microdroid vendor partition interacts with DICE chain. Alan, please correct me if I misunderstood you",
      "parentUuid": "1c096a6e_3651f94a",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 26
      },
      "revId": "01c4f57431b9fa44603abc49d0d10d66c6d19378",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}