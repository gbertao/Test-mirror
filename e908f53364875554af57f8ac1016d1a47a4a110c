{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "88fbc4bd_9da6bdc8",
        "filename": "private/seapp_contexts",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2023-01-17T10:58:11Z",
      "side": 1,
      "message": "You lose almost all of the properties that you want by doing this. I think you need a new selinux context with least privileged selinux permissions.",
      "range": {
        "startLine": 45,
        "startChar": 10,
        "endLine": 45,
        "endChar": 30
      },
      "revId": "e908f53364875554af57f8ac1016d1a47a4a110c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51787e73_12854e42",
        "filename": "private/seapp_contexts",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1985265
      },
      "writtenOn": "2023-01-17T17:18:27Z",
      "side": 1,
      "message": "I am not sure if this makes sense but this is what I have in mind - we need a mechanism that selects apps with one of the isolated UIDs and make it run under the context other than `isolated_app`, which being said is not actually an isolated app but just a normal app that reuses one of the isolated UIDs. That\u0027s why I put the `untrusted_app` domain as a default context for these cases.\n\nOur sandboxed detection project provides every vendor with their own freedom to have different implementations (which evolves fast and needs to change the policy all the time) that have a separated UID and being also secured by their own policies. Therefore we leverage this mechanism, and also provide a way that the vendors can choose to define their apps in a more strict context. They are able to write their own `seapp_contexts` with the package name selector. If they choose not to, their UID separated app will run in the `untrusted_app` domain, which is intended as they are just normal apps with a UID borrowed from `isolated_app`.",
      "parentUuid": "88fbc4bd_9da6bdc8",
      "range": {
        "startLine": 45,
        "startChar": 10,
        "endLine": 45,
        "endChar": 30
      },
      "revId": "e908f53364875554af57f8ac1016d1a47a4a110c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cb7ad83_1309b1b6",
        "filename": "private/seapp_contexts",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1622353
      },
      "writtenOn": "2023-01-17T19:50:29Z",
      "side": 1,
      "message": "\u003e Our sandboxed detection project provides every vendor with their own freedom to have different implementations\n\nCan we please not follow this pattern? Android has to define what\u0027s acceptable and what is not for all of the vendors - then it\u0027s a bit cleaner to reason about security and privacy of the solution.",
      "parentUuid": "51787e73_12854e42",
      "range": {
        "startLine": 45,
        "startChar": 10,
        "endLine": 45,
        "endChar": 30
      },
      "revId": "e908f53364875554af57f8ac1016d1a47a4a110c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f92a3a00_9ebb4315",
        "filename": "private/seapp_contexts",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1985265
      },
      "writtenOn": "2023-01-18T01:01:20Z",
      "side": 1,
      "message": "I think I understand Sergey \u0026 Jeff\u0027s concern. \n\nSince we are introducing a new framework feature, we also need a corresponding SePolicy that is a part of the to verify the feature is secure. We cannot depend on vendors to follow this pattern. \n\nI have created a new .te that ensures the security requirement is enforced. It is basically isolated process with extra permissions on service managers and binders.\n\nThank you for bringing up the concern!",
      "parentUuid": "9cb7ad83_1309b1b6",
      "range": {
        "startLine": 45,
        "startChar": 10,
        "endLine": 45,
        "endChar": 30
      },
      "revId": "e908f53364875554af57f8ac1016d1a47a4a110c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a329e2b0_24777845",
        "filename": "private/seapp_contexts",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1985265
      },
      "writtenOn": "2023-01-18T17:17:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f92a3a00_9ebb4315",
      "range": {
        "startLine": 45,
        "startChar": 10,
        "endLine": 45,
        "endChar": 30
      },
      "revId": "e908f53364875554af57f8ac1016d1a47a4a110c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}