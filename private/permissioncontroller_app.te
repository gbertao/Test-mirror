###
### A domain for further sandboxing the GooglePermissionController app.
###
type permissioncontroller_app, domain;

# Allow everything.
# TODO(b/142672293): remove when no selinux denials are triggered for this
# domain
# STOPSHIP(b/142672293): monitor http://go/sedenials for any denials around
# `permissioncontroller_app` and remove this line once we are confident about
# this having the right set of permissions.
userdebug_or_eng(`permissive permissioncontroller_app;')

app_domain(permissioncontroller_app)

# Allow interaction with gpuservice
binder_call(permissioncontroller_app, gpuservice)
allow permissioncontroller_app gpu_service:service_manager find;

# Allow interaction with role
binder_call(permissioncontroller_app, role)
allow permissioncontroller_app role_service:service_manager find;

# Allow interaction with usagestats
binder_call(permissioncontroller_app, usagestats)
allow permissioncontroller_app usagestats_service:service_manager find;

# Allow interaction with activity
binder_call(permissioncontroller_app, activity)
allow permissioncontroller_app activity_service:service_manager find;
