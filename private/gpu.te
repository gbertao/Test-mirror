# gpu service
type gpu, domain, coredomain;
type gpu_exec, system_file_type, exec_type, file_type;

init_daemon_domain(gpu)

binder_call(gpu, adbd)
binder_call(gpu, shell)
binder_use(gpu)

# Access the GPU.
allow gpu gpu_device:chr_file rw_file_perms;

# GPU service will need to load GPU driver, for example Vulkan driver in order
# to get the capability of the driver.
allow gpu same_process_hal_file:file { open read getattr execute map };
allow gpu ion_device:chr_file r_file_perms;
get_prop(gpu, hwservicemanager_prop)
hwbinder_use(gpu)

# Access /dev/graphics/fb0.
allow gpu graphics_device:dir search;
allow gpu graphics_device:chr_file rw_file_perms;

# Use socket supplied by adbd, for cmd gpu vkjson etc.
allow gpu adbd:unix_stream_socket { read write getattr };

add_service(gpu, gpu_service)

# Only uncomment below line when in development
# userdebug_or_eng(`permissive gpu;')
