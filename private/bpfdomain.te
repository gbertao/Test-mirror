# platform should have ownership of network attachpoints for BPF
neverallow {
  bpfdomain
  -bpfloader
  -netd
  -netutils_wrapper
  -network_stack
  -system_server
} self:global_capability_class_set { net_admin net_raw };

# any domain which uses bpf is a bpfdomain
neverallow { domain -bpfdomain } *:bpf *;

# needed to be able to traverse through /sys/fs/bpf
allow bpfdomain fs_bpf:dir search;

# fs_bpf is the generic 'not more tightly' controlled context,
# protection should happen either by using a more specific
# fs_bpf_... context, or by using standard uid/gid permissions
allow bpfdomain fs_bpf:file { getattr read write };

# it's rare that bpf user will not need these,
# while technically you could only need 'map_read', or only 'map_write',
# or only attach programs ('prog_run') and not use maps at all,
# but it seems easier to just grant access here.
allow bpfdomain bpfloader:bpf { map_read map_write prog_run };

# genfscon doesn't seem to trigger during symlink creation,
# and thus any created symlinks end up as 'fs_bpf:lnk_type',
# however this feels like a kernel bug / missing feature,
# so let's allow all bpffs_type's instead,
# this will keep things working even if this is fixed.
allow bpfdomain bpffs_type:lnk_file read;

# Needed for //frameworks/libs/net:
# common/native/bpf_headers/include/bpf/WaitForProgsLoaded.h
get_prop(bpfdomain, bpf_progs_loaded_prop)
