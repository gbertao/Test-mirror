{
  "comments": [
    {
      "key": {
        "uuid": "9b304dcb_5db0229a",
        "filename": "public/postinstall_dexopt.te",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-01-20T13:30:52Z",
      "side": 1,
      "message": "Why did we not need this before? (the rule doesn\u0027t read like apex related?)",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 57
      },
      "revId": "bec634768511ba6196a0da91d8e055e296d63d3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16cb1ddb_95172f9d",
        "filename": "public/postinstall_dexopt.te",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2019-01-20T21:09:48Z",
      "side": 1,
      "message": "I\u0027m not sure why it\u0027s needed.\n\nI initially faced a denial regarding the execution of dex2oat from the APEX:\n\n  01-18 16:55:44.885 11022 11022 V installd: DexInv: --- BEGIN \u0027/system/priv-app/GoogleExtServices/GoogleExtServices.apk\u0027 ---\n  01-18 16:55:44.883 11036 11036 W otapreopt: type\u003d1400 audit(0.0:8): avc: denied { execute } for name\u003d\"dex2oat\" dev\u003d\"loop8\" ino\u003d131 scontext\u003du:r:postinstall_dexopt:s0 tcontext\u003du:object_r:dex2oat_exec:s0 tclass\u003dfile permissive\u003d0\n  01-18 16:55:44.889 11036 11036 E installd: execv(/apex/com.android.runtime/bin/dex2oat) failed: Permission denied\n  01-18 16:55:44.890 11022 11022 V installd: DexInv: --- END \u0027/system/priv-app/GoogleExtServices/GoogleExtServices.apk\u0027 --- status\u003d0x4800, process failed\n  01-18 16:55:44.891 11022 11022 W otapreopt: Downgrading compiler filter in an attempt to progress compilation\n  01-18 16:55:44.892 11022 11022 V installd: DexInv: --- BEGIN \u0027/system/priv-app/GoogleExtServices/GoogleExtServices.apk\u0027 ---\n  01-18 16:55:44.890 11037 11037 W otapreopt: type\u003d1400 audit(0.0:9): avc: denied { execute } for name\u003d\"dex2oat\" dev\u003d\"loop8\" ino\u003d131 scontext\u003du:r:postinstall_dexopt:s0 tcontext\u003du:object_r:dex2oat_exec:s0 tclass\u003dfile permissive\u003d0\n  01-18 16:55:44.895 11037 11037 E installd: execv(/apex/com.android.runtime/bin/dex2oat) failed: Permission denied\n  01-18 16:55:44.896 11022 11022 V installd: DexInv: --- END \u0027/system/priv-app/GoogleExtServices/GoogleExtServices.apk\u0027 --- status\u003d0x4800, process failed\n\n`audit2allow` suggested to add this policy:\n\n  allow postinstall_dexopt dex2oat_exec:file execute;\n\nwhich I did. After that, I had other read \u0026 open denials on dex2oat from the APEX:\n\n  01-18 19:48:50.151 10243 10243 V installd: DexInv: --- BEGIN \u0027/system/priv-app/GoogleExtServices/GoogleExtServices.apk\u0027 ---\n  01-18 19:48:50.150 10257 10257 W otapreopt: type\u003d1400 audit(0.0:9): avc: denied { read open } for path\u003d\"/apex/com.android.runtime/bin/dex2oat\" dev\u003d\"loop7\" ino\u003d101 scontext\u003du:r:postinstall_dexopt:s0 tcontext\u003du:object_r:dex2oat_exec:s0 tclass\u003dfile permissive\u003d0\n  01-18 19:48:50.154 10257 10257 E installd: execv(/apex/com.android.runtime/bin/dex2oat) failed: Permission denied\n  01-18 19:48:50.155 10243 10243 V installd: DexInv: --- END \u0027/system/priv-app/GoogleExtServices/GoogleExtServices.apk\u0027 --- status\u003d0x4800, process failed\n  01-18 19:48:50.155 10243 10243 W otapreopt: Downgrading compiler filter in an attempt to progress compilation\n  01-18 19:48:50.156 10243 10243 V installd: DexInv: --- BEGIN \u0027/system/priv-app/GoogleExtServices/GoogleExtServices.apk\u0027 ---\n  01-18 19:48:50.157 10258 10258 E installd: execv(/apex/com.android.runtime/bin/dex2oat) failed: Permission denied\n  01-18 19:48:50.153 10258 10258 W otapreopt: type\u003d1400 audit(0.0:10): avc: denied { read open } for path\u003d\"/apex/com.android.runtime/bin/dex2oat\" dev\u003d\"loop7\" ino\u003d101 scontext\u003du:r:postinstall_dexopt:s0 tcontext\u003du:object_r:dex2oat_exec:s0 tclass\u003dfile permissive\u003d0\n  01-18 19:48:50.158 10243 10243 V installd: DexInv: --- END \u0027/system/priv-app/GoogleExtServices/GoogleExtServices.apk\u0027 --- status\u003d0x4800, process failed\n\n`audit2allow` suggested to add this policy:\n\n  allow postinstall_dexopt dex2oat_exec:file { open read };\n\nSo I added the following policy, which combines read + execute permissions:\n\n  allow postinstall_dexopt dex2oat_exec:file rx_file_perms;",
      "parentUuid": "9b304dcb_5db0229a",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 57
      },
      "revId": "bec634768511ba6196a0da91d8e055e296d63d3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c033fed_397701ae",
        "filename": "public/postinstall_dexopt.te",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2019-01-20T21:33:26Z",
      "side": 1,
      "message": "Let\u0027s not add something without understanding why it\u0027s needed please. In theory, every SELinux change should be traceable back to a CL which induced the behavior.\n\nMy understanding is that, as part of the postinstall_dexopt stage, the dex2oat on the postinstall_file mounted partition is suppose to be used, not the version from the /system or /apex directories.\n\nThis is one of my fears with the APEX work. We now have so many different ways to generate oat files (pre-ota, post-ota) from so many different dex2oats (/system/bin/dex2oat, /apex/bin, the post-install file mounted prior to OTAs, etc), that the complexity is going through the roof.",
      "parentUuid": "16cb1ddb_95172f9d",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 57
      },
      "revId": "bec634768511ba6196a0da91d8e055e296d63d3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37fae47b_50a0dc91",
        "filename": "public/postinstall_dexopt.te",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-01-21T07:48:27Z",
      "side": 1,
      "message": "/system/bin/dex2oat is going away, the apex work is mostly changing the path, really. I agree with you needing to mount the apex to do ota_preopt is adding complexity, though that\u0027s a consequence of the apex work in general, not the runtime apex.",
      "parentUuid": "5c033fed_397701ae",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 57
      },
      "revId": "bec634768511ba6196a0da91d8e055e296d63d3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "647d0f8b_053b3747",
        "filename": "public/postinstall_dexopt.te",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2019-01-22T14:48:36Z",
      "side": 1,
      "message": "I think I understand why we need this. When `/system/bin/otapreopt_chroot` executes `/system/bin/otapreopt` in the `/postinstall chroot` directory (i.e. `/postinstall/system/bin/otapreopt`), it transitions to domain `postinstall_dexopt` via this rule because `/postinstall/system/bin/otapreopt` is of type `postinstall_file`:\n\n  domain_auto_trans(otapreopt_chroot, postinstall_file, postinstall_dexopt)\n\nBefore this CL, when we had `otapreopt` run `/system/bin/dex2oat` (i.e. `/postinstall/system/bin/dex2oat`), it would transition to domain `dex2oat` because of this rule:\n\n  domain_auto_trans(postinstall_dexopt, postinstall_file, dex2oat)\n\nand everything would be fine.\n\nBut as we now execute `/apex/com.android.runtime/bin/dex2oat` (i.e. `/postinstall/apex/com.android.runtime/bin/dex2oat`), the previous rule does not apply, as that file is of type `dex2oat_exec`. I believe changing the transition rule to\n\n  domain_auto_trans(postinstall_dexopt, dex2oat_exec, dex2oat)\n\nshould address the issue without the need for line 19. I\u0027ll implement this in my next patch set.",
      "parentUuid": "37fae47b_50a0dc91",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 57
      },
      "revId": "bec634768511ba6196a0da91d8e055e296d63d3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06cf0c44_5edecdf9",
        "filename": "public/postinstall_dexopt.te",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2019-01-22T16:31:34Z",
      "side": 1,
      "message": "Roland\u0027s comment is correct. /postinstall has a single file label, while now the APEX out of /postinstall is mounted.\n\n(Note that this implies that A/B OTA upgrading releases might break otadexopt if the label changes.)",
      "parentUuid": "647d0f8b_053b3747",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 57
      },
      "revId": "bec634768511ba6196a0da91d8e055e296d63d3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5db0991b_a7121d00",
        "filename": "public/postinstall_dexopt.te",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2019-01-22T18:12:24Z",
      "side": 1,
      "message": "Implemented in PS2.",
      "parentUuid": "06cf0c44_5edecdf9",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 57
      },
      "revId": "bec634768511ba6196a0da91d8e055e296d63d3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}