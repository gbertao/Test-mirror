{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "03e78879_011819d3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2022-10-28T01:39:45Z",
      "side": 1,
      "message": "why can\u0027t we mock the property, instead of giving the permission to `remote_prov_app`?",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 15,
        "endChar": 58
      },
      "revId": "c023b6e78766ac884d6b3eee032574bc93dd76dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff03b87b_46b71d36",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1139038
      },
      "writtenOn": "2022-10-28T10:10:37Z",
      "side": 1,
      "message": "The test call flow is:\n\n  test -\u003e keystore -\u003e RemoteProvisioner\n  \nwhere RemoteProvisioner is reading the property, but the test wants to control it. So it unfortunately doesn\u0027t seem able to mock it, but maybe there\u0027s some other technique we could use? I agree that it\u0027s unfortunate to adjust the sepolicy for a test like this.",
      "parentUuid": "03e78879_011819d3",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 15,
        "endChar": 58
      },
      "revId": "c023b6e78766ac884d6b3eee032574bc93dd76dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecf80d49_510f0553",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1139038
      },
      "writtenOn": "2022-10-28T10:16:12Z",
      "side": 1,
      "message": "Sorry, keystore is the one that reads the property.",
      "parentUuid": "ff03b87b_46b71d36",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 15,
        "endChar": 58
      },
      "revId": "c023b6e78766ac884d6b3eee032574bc93dd76dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "287e2c43_8c1366ae",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2022-10-28T10:36:22Z",
      "side": 1,
      "message": "ack. It should be acceptable as we have neverallow rules.",
      "parentUuid": "ecf80d49_510f0553",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 15,
        "endChar": 58
      },
      "revId": "c023b6e78766ac884d6b3eee032574bc93dd76dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a10d21ea_c3eda5c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2022-10-28T08:21:37Z",
      "side": 1,
      "message": "Is there a related bug?",
      "revId": "c023b6e78766ac884d6b3eee032574bc93dd76dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32ca3a3a_f5cbb744",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1139038
      },
      "writtenOn": "2022-10-28T10:10:37Z",
      "side": 1,
      "message": "Theres is now",
      "parentUuid": "a10d21ea_c3eda5c6",
      "revId": "c023b6e78766ac884d6b3eee032574bc93dd76dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}