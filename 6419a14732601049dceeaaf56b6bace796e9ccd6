{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c661f2a1_1254dbbe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2021-03-10T06:35:17Z",
      "side": 1,
      "message": "Seems ok to me as we still have neverallow rules to avoid unnecessary access.\n\nLet\u0027s see if David, Jeff have other thoughts or not.",
      "revId": "6419a14732601049dceeaaf56b6bace796e9ccd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "410660a1_c2cfd675",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-03-15T04:10:48Z",
      "side": 1,
      "message": "ping, Jeff PTAL",
      "revId": "6419a14732601049dceeaaf56b6bace796e9ccd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "224183b1_63f1a48f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2021-03-15T04:15:34Z",
      "side": 1,
      "message": "Just found that this change is relevant to aosp/1600874.\n\nBut Yo\u0027s change here seems fix the fundamental issue rather than allowing specific domain (e.g., ueventd) to access gsi_public_metadata_file.\n\nThought?",
      "revId": "6419a14732601049dceeaaf56b6bace796e9ccd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e714895_9118c9ee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-03-15T05:52:15Z",
      "side": 1,
      "message": "Yeah aosp/1600874 seems to be fixing the same issue for the \"dumpstate\" process. However it is only allowing \"gsi_metadata_file:dir search\" but not \"gsi_metadata_file:file read\" so I suspect the fix (aosp/1600874) alone is not enough to make the denials go away.\n\nI\u0027d like to submit this change so we don\u0027t need to add rules to specific domain every time we see a new denial, and we can avoid the case like aosp/1600874 where some allow rules are missed.",
      "parentUuid": "224183b1_63f1a48f",
      "revId": "6419a14732601049dceeaaf56b6bace796e9ccd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af29065a_7c43bcad",
        "filename": "private/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2021-03-15T17:34:52Z",
      "side": 1,
      "message": "Why is this desirable? Why do 3p apps need access to files here?",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 101,
        "endChar": 41
      },
      "revId": "6419a14732601049dceeaaf56b6bace796e9ccd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb90bf5f_5b0f554c",
        "filename": "private/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-03-15T17:39:40Z",
      "side": 1,
      "message": "An example was that vendor ramdump service would want to read the fstab through libfstab, which read() / faccess() these files to determine the fstab.\n\nIf we don\u0027t have this rule, then different process would see different fstab, depending on whether the process has the access rights to these files or not.",
      "parentUuid": "af29065a_7c43bcad",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 101,
        "endChar": 41
      },
      "revId": "6419a14732601049dceeaaf56b6bace796e9ccd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb8a63b4_18a06f09",
        "filename": "private/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2021-03-16T12:47:32Z",
      "side": 1,
      "message": "That doesn\u0027t answer my question.\n\nSelinux policy should follow the principle of least privilege. Only selinux domains that require access should be granted access. If vendor ramdump service requires access, then trant it access, but that\u0027s not what this change does. This change grants everything access.",
      "parentUuid": "bb90bf5f_5b0f554c",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 101,
        "endChar": 41
      },
      "revId": "6419a14732601049dceeaaf56b6bace796e9ccd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "463994fa_e602abb3",
        "filename": "private/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-03-16T13:20:59Z",
      "side": 1,
      "message": "(1) Since libfstab is linkable by any domain, and libfstab reads these files, I thought it\u0027s reasonable to make these files world-readable, like \"/vendor/etc/fstab\" is already world-readable.\n(2) I cannot modify the vendor policies. This access denial happens when testing CTS-on-GSI, where system in S GSI and vendor is S, R, Q. Adding this allow rule to domain solves this problem without modifying vendor policies.",
      "parentUuid": "bb8a63b4_18a06f09",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 101,
        "endChar": 41
      },
      "revId": "6419a14732601049dceeaaf56b6bace796e9ccd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f25e8cd_73116993",
        "filename": "private/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-03-16T13:29:09Z",
      "side": 1,
      "message": "I mean, I think gsi_public_metadata_file should be world readable like /vendor/etc/fstab, because they are accessed at the same time.\ngranting a domain only the read access of fstab but not gsi metadata files doesn\u0027t make sense",
      "parentUuid": "463994fa_e602abb3",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 101,
        "endChar": 41
      },
      "revId": "6419a14732601049dceeaaf56b6bace796e9ccd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db3bbd79_f4f7e83c",
        "filename": "private/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2021-03-16T13:42:23Z",
      "side": 1,
      "message": "Can you point me to the API\u0027s documentation or API council review that shows that this is a public API that 3p apps should have access to? Is there a CTS test that\u0027s broken without this? If not, then please don\u0027t grant access. Unnecessary access to undocumented APIs is a major source of app-compat issues.\n\n\u003e I mean, I think gsi_public_metadata_file should be world readable like /vendor/etc/fstab, because they are accessed at the same time.\n\u003e granting a domain only the read access of fstab but not gsi metadata files doesn\u0027t make sense\n\nProcesses unnecessarily having access to files and libraries that they don\u0027t use isn\u0027t a good reason to grant them access to more things that they don\u0027t need.",
      "parentUuid": "463994fa_e602abb3",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 101,
        "endChar": 41
      },
      "revId": "6419a14732601049dceeaaf56b6bace796e9ccd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "869eab78_60cd015e",
        "filename": "private/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-03-16T14:06:11Z",
      "side": 1,
      "message": "\u003e Can you point me to the API\u0027s documentation or API council review that shows that this is a public API that 3p apps should have access to? Is there a CTS test that\u0027s broken without this? If not, then please don\u0027t grant access. Unnecessary access to undocumented APIs is a major source of app-compat issues.\n\n\nI don\u0027t think this is a public API, and the makefile (https://cs.android.com/android/platform/superproject/+/master:system/core/fs_mgr/Android.bp;drc\u003dd69ad69a938a27021adfcc2435dc1fd2ad0c8e1a;l\u003d166) even says that this is not a stable interface.\nNo test is broken, but our test infra and development workflow is broken. The linked bug is a scenario where the administrative process \"ramdump\" accidentally bricks the device under test because it has read a wrong fstab.\nOur test bench suffered from device unresponsive error, though it is workarounded at the moment, but our development workflow is still broken.\n\nI agree these APIs should be mandated, but the problem now is that these APIs are already statically linked and used by vendor processes.\n\nAnother point is that, libfstab being vendor_available makes us not possible to track the users of libfstab, and also not possible to grant access to vendor domain due to the neverallow rules.\n\n\nHow about we schedule a meeting so I can explain my intention clearer?",
      "parentUuid": "db3bbd79_f4f7e83c",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 101,
        "endChar": 41
      },
      "revId": "6419a14732601049dceeaaf56b6bace796e9ccd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4c71c07_8d9499b3",
        "filename": "private/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2021-03-16T15:06:11Z",
      "side": 1,
      "message": "The mapping file in private/compat/30/30.0.cil provides backwards compatibility for processes that had access to the previous type. How come that is not sufficient here?",
      "parentUuid": "869eab78_60cd015e",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 101,
        "endChar": 41
      },
      "revId": "6419a14732601049dceeaaf56b6bace796e9ccd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c4d8c68_7074520a",
        "filename": "private/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2021-03-16T15:11:58Z",
      "side": 1,
      "message": "The other place you can look: there are compat files that can be used to grant permissions to vendor processes when the vendor partition is not updated.\n\nhttps://cs.android.com/android/platform/superproject/+/master:system/sepolicy/private/compat/30.0/30.0.compat.cil;l\u003d1?q\u003dvendordomain\u0026sq\u003d",
      "parentUuid": "b4c71c07_8d9499b3",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 101,
        "endChar": 41
      },
      "revId": "6419a14732601049dceeaaf56b6bace796e9ccd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fccf4f7e_45e95f36",
        "filename": "private/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-03-16T15:43:39Z",
      "side": 1,
      "message": "Ah great, I\u0027ll try that path.\n\nSo...\nfor previous version vendors, allow access to gsi_public_metadata_file with the company policies.\nfor latest version vendor, allow any domain to grant itself read permissions to gsi_public_metadata_file.\nalso change ReadDefaultFstab to error if current domain have no read permission of gsi_public_metadata_file.\n\nsg?",
      "parentUuid": "4c4d8c68_7074520a",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 101,
        "endChar": 41
      },
      "revId": "6419a14732601049dceeaaf56b6bace796e9ccd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17eb0370_cbb480af",
        "filename": "private/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2021-03-16T15:44:29Z",
      "side": 1,
      "message": "*compat policy, not company policy...",
      "parentUuid": "fccf4f7e_45e95f36",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 101,
        "endChar": 41
      },
      "revId": "6419a14732601049dceeaaf56b6bace796e9ccd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac9ea8cb_576c86c7",
        "filename": "private/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2021-03-16T17:10:06Z",
      "side": 1,
      "message": "yeah, sgtm.",
      "parentUuid": "17eb0370_cbb480af",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 101,
        "endChar": 41
      },
      "revId": "6419a14732601049dceeaaf56b6bace796e9ccd6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}