{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e4856a0a_3239f294",
        "filename": "private/artd.te",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-10-16T12:39:15Z",
      "side": 1,
      "message": "I must be missing something, but afaics tmpfs covers /mnt and a couple other locations, but not /proc (https://cs.android.com/android/platform/superproject/main/+/main:system/sepolicy/private/file_contexts;l\u003d29-32;drc\u003d57056e5249c397d0c1dd5f5acc721dd198751bb5). Isn\u0027t it /proc we need access to to open /proc/self/\u003cfd\u003e, i.e. the rootfs label?",
      "range": {
        "startLine": 144,
        "startChar": 16,
        "endLine": 144,
        "endChar": 21
      },
      "revId": "4d70f0bf4b9cb6915380e7edf429961546a2eed7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af06e6dd_f107fa5f",
        "filename": "private/artd.te",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-10-16T12:51:37Z",
      "side": 1,
      "message": "artd_tmpfs is different from tmpfs. (`tmpfs_domain(artd)` above defines it and provides for it to be applied when artd creates tmpfs via memfd.)\n\nAnd there\u0027s some magic that means the files under /proc/self/fd end up with the same labels as the actual files the fds refer to.",
      "parentUuid": "e4856a0a_3239f294",
      "range": {
        "startLine": 144,
        "startChar": 16,
        "endLine": 144,
        "endChar": 21
      },
      "revId": "4d70f0bf4b9cb6915380e7edf429961546a2eed7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a843991_14534774",
        "filename": "private/artd.te",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2023-10-16T12:52:23Z",
      "side": 1,
      "message": "This rule is not about `tmpfs`. It\u0027s about `artd_tmpfs`. The macro on line 28 makes the type transition when artd creates a memfd.",
      "parentUuid": "e4856a0a_3239f294",
      "range": {
        "startLine": 144,
        "startChar": 16,
        "endLine": 144,
        "endChar": 21
      },
      "revId": "4d70f0bf4b9cb6915380e7edf429961546a2eed7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12eb4b2c_ad7a4697",
        "filename": "private/artd.te",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-10-16T13:36:38Z",
      "side": 1,
      "message": "I noticed that, but looking at the `tmpfs_domain` macro I figured `artd_tmpfs` is still based on the `tmpfs` definition since it\u0027s a transition from the latter - it doesn\u0027t appear to be defined from scratch there.\n\nSo I still fail to connect the dots how memfd\u0027s end up being covered by the `artd_tmpfs` label and not something else. Where\u0027s that specified?",
      "parentUuid": "1a843991_14534774",
      "range": {
        "startLine": 144,
        "startChar": 16,
        "endLine": 144,
        "endChar": 21
      },
      "revId": "4d70f0bf4b9cb6915380e7edf429961546a2eed7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0744172_1f322a55",
        "filename": "private/artd.te",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-10-16T13:50:38Z",
      "side": 1,
      "message": "That\u0027s what a transition does - `type_transition artd tmpfs:file artd_tmpfs;` says that if artd creates a file that would be labeled tmpfs, it instead gets the label artd_tmpfs.\nAnd despite the similar names they are otherwise unrelated from the point of view of selinux.\nartf_tmpfs is actually defined (fairly minimally) over here: https://cs.android.com/android/platform/superproject/main/+/main:system/sepolicy/private/artd.te;drc\u003d8a250b9099b68ee4f312f7d2d712044c058992e9;l\u003d5",
      "parentUuid": "12eb4b2c_ad7a4697",
      "range": {
        "startLine": 144,
        "startChar": 16,
        "endLine": 144,
        "endChar": 21
      },
      "revId": "4d70f0bf4b9cb6915380e7edf429961546a2eed7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cda949a4_9df16f6b",
        "filename": "private/artd.te",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-10-16T14:09:09Z",
      "side": 1,
      "message": "Right, but where I have a gap is how a memfd ends up being covered by `(whathaveyou_)?tmpfs` in the first place.",
      "parentUuid": "c0744172_1f322a55",
      "range": {
        "startLine": 144,
        "startChar": 16,
        "endLine": 144,
        "endChar": 21
      },
      "revId": "4d70f0bf4b9cb6915380e7edf429961546a2eed7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7418e451_b05d591e",
        "filename": "private/artd.te",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-10-16T14:23:44Z",
      "side": 1,
      "message": "AIUI, memfd_create is equivalent to mounting a tmpfs and creating a file on it.\nAnd we have this rule that says any file on a tmpfs filesystem gets labeled tmpfs: https://cs.android.com/android/platform/superproject/main/+/main:system/sepolicy/private/fs_use;l\u003d23. See also https://selinuxproject.org/page/FileStatements#fs_use_trans.\nSo I think that\u0027s how it works.",
      "parentUuid": "cda949a4_9df16f6b",
      "range": {
        "startLine": 144,
        "startChar": 16,
        "endLine": 144,
        "endChar": 21
      },
      "revId": "4d70f0bf4b9cb6915380e7edf429961546a2eed7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}