{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f88a59ae_c3560839",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1958315
      },
      "writtenOn": "2023-11-13T08:30:58Z",
      "side": 1,
      "message": "Hi,\n\nSince the RKPD fix has already landed, could you continue reviewing this cl?",
      "revId": "0407c993d85a6ced7861626c36c79b47cd0116c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f486f1b_ebe538f7",
        "filename": "public/service.te",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-10-31T20:48:42Z",
      "side": 1,
      "message": "this name is really long, and it\u0027s strange to have \u0027avf_\u0027 prefix, which we haven\u0027t had before.\n\nNormally, it would be expected that hal_remotelyprovisionedcomponent_service would be used for this as well, and we wouldn\u0027t introduce a new service type.\n\nOr do we need separate ACL for these two different services?",
      "range": {
        "startLine": 319,
        "startChar": 5,
        "endLine": 319,
        "endChar": 45
      },
      "revId": "0407c993d85a6ced7861626c36c79b47cd0116c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34f1e5f7_e65135e9",
        "filename": "public/service.te",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-11-01T09:59:33Z",
      "side": 1,
      "message": "We discussed that on the original CL (aosp/2738393) - I had much the same thought.\nBut it doesn\u0027t work, since there\u0027s an automatic neverallow (inside the add_service macro) preventing any other domain from registering a hal_remotelyprovisionedcomponent_service.\nAnd it feels wrong to have one domain for both, since it would allow keymint to pretend to be virtualizationservice and vice versa.",
      "parentUuid": "8f486f1b_ebe538f7",
      "range": {
        "startLine": 319,
        "startChar": 5,
        "endLine": 319,
        "endChar": 45
      },
      "revId": "0407c993d85a6ced7861626c36c79b47cd0116c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}