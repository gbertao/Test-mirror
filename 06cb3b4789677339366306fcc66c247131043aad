{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fa7c0ea5_a44a3ec6",
        "filename": "private/platform_app.te",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2022-03-04T01:47:32Z",
      "side": 1,
      "message": "remove this?",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 43,
        "endChar": 45
      },
      "revId": "06cb3b4789677339366306fcc66c247131043aad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7724f8f2_81c9144e",
        "filename": "private/platform_app.te",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1240085
      },
      "writtenOn": "2022-03-04T03:21:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa7c0ea5_a44a3ec6",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 43,
        "endChar": 45
      },
      "revId": "06cb3b4789677339366306fcc66c247131043aad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a411f914_42ccd5e6",
        "filename": "private/platform_app.te",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2022-03-04T01:47:32Z",
      "side": 1,
      "message": "I would add neverallow to ensure this only works in userdebug. Like,\n\n    neverallow { domain -init -dumpstate userdebug_or_eng(`-domain\u0027) } persist_wm_debug_prop:file no_rw_file_perms;",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 46,
        "endChar": 2
      },
      "revId": "06cb3b4789677339366306fcc66c247131043aad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3740d942_fb37cdd1",
        "filename": "private/platform_app.te",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 1240085
      },
      "writtenOn": "2022-03-04T03:21:13Z",
      "side": 1,
      "message": "This seems to create a bunch of violations: specifically, with this rule in place, nothing can { read open } this. Even if we don\u0027t want to set it in release, I think things need to be able to read it?",
      "parentUuid": "a411f914_42ccd5e6",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 46,
        "endChar": 2
      },
      "revId": "06cb3b4789677339366306fcc66c247131043aad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b0bf72e_a311f0dd",
        "filename": "private/platform_app.te",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2022-03-04T04:02:28Z",
      "side": 1,
      "message": "Well, does that mean that this prop named \"debug\" is actually used in the release? If it\u0027s the case, I find it\u0027s confusing.\n\nAnyway, then use this neverallow:\n\n    neverallow { domain -init -dumpstate userdebug_or_eng(`-domain\u0027) } persist_wm_debug_prop:property_service set;",
      "parentUuid": "3740d942_fb37cdd1",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 46,
        "endChar": 2
      },
      "revId": "06cb3b4789677339366306fcc66c247131043aad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0663549_acdb9619",
        "filename": "private/platform_app.te",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 1240085
      },
      "writtenOn": "2022-03-04T18:54:05Z",
      "side": 1,
      "message": "It\u0027s supposed to be same as `persist_debug_prop`. And yah usually debug, but that doesn\u0027t change the fact that we have code reading the property in release build (since it\u0027s java, we can\u0027t #ifdef it out or anything). There\u0027s also some use-cases where OEMs may turn on features early (via config) if they don\u0027t mind doing their own debugging.\n\nTBH I don\u0027t know the naming conventions well here. WM usually uses these properties on features which are in development (ie. the flag exists during development so that some people can enable it to test/work; then we turn on the flag by default, then when stable, we will remove the flag). Like I mentioned before, sometimes there are features that OEMs might enable earlier for particular use-cases. If you have suggestions for a better name to reflect those use-cases, I\u0027m happy to change it.\n\nBTW I added the new neverallow on set -- seems to work.",
      "parentUuid": "2b0bf72e_a311f0dd",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 46,
        "endChar": 2
      },
      "revId": "06cb3b4789677339366306fcc66c247131043aad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59db0314_36bbd886",
        "filename": "private/platform_app.te",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2022-03-07T01:26:29Z",
      "side": 1,
      "message": "The neverallow rule seems concrete, so LGTM. Let me ask just one more question, as I don\u0027t want to block you forever..\n\n\u003e It\u0027s supposed to be same as  persist_debug_prop. And yah usually debug, but that doesn\u0027t change the fact that we have code reading the property in release build (since it\u0027s java, we can\u0027t #ifdef it out or anything). There\u0027s also some use-cases where OEMs may turn on features early (via config) if they don\u0027t mind doing their own debugging.\n\n\u003e ie. the flag exists during development so that some people can enable it to test/work; then we turn on the flag by default, then when stable, we will remove the flag\n\nWe can\u0027t easily remove a type in system/sepolicy/public once added. If a partner write sepolicy rules about persist_wm_debug_prop, removing it will break their code. Why don\u0027t we just use persist_debug_prop, which is meant to be unstable? Or do you plan to add more debug/test wm properties?\n\n\u003e If you have suggestions for a better name to reflect those use-cases, I\u0027m happy to change it.\n\nI don\u0027t have one. However, thinking again, persist_wm_debug_prop is, at least, more fine-grained than just persist_debug_prop, so I think it\u0027s fine.",
      "parentUuid": "d0663549_acdb9619",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 46,
        "endChar": 2
      },
      "revId": "06cb3b4789677339366306fcc66c247131043aad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59521e51_a4aa850d",
        "filename": "private/platform_app.te",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 1240085
      },
      "writtenOn": "2022-03-07T17:28:38Z",
      "side": 1,
      "message": "\u003e If a partner write sepolicy rules about persist_wm_debug_prop\n\nThis is one of the expected use-cases. Partners tend to be a little more experimental with windowing features and sometimes those features require enabling things earlier than we do.\n\nIs there a way to prevent them from writing sepolicy rules while still allowing their configs to read/write the properties?\n\nIf I move `system_restricted_prop` line from public to privet/property.te will that work? Will they still be able to read it?\n\n\u003e Why don\u0027t we just use persist_debug_prop\n\nThis is what we were/are doing; however, we wanted to support switching our flags via FlagFlipper which is through system-ui -- since this makes it easier for the team to test/compare things. Since we didn\u0027t want to open up all of persist_debug_prop to systemui, it was suggested we make a \"subgroup\" of persist_debug_prop for these flags. That\u0027s what this mostly is.\n\n\u003e do you plan to add more debug/test wm properties?\n\nI think WM will probably switch to moving most of their properties to this \"subgroup\" so that they can be switchable via UI.",
      "parentUuid": "59db0314_36bbd886",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 46,
        "endChar": 2
      },
      "revId": "06cb3b4789677339366306fcc66c247131043aad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e82dfb0_ab143818",
        "filename": "private/shell.te",
        "patchSetId": 6
      },
      "lineNbr": 232,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2022-03-04T01:47:32Z",
      "side": 1,
      "message": "userdebug_or_eng?",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 232,
        "endChar": 38
      },
      "revId": "06cb3b4789677339366306fcc66c247131043aad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "247f6fa3_4d79d1a6",
        "filename": "private/shell.te",
        "patchSetId": 6
      },
      "lineNbr": 232,
      "author": {
        "id": 1240085
      },
      "writtenOn": "2022-03-04T03:21:13Z",
      "side": 1,
      "message": "I thought we are trying to mimic persist_debug_prop which can allegedly be set in release?\n\nIf not, I can add userdebug_or_eng back.",
      "parentUuid": "3e82dfb0_ab143818",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 232,
        "endChar": 38
      },
      "revId": "06cb3b4789677339366306fcc66c247131043aad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4c0c05c_b7068d53",
        "filename": "private/shell.te",
        "patchSetId": 6
      },
      "lineNbr": 232,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2022-03-04T04:02:28Z",
      "side": 1,
      "message": "I\u0027m just worried that this prop is then used like a convenient global variable, hard to keep stability. However, it\u0027s up to you. If you don\u0027t care about compatibility, then I\u0027m fine.",
      "parentUuid": "247f6fa3_4d79d1a6",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 232,
        "endChar": 38
      },
      "revId": "06cb3b4789677339366306fcc66c247131043aad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc0b4b52_ad223bb0",
        "filename": "private/shell.te",
        "patchSetId": 6
      },
      "lineNbr": 232,
      "author": {
        "id": 1240085
      },
      "writtenOn": "2022-03-04T18:54:05Z",
      "side": 1,
      "message": "Ah it looks like persist_debug_prop is also useredbug_or_eng, so I\u0027ll add it back to match that.",
      "parentUuid": "f4c0c05c_b7068d53",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 232,
        "endChar": 38
      },
      "revId": "06cb3b4789677339366306fcc66c247131043aad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}