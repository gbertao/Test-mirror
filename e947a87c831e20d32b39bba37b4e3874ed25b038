{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b533d97b_52604020",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2022-11-29T12:36:26Z",
      "side": 1,
      "message": "It would be nice to have a general neverallow that prevents apps from using io_uring. You can put that in app_neverallows.te",
      "revId": "e947a87c831e20d32b39bba37b4e3874ed25b038",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a0fc2ed_613663f7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1951225
      },
      "writtenOn": "2022-12-02T18:19:49Z",
      "side": 1,
      "message": "Do you mean a neverallow that prevents apps from creating an io_uring fd all together, or from using another app\u0027s io_uring fd. If the latter, I think that this change accomplishes that. For the former...\n\nWith the current anon_inode and io_uring support in the kernel I don\u0027t see a way to do this for only io_uring named anon_inodes without removing support for all anon_inode access by untrusted apps. i.e. `neverallow all_untrusted_apps domain:anon_inode *;` \n\nI don\u0027t currently know enough to tell if that\u0027s an acceptable solution, but I\u0027m testing that out locally now and I\u0027ll report back with an update to this CL once I have more confidence.\n\nAFAICT there\u0027s no way to differentiate between differently named anon_inodes in a neverallow statement. We can only identify io_uring anon_inode access via a type transition, so I think broad neverallows on io_uring fd creation isn\u0027t compatible with a model where we allow several domains to create and use their own io_uring fds, since that would entail a neverallow\n\nThere is a relevant discussion on the SELinux mailing list [1] where this issue was brought up, and where the conclusion seemed to be that individual hooks to relevant classes could be added to support operations specific to different sorts of anon_inodes.\n\n[1] https://lore.kernel.org/selinux/CAFqZXNuc4d\u003duzZWCXAV\u003dm4WQpj+J9JyD5L0URKR8MLP39sm_HQ@mail.gmail.com/",
      "parentUuid": "b533d97b_52604020",
      "revId": "e947a87c831e20d32b39bba37b4e3874ed25b038",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b7b20ab_a136996e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1951225
      },
      "writtenOn": "2022-12-02T21:39:28Z",
      "side": 1,
      "message": "I\u0027ve added a broad neverallow for untrusted apps and io_uring in patchset 3. It builds and boots locally, but I\u0027ve pushed it here to run against more test suites.",
      "parentUuid": "1a0fc2ed_613663f7",
      "revId": "e947a87c831e20d32b39bba37b4e3874ed25b038",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0eff5e8f_c6d67dff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1951225
      },
      "writtenOn": "2023-01-27T17:02:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b7b20ab_a136996e",
      "revId": "e947a87c831e20d32b39bba37b4e3874ed25b038",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49cce266_81a420d3",
        "filename": "private/shell.te",
        "patchSetId": 1
      },
      "lineNbr": 244,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2022-11-29T12:36:26Z",
      "side": 1,
      "message": "why grant this?",
      "revId": "e947a87c831e20d32b39bba37b4e3874ed25b038",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a3980c1_9a32bb43",
        "filename": "private/shell.te",
        "patchSetId": 1
      },
      "lineNbr": 244,
      "author": {
        "id": 1951225
      },
      "writtenOn": "2022-12-02T18:19:49Z",
      "side": 1,
      "message": "left over from some testing of the new macro. removed!",
      "parentUuid": "49cce266_81a420d3",
      "revId": "e947a87c831e20d32b39bba37b4e3874ed25b038",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edfa1d93_5c86b258",
        "filename": "public/te_macros",
        "patchSetId": 1
      },
      "lineNbr": 1054,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2022-11-29T12:36:26Z",
      "side": 1,
      "message": "space after this bracket",
      "range": {
        "startLine": 1054,
        "startChar": 31,
        "endLine": 1054,
        "endChar": 32
      },
      "revId": "e947a87c831e20d32b39bba37b4e3874ed25b038",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "274ce26d_499aa8be",
        "filename": "public/te_macros",
        "patchSetId": 1
      },
      "lineNbr": 1054,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2022-11-29T12:36:26Z",
      "side": 1,
      "message": "space before this bracket",
      "range": {
        "startLine": 1054,
        "startChar": 53,
        "endLine": 1054,
        "endChar": 54
      },
      "revId": "e947a87c831e20d32b39bba37b4e3874ed25b038",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5aaf740a_314cd316",
        "filename": "public/te_macros",
        "patchSetId": 1
      },
      "lineNbr": 1054,
      "author": {
        "id": 1951225
      },
      "writtenOn": "2022-12-02T18:19:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "274ce26d_499aa8be",
      "range": {
        "startLine": 1054,
        "startChar": 53,
        "endLine": 1054,
        "endChar": 54
      },
      "revId": "e947a87c831e20d32b39bba37b4e3874ed25b038",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99088915_871cd4ed",
        "filename": "public/te_macros",
        "patchSetId": 1
      },
      "lineNbr": 1054,
      "author": {
        "id": 1951225
      },
      "writtenOn": "2022-12-02T18:19:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "edfa1d93_5c86b258",
      "range": {
        "startLine": 1054,
        "startChar": 31,
        "endLine": 1054,
        "endChar": 32
      },
      "revId": "e947a87c831e20d32b39bba37b4e3874ed25b038",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a35cc994_1599e867",
        "filename": "public/te_macros",
        "patchSetId": 1
      },
      "lineNbr": 1055,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2022-11-29T12:36:26Z",
      "side": 1,
      "message": "no brackets needed here.",
      "range": {
        "startLine": 1055,
        "startChar": 30,
        "endLine": 1055,
        "endChar": 31
      },
      "revId": "e947a87c831e20d32b39bba37b4e3874ed25b038",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "386412c4_b381c031",
        "filename": "public/te_macros",
        "patchSetId": 1
      },
      "lineNbr": 1055,
      "author": {
        "id": 1951225
      },
      "writtenOn": "2022-12-02T18:19:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a35cc994_1599e867",
      "range": {
        "startLine": 1055,
        "startChar": 30,
        "endLine": 1055,
        "endChar": 31
      },
      "revId": "e947a87c831e20d32b39bba37b4e3874ed25b038",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}