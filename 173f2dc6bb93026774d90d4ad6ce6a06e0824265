{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d621e145_f383619e",
        "filename": "microdroid/system/private/microdroid_payload.te",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-11-01T10:37:52Z",
      "side": 1,
      "message": "A small quibble: do we always want payloads to have direct access to devices?\nThat\u0027s equivalent to in-process HALs. When possible we prefer out of process HALs, so that untrusted code can\u0027t directly access, and hence attack, the device drivers.\n\nAlso, do we want any allowxperm (or neverallowxperm) to limit what ioctls can be used?\n\nDo we need this very generic label? If vendor policy is needed for vendor devices - if only to set file_contexts, can\u0027t the vendor policy grant access to microdroid_payload if it\u0027s appropriate?",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 61,
        "endChar": 64
      },
      "revId": "173f2dc6bb93026774d90d4ad6ce6a06e0824265",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71447ab6_d4b060d9",
        "filename": "microdroid/system/private/microdroid_payload.te",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2023-11-08T11:38:45Z",
      "side": 1,
      "message": "\u003e A small quibble: do we always want payloads to have direct access to devices?\n\nI\u0027m worried that implementing out out of process HALs at this moment might be too complex.\n\n\u003e Also, do we want any allowxperm (or neverallowxperm) to limit what ioctls can be used?\n\n\u003e Do we need this very generic label? If vendor policy is needed for vendor devices - if only to set file_contexts, can\u0027t the vendor policy grant access to microdroid_payload if it\u0027s appropriate?\n\nMy intention was that we start from our prototype (minimal access), amending it whenever needed. And I think vendors can still extend their sepolicy.",
      "parentUuid": "d621e145_f383619e",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 61,
        "endChar": 64
      },
      "revId": "173f2dc6bb93026774d90d4ad6ce6a06e0824265",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0cc8ed78_adb515d9",
        "filename": "microdroid/system/private/microdroid_payload.te",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-11-08T12:18:38Z",
      "side": 1,
      "message": "\u003e My intention was that we start from our prototype (minimal access)\n\nMy worry is that the access isn\u0027t very minimal - the payload code has full direct access to the driver, including arbitrary ioctls.\n\nCan we perhaps use a name that indicates this is wide open, in case we want a more restricted version later?\n\ndirect_access_device, payload_accessible_device ?",
      "parentUuid": "71447ab6_d4b060d9",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 61,
        "endChar": 64
      },
      "revId": "173f2dc6bb93026774d90d4ad6ce6a06e0824265",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}