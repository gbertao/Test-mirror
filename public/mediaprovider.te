type mediaprovider, domain;

# TODO: remove when DownloadProvider is moved out of process.media
# Access the network.
net_domain(mediaprovider)

# Access bluetooth.
bluetooth_domain(mediaprovider)

# MtpServer uses /dev/mtp_usb
allow mediaprovider mtp_device:chr_file rw_file_perms;

# MtpServer uses /dev/usb-ffs/mtp
allow mediaprovider functionfs:dir search;
allow mediaprovider functionfs:file rw_file_perms;

# MtpServer sets sys.usb.ffs.mtp.ready
set_prop(mediaprovider, ffs_prop)

allow mediaprovider audioserver_service:service_manager find;
allow mediaprovider cameraserver_service:service_manager find;
allow mediaprovider drmserver_service:service_manager find;
allow mediaprovider mediacodec_service:service_manager find;
allow mediaprovider mediadrmserver_service:service_manager find;
allow mediaprovider mediaextractor_service:service_manager find;
allow mediaprovider mediaserver_service:service_manager find;
allow mediaprovider nfc_service:service_manager find;
allow mediaprovider radio_service:service_manager find;
allow mediaprovider surfaceflinger_service:service_manager find;
allow mediaprovider app_api_service:service_manager find;
allow mediaprovider system_api_service:service_manager find;

# Allow Phone to read/write cached ringtones (opened by system).
allow mediaprovider ringtone_file:file { getattr read write };

# /sys and /proc access
r_dir_file(mediaprovider, sysfs_type)
r_dir_file(mediaprovider, proc)
r_dir_file(mediaprovider, rootfs)

# Access to /data/preloads
allow mediaprovider preloads_data_file:file r_file_perms;

# webview crash handling depends on self ptrace (b/27697529, b/20150694, b/19277529#comment7)
allow mediaprovider self:process ptrace;

# b/18504118: Allow reads from /data/anr/traces.txt
allow mediaprovider anr_data_file:file r_file_perms;

# Some apps ship with shared libraries and binaries that they write out
# to their sandbox directory and then execute.
allow mediaprovider app_data_file:file rx_file_perms;
auditallow mediaprovider app_data_file:file execute_no_trans;

# Used by Finsky / Android "Verify Apps" functionality when
# running "adb install foo.apk".
allow mediaprovider shell_data_file:file r_file_perms;
allow mediaprovider shell_data_file:dir r_dir_perms;

# Allow verifier to access staged apks.
allow mediaprovider { apk_tmp_file apk_private_tmp_file }:dir r_dir_perms;
allow mediaprovider { apk_tmp_file apk_private_tmp_file }:file r_file_perms;

# Allow GMS core to access perfprofd output, which is stored
# in /data/misc/perfprofd/. GMS core will need to list all
# data stored in that directory to process them one by one.
userdebug_or_eng(`
  allow mediaprovider perfprofd_data_file:file r_file_perms;
  allow mediaprovider perfprofd_data_file:dir r_dir_perms;
')

# Allow GMS core to scan executables on the system partition
allow mediaprovider exec_type:file { getattr read open };

# For AppFuse.
allow mediaprovider vold:fd use;
allow mediaprovider fuse_device:chr_file { read write };

# access the mac address
allowxperm mediaprovider self:udp_socket ioctl SIOCGIFHWADDR;

###
### neverallow rules (see corresponding rules in mediaprovider)
###

# Receive or send uevent messages.
neverallow mediaprovider domain:netlink_kobject_uevent_socket *;

# Receive or send generic netlink messages
neverallow mediaprovider domain:netlink_socket *;

# Too much leaky information in debugfs. It's a security
# best practice to ensure these files aren't readable.
neverallow mediaprovider debugfs:file read;

# Only trusted components of Android should be registering
# services.
neverallow mediaprovider service_manager_type:service_manager add;

# Do not allow mediaprovider to be assigned mlstrustedsubject.
neverallow mediaprovider mlstrustedsubject:process fork;

# Do not allow mediaprovider to hard link to any files.
neverallow mediaprovider file_type:file link;
