# volume manager
type iorapd, domain;
type iorapd_exec, exec_type, file_type; #, system_file_type;

r_dir_file(iorapd, rootfs)

# Allow read/write /proc/sys/vm/drop/caches
allow iorapd proc_drop_caches:file r_file_perms;
allow iorapd proc_drop_caches:file w_file_perms;

# Give iorapd a place where only iorapd can store files; everyone else is off limits
allow iorapd iorapd_data_file:dir create_dir_perms;
allow iorapd iorapd_data_file:file create_file_perms;

# Allow iorapd to publish a binder service and make binder calls.
binder_use(iorapd)
add_service(iorapd, iorapd_service)

# Allow iorapd to call into the system server so it can check permissions.
binder_call(iorapd, system_server)
allow iorapd permission_service:service_manager find;
# IUserManager
allow iorapd user_service:service_manager find;
# IPackageManagerNative
allow iorapd package_native_service:service_manager find;

# talk to batteryservice
binder_call(iorapd, healthd)

# TODO: does each of the service_manager allow finds above need the binder_call?

# iorapd temporarily changes its priority when running benchmarks
allow iorapd self:global_capability_class_set sys_nice;


###
### neverallow rules
###


# FIXME:
#
# libsepol.report_failure: neverallow on line 68 of system/sepolicy/public/iorapd.te (or line 19971 of policy.conf) violated by allow dumpstate iorapd_service:service_manager { find };
# libsepol.report_failure: neverallow on line 68 of system/sepolicy/public/iorapd.te (or line 19971 of policy.conf) violated by allow atrace iorapd_service:service_manager { find };
# libsepol.report_failure: neverallow on line 68 of system/sepolicy/public/iorapd.te (or line 19971 of policy.conf) violated by allow traceur_app iorapd_service:service_manager { find };
# libsepol.report_failure: neverallow on line 68 of system/sepolicy/public/iorapd.te (or line 19971 of policy.conf) violated by allow system_app iorapd_service:service_manager { find };
# libsepol.report_failure: neverallow on line 68 of system/sepolicy/public/iorapd.te (or line 19971 of policy.conf) violated by allow shell iorapd_service:service_manager { find };
# libsepol.report_failure: neverallow on line 65 of system/sepolicy/public/iorapd.te (or line 19968 of policy.conf) violated by allow vold restorecon_prop:property_service { set };
# libsepol.report_failure: neverallow on line 55 of system/sepolicy/public/iorapd.te (or line 19958 of policy.conf) violated by allow init iorapd_data_file:file { read write create setattr relabelfrom map unlink open };
# libsepol.report_failure: neverallow on line 55 of system/sepolicy/public/iorapd.te (or line 19958 of policy.conf) violated by allow init iorapd_data_file:lnk_file { create setattr relabelfrom unlink };
# libsepol.report_failure: neverallow on line 55 of system/sepolicy/public/iorapd.te (or line 19958 of policy.conf) violated by allow init iorapd_data_file:fifo_file { read create setattr relabelfrom unlink open };
# libsepol.report_failure: neverallow on line 55 of system/sepolicy/public/iorapd.te (or line 19958 of policy.conf) violated by allow init iorapd_data_file:sock_file { read create setattr relabelfrom unlink open };
# libsepol.report_failure: neverallow on line 43 of system/sepolicy/public/iorapd.te (or line 19946 of policy.conf) violated by allow init iorapd_data_file:dir { write relabelfrom add_name remove_name rmdir };



# neverallow {
#     domain
#     -iorapd
# } iorapd_data_file:dir ~{ open create read getattr setattr search relabelto ioctl };
# 
# neverallow {
#     domain
#     -init
#     -iorapd
# } iorapd_data_file:dir *;
# 
# neverallow {
#     domain
#     -kernel
#     -iorapd
# } iorapd_data_file:notdevfile_class_set ~{ relabelto getattr };
# 
# neverallow {
#     domain
#     -init
#     -kernel
#     -vendor_init
#     -iorapd
# } { iorapd_data_file }:notdevfile_class_set *;
# 
# neverallow { domain -iorapd -init } restorecon_prop:property_service set;
# 
# # Only system_server can interact with iorapd over binder
# neverallow { domain -system_server -iorapd } iorapd_service:service_manager find;
# neverallow iorapd {
#   domain
#   -healthd
#   -servicemanager
#   -system_server
#   userdebug_or_eng(`-su')
# }:binder call;
# 
# neverallow { domain -init } iorapd:process { transition dyntransition };
# neverallow iorapd domain:{ tcp_socket udp_socket rawip_socket } *;
