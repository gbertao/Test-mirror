{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "781c7690_1f961efc",
        "filename": "private/otapreopt_chroot.te",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-08-04T15:43:15Z",
      "side": 1,
      "message": "I found that when switching to the binary in /postinstall/system/bin/otapreopt_chroot, these allows are necessary for a clean run. The exact same (updated) binary doesn\u0027t need them when run from /system/bin. These are the sepolicy errors I get, and they all occur before even the first line of `android::installd::otapreopt_chroot` is executed, but the binary still runs fine:\n\n```\n08-04 14:05:34.233 18115 18115 W otapreopt_chroo: type\u003d1400 audit(0.0:252): avc:  denied  { read } for  name\u003d\"bin\" dev\u003d\"dm-13\" ino\u003d320640 scontext\u003du:r:otapreopt_chroot:s0 tcontext\u003du:object_r:vendor_file:s0 tclass\u003ddir permissive\u003d0\n08-04 14:05:34.233 18115 18115 W otapreopt_chroo: type\u003d1400 audit(0.0:253): avc:  denied  { search } for  name\u003d\"tmp\" dev\u003d\"dm-62\" ino\u003d96 scontext\u003du:r:otapreopt_chroot:s0 tcontext\u003du:object_r:shell_data_file:s0 tclass\u003ddir permissive\u003d0\n08-04 15:25:25.358 11308 11308 W otapreopt_chroo: type\u003d1400 audit(0.0:300): avc:  denied  { search } for  name\u003d\"tests\" dev\u003d\"dm-62\" ino\u003d106 scontext\u003du:r:otapreopt_chroot:s0 tcontext\u003du:object_r:shell_test_data_file:s0 tclass\u003ddir permissive\u003d0\n```\n\nThe first one is for `/vendor/bin`, the second one is for `/data/local/tmp`, and the third (which I\u0027ve only gotten once) is for `/data/local/tests`. Got any ideas why this happens?\n\nI don\u0027t expect to actually submit these lines - the one for the tmp dir is even blocked by a [`neverallow` rule](https://cs.android.com/android/platform/superproject/main/+/main:system/sepolicy/private/domain.te;l\u003d732-745;drc\u003d486fa9fb0a53f9ce6edb04295f4bec8b0acca0cb).",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 104,
        "endChar": 44
      },
      "revId": "63a7b5e91c1cae8de00aa4876a0c720f5c9759b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fde307b_3cbf70b1",
        "filename": "private/otapreopt_chroot.te",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2023-08-04T16:15:05Z",
      "side": 1,
      "message": "No idea, but we probably don\u0027t need these since the binary runs fine. Maybe add `dontaudit` instead?",
      "parentUuid": "781c7690_1f961efc",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 104,
        "endChar": 44
      },
      "revId": "63a7b5e91c1cae8de00aa4876a0c720f5c9759b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "526a2dfa_0d98f08e",
        "filename": "private/otapreopt_chroot.te",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-08-04T16:18:00Z",
      "side": 1,
      "message": "Maybe, but I\u0027d like to know what\u0027s going on first. +alanstokes@, do you have any idea?",
      "parentUuid": "5fde307b_3cbf70b1",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 104,
        "endChar": 44
      },
      "revId": "63a7b5e91c1cae8de00aa4876a0c720f5c9759b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96682597_9f9a8778",
        "filename": "private/otapreopt_chroot.te",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-08-04T16:42:23Z",
      "side": 1,
      "message": "Well, tbh, no. Especially /vendor/bin.\nAre the binaries definitely identical? There isn\u0027t a bootstrap / non-bootstrap difference, say?\nSome weird LD_LIBRARY_PATH thing?\nHow exactly is the binary run?",
      "parentUuid": "526a2dfa_0d98f08e",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 104,
        "endChar": 44
      },
      "revId": "63a7b5e91c1cae8de00aa4876a0c720f5c9759b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "934828fc_02b08e23",
        "filename": "private/otapreopt_chroot.te",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2023-08-04T18:20:36Z",
      "side": 1,
      "message": "Thanks, Alan! This reminds me that it may have something to do with the linker config.\n\n`/linkerconfig/ld.config.txt` has:\n\n```\ndir.vendor \u003d /vendor/bin/\n...\ndir.isolated \u003d /data/local/tmp/isolated\ndir.product \u003d /data/local/tests/product\ndir.system \u003d /data/local/tests/system\ndir.unrestricted \u003d /data/local/tests/unrestricted\ndir.vendor \u003d /data/local/tests/vendor\ndir.unrestricted \u003d /data/local/tmp\n```\n\nThose directories are only mentioned in the namespace definitions, so I\u0027m not sure why they are read. Maybe invoking a binary under /postinstall somehow triggers some dynamic linker stuff that reads them?\n\nMartin, okay to ignore those?",
      "parentUuid": "96682597_9f9a8778",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 104,
        "endChar": 44
      },
      "revId": "63a7b5e91c1cae8de00aa4876a0c720f5c9759b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1a47485_c988cd98",
        "filename": "private/otapreopt_chroot.te",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-08-07T20:29:45Z",
      "side": 1,
      "message": "I think you\u0027re right. When the linker goes through ld.config.txt it [runs realpath](https://cs.android.com/android/platform/superproject/main/+/refs/heads/main:bionic/linker/linker_config.cpp;l\u003d250;drc\u003d49d39af6fc9d52bcde0dbcba6448ffaa3756d487) on each of those paths until it finds one that matches the binary. The list of dirs looks like:\n\n```\ndir.system \u003d /system/bin/\n/.../\ndir.vendor \u003d /vendor/bin/\n/.../\ndir.system \u003d /data/local/tests/system\n/.../\ndir.unrestricted \u003d /data/local/tmp\ndir.postinstall \u003d /postinstall\n/.../\n```\n\nSo /system/bin/otapreopt_chroot is matched right away, but when it\u0027s in /postinstall a whole bunch of paths get passed through `realpath` first.\n\nHence these denials are safe to ignore. However this doesn\u0027t look like a problem just with our binary - it ought to cause denial noise for lots of binaries that aren\u0027t in /system/bin. It seems like a win if we can devise some generic `dontaudit` directives to cut down noise and developer confusion in lots of places. Actually, it looks like it has [popped up](https://cs.android.com/android/platform/superproject/main/+/main:system/sepolicy/public/domain.te;l\u003d417-420;drc\u003dabbd8aeefd7f1891dc1442d9c51dc481d99d9d16) before, if I read the directive correctly, but only for the /postinstall directory itself. Alan, do you think we can extend that to all or most dirs in the [linkerconfig list](https://cs.android.com/android/platform/superproject/main/+/main:system/linkerconfig/testdata/golden_output/product-enabled/ld.config.txt;l\u003d1-25;drc\u003da02c94f25ecda2afc436582715258bd6a1f54ccc)?\n\nFor linking reasons we\u0027ve decided to keep running the binary from /system/bin after all, so for this CL we only need the change for the pipes.",
      "parentUuid": "934828fc_02b08e23",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 104,
        "endChar": 44
      },
      "revId": "63a7b5e91c1cae8de00aa4876a0c720f5c9759b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86e72bec_22ca6cc8",
        "filename": "private/otapreopt_chroot.te",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-08-08T12:51:46Z",
      "side": 1,
      "message": "I\u0027m still slightly confused why it needs `read` access on /vendor/bin, rather than just `search` (which is granted to everything).\nI\u0027d be reluctant to do a wide `dontaudit`, because that would potentially hide genuine problems making diagnosis harder.\nAn awful lot of things are already granted read access to /vendor/bin, and a smattering of things have been granted access to shell_data_file and shell_test_data_file.\nSo TBH I\u0027m tempted to wait until it becomes a problem and decide what to do. \n(It looks like there are other ad hoc fixes, e.g. https://source.corp.google.com/h/googleplex-android/platform/superproject/main/+/main:system/sepolicy/private/runas_app.te;drc\u003d0876d7a978d55a50070e0eb18a4e2a476d4e12a4;l\u003d35)",
      "parentUuid": "f1a47485_c988cd98",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 104,
        "endChar": 44
      },
      "revId": "63a7b5e91c1cae8de00aa4876a0c720f5c9759b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}