{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1b3bf663_fb4f3880",
        "filename": "private/domain.te",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2022-09-20T17:13:48Z",
      "side": 1,
      "message": "Why write not read? I though entropy was sent from the daemon to the domain?",
      "range": {
        "startLine": 125,
        "startChar": 42,
        "endLine": 125,
        "endChar": 47
      },
      "revId": "f6c9d767d8ef78489a8d291c71e9cace6fbfcc0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8da1c4d_37bd390a",
        "filename": "private/domain.te",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 1060907
      },
      "writtenOn": "2022-09-21T01:49:46Z",
      "side": 1,
      "message": "Switching this from write to read results in denials like this:\n\n```\n09-21 01:31:05.227   249   249 I auditd  : type\u003d1400 audit(0.0:4): avc: denied { read } for comm\u003d\"prng_seeder\" path\u003d\"socket:[14763]\" dev\u003d\"sockfs\" ino\u003d14763 scontext\u003du:r:prng_seeder:s0 tcontext\u003du:object_r:prng_seeder_socket:s0 tclass\u003dunix_stream_socket permissive\u003d0\n09-21 01:31:05.227   249   249 W prng_seeder: type\u003d1400 audit(0.0:4): avc: denied { read } for path\u003d\"socket:[14763]\" dev\u003d\"sockfs\" ino\u003d14763 scontext\u003du:r:prng_seeder:s0 tcontext\u003du:object_r:prng_seeder_socket:s0 tclass\u003dunix_stream_socket permissive\u003d0\n```",
      "parentUuid": "1b3bf663_fb4f3880",
      "range": {
        "startLine": 125,
        "startChar": 42,
        "endLine": 125,
        "endChar": 47
      },
      "revId": "f6c9d767d8ef78489a8d291c71e9cace6fbfcc0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0a8ecb3_8c4f9e2f",
        "filename": "private/domain.te",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2022-09-21T08:56:06Z",
      "side": 1,
      "message": "That change couldn\u0027t produce those denials.\n(They\u0027re saying prng_seeder couldn\u0027t read the socket; the rule here is saying that the client can read/write the socket. Also, the denials are showing up on unix_stream_socket, while this rule affects sock_file.)\n\nBut the other change below could.\n\nTBH I\u0027m confused by how this works at all, since I can\u0027t see where clients are allowed to read.\n\nI think you should probably go back to:\nunix_socket_connect(domain, prng_seeder, prng_seeder_socket)\n\nWhich is equivalent to these two lines.",
      "parentUuid": "b8da1c4d_37bd390a",
      "range": {
        "startLine": 125,
        "startChar": 42,
        "endLine": 125,
        "endChar": 47
      },
      "revId": "f6c9d767d8ef78489a8d291c71e9cace6fbfcc0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5cc318a2_44b78e67",
        "filename": "private/domain.te",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 1334152
      },
      "writtenOn": "2022-09-21T08:56:43Z",
      "side": 1,
      "message": "+1 and seems to be consistent with other socket sepolicy... For whatever reasons, selinux checks for write permission on the socket entry in the filesystem when a process tries to connect.",
      "parentUuid": "b8da1c4d_37bd390a",
      "range": {
        "startLine": 125,
        "startChar": 42,
        "endLine": 125,
        "endChar": 47
      },
      "revId": "f6c9d767d8ef78489a8d291c71e9cace6fbfcc0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "634a2f5d_b78efb40",
        "filename": "private/domain.te",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 1334152
      },
      "writtenOn": "2022-09-21T08:59:14Z",
      "side": 1,
      "message": "\u003e I think you should probably go back to:\n\u003e unix_socket_connect(domain, prng_seeder, prng_seeder_socket)\n\nI\u0027m just on the train, but will do.",
      "parentUuid": "5cc318a2_44b78e67",
      "range": {
        "startLine": 125,
        "startChar": 42,
        "endLine": 125,
        "endChar": 47
      },
      "revId": "f6c9d767d8ef78489a8d291c71e9cace6fbfcc0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19889e3c_ab5bf5ae",
        "filename": "private/domain.te",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2022-09-21T09:32:08Z",
      "side": 1,
      "message": "Yeah, sorry I\u0027ve been a bit slow on the uptake. sock_file \u003d the socket file on the file system, and yeah, write access seems to be the key. And then unix_stream_socket is the actual socket.\nI\u0027m still slightly confused by the absence of read/write access for domain, although I have a suspicion about how it might be working.\nBut ultimately if it does work, then we\u0027re good.",
      "parentUuid": "634a2f5d_b78efb40",
      "range": {
        "startLine": 125,
        "startChar": 42,
        "endLine": 125,
        "endChar": 47
      },
      "revId": "f6c9d767d8ef78489a8d291c71e9cace6fbfcc0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "424fa1c7_a92158e6",
        "filename": "private/domain.te",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 1334152
      },
      "writtenOn": "2022-09-21T11:01:15Z",
      "side": 1,
      "message": "\u003e unix_socket_connect(domain, prng_seeder, prng_seeder_socket)\n\nDone, and verified working, but this is troubling me.\n\nThe comments for unix_socket_connect(), and every other usage I can see, assume the third argument is the daemon\u0027s domain, so I think we\u0027re missing something.\n\nPutting the domain for the third argument brings us back to denials like\n```\n09-21 11:18:58.394  2495  2495 I ndroid.systemui: type\u003d1400 audit(0.0:688): avc: denied { connectto } for path\u003d\"/dev/socket/prng_seeder\" scontext\u003du:r:platform_app:s0:c512,c768 tcontext\u003du:object_r:prng_seeder_socket:s0 tclass\u003dunix_stream_socket permissive\u003d1 app\u003dcom.android.systemui\n```\n\nAnd using the domain as the third argument, and adding an allow for the socket connect, e.g.\n```\nunix_socket_connect(domain, prng_seeder, prng_seeder)\nallow domain prng_seeder_socket:unix_stream_socket connectto;\n```\nalso works with no denials - previously I was seeing denials with that combo, but that was before we had the correct MLS socket attributes.\n\nWDYT?",
      "parentUuid": "19889e3c_ab5bf5ae",
      "range": {
        "startLine": 125,
        "startChar": 42,
        "endLine": 125,
        "endChar": 47
      },
      "revId": "f6c9d767d8ef78489a8d291c71e9cace6fbfcc0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24a84841_7b13efcd",
        "filename": "private/domain.te",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2022-09-21T11:17:32Z",
      "side": 1,
      "message": "So, I think I understand what is happening.\n\nThere are 2 objects here, as far as SELinux is concerned.\nThe first is /dev/socket/prng_seeder, which is prng_seeder_socket:sock_file.\nAnd the other is the unix_stream_socket.\nNormally when a process with label foo creates a unix stream socket it inherits the label - so some_server would create a socket which would be some_server:sock_file.\nThat\u0027s why the macro expects the server label as the 3rd arg; it expects it to be the same as the stream socket label.\n\nIn your case you\u0027re explicitly labeling the unix stream socket as prng_seeder_socket; I think that\u0027s the unusual thing.\n\n(And when the client connects, it ends up with a unix stream socket with its own label; all domains are allowed to read \u0026 write self:unix_stream_socket, which is why you don\u0027t need to allow that explicitly.)\n\nSo what you have here works.\n\nAn alternative would be to change the .rc file to label the socket as prng_seeder rather than prng_seeder_socket, and then all you would need would be:\nunix_socket_connect(domain, prng_seeder, prng_seeder)",
      "parentUuid": "424fa1c7_a92158e6",
      "range": {
        "startLine": 125,
        "startChar": 42,
        "endLine": 125,
        "endChar": 47
      },
      "revId": "f6c9d767d8ef78489a8d291c71e9cace6fbfcc0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "748f893f_c7fda6b6",
        "filename": "private/domain.te",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 1334152
      },
      "writtenOn": "2022-09-21T12:11:10Z",
      "side": 1,
      "message": "Now it all falls into place!  Followed your suggestion to be consistent with other services and the policy now looks a lot cleaner and the MLS attributes finally make sense.  Thanks!",
      "parentUuid": "24a84841_7b13efcd",
      "range": {
        "startLine": 125,
        "startChar": 42,
        "endLine": 125,
        "endChar": 47
      },
      "revId": "f6c9d767d8ef78489a8d291c71e9cace6fbfcc0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19211e2d_3002fa26",
        "filename": "private/file.te",
        "patchSetId": 8
      },
      "lineNbr": 126,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2022-09-20T17:13:48Z",
      "side": 1,
      "message": "nit: Mention subject is needed for connectto and object for read/write?",
      "range": {
        "startLine": 125,
        "startChar": 52,
        "endLine": 126,
        "endChar": 22
      },
      "revId": "f6c9d767d8ef78489a8d291c71e9cace6fbfcc0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f5e204f_857bd9dc",
        "filename": "private/file.te",
        "patchSetId": 8
      },
      "lineNbr": 126,
      "author": {
        "id": 1060907
      },
      "writtenOn": "2022-09-21T01:49:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "19211e2d_3002fa26",
      "range": {
        "startLine": 125,
        "startChar": 52,
        "endLine": 126,
        "endChar": 22
      },
      "revId": "f6c9d767d8ef78489a8d291c71e9cace6fbfcc0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a3a5323_6c1a47e4",
        "filename": "private/init.te",
        "patchSetId": 8
      },
      "lineNbr": 113,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2022-09-20T17:13:48Z",
      "side": 1,
      "message": "nit: connectto is redundant here (and not covered by the comment), since domain includes init.",
      "range": {
        "startLine": 113,
        "startChar": 70,
        "endLine": 113,
        "endChar": 79
      },
      "revId": "f6c9d767d8ef78489a8d291c71e9cace6fbfcc0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "183e2c92_fe3dd675",
        "filename": "private/init.te",
        "patchSetId": 8
      },
      "lineNbr": 113,
      "author": {
        "id": 1060907
      },
      "writtenOn": "2022-09-21T01:49:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a3a5323_6c1a47e4",
      "range": {
        "startLine": 113,
        "startChar": 70,
        "endLine": 113,
        "endChar": 79
      },
      "revId": "f6c9d767d8ef78489a8d291c71e9cace6fbfcc0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a7f8768_42d66df9",
        "filename": "private/init.te",
        "patchSetId": 8
      },
      "lineNbr": 113,
      "author": {
        "id": 1334152
      },
      "writtenOn": "2022-09-21T08:56:43Z",
      "side": 1,
      "message": "Ah thanks! (Aside: we need to remove the transitive dependency on libcrypto that init somehow gained in the last cycle, at which point it won\u0027t need connecto anyway).",
      "parentUuid": "183e2c92_fe3dd675",
      "range": {
        "startLine": 113,
        "startChar": 70,
        "endLine": 113,
        "endChar": 79
      },
      "revId": "f6c9d767d8ef78489a8d291c71e9cace6fbfcc0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8759944_de446e05",
        "filename": "private/prng_seeder.te",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2022-09-20T17:13:48Z",
      "side": 1,
      "message": "Why do you need read?",
      "range": {
        "startLine": 12,
        "startChar": 58,
        "endLine": 12,
        "endChar": 62
      },
      "revId": "f6c9d767d8ef78489a8d291c71e9cace6fbfcc0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "07b5a9f4_bf20877e",
        "filename": "private/prng_seeder.te",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 1060907
      },
      "writtenOn": "2022-09-21T01:49:46Z",
      "side": 1,
      "message": "I get these denials without:\n\n```\n09-21 01:31:05.227   249   249 I auditd  : type\u003d1400 audit(0.0:4): avc: denied { read } for comm\u003d\"prng_seeder\" path\u003d\"socket:[14763]\" dev\u003d\"sockfs\" ino\u003d14763 scontext\u003du:r:prng_seeder:s0 tcontext\u003du:object_r:prng_seeder_socket:s0 tclass\u003dunix_stream_socket permissive\u003d0\n09-21 01:31:05.227   249   249 W prng_seeder: type\u003d1400 audit(0.0:4): avc: denied { read } for path\u003d\"socket:[14763]\" dev\u003d\"sockfs\" ino\u003d14763 scontext\u003du:r:prng_seeder:s0 tcontext\u003du:object_r:prng_seeder_socket:s0 tclass\u003dunix_stream_socket permissive\u003d0\n```",
      "parentUuid": "f8759944_de446e05",
      "range": {
        "startLine": 12,
        "startChar": 58,
        "endLine": 12,
        "endChar": 62
      },
      "revId": "f6c9d767d8ef78489a8d291c71e9cace6fbfcc0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff5b67d2_70411853",
        "filename": "private/prng_seeder.te",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2022-09-21T08:56:06Z",
      "side": 1,
      "message": "OK, so you are reading. But why? It\u0027s not mentioned in the comment at #2.",
      "parentUuid": "07b5a9f4_bf20877e",
      "range": {
        "startLine": 12,
        "startChar": 58,
        "endLine": 12,
        "endChar": 62
      },
      "revId": "f6c9d767d8ef78489a8d291c71e9cace6fbfcc0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "deaea7e2_0649657d",
        "filename": "private/prng_seeder.te",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 1334152
      },
      "writtenOn": "2022-09-21T08:56:43Z",
      "side": 1,
      "message": "Based on system call traces I assume this is because the Rust async stuff is doing a select loop in the background.",
      "parentUuid": "07b5a9f4_bf20877e",
      "range": {
        "startLine": 12,
        "startChar": 58,
        "endLine": 12,
        "endChar": 62
      },
      "revId": "f6c9d767d8ef78489a8d291c71e9cace6fbfcc0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "768bf162_4a92ffb7",
        "filename": "private/prng_seeder.te",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2022-09-21T09:32:08Z",
      "side": 1,
      "message": "Ah, interesting.",
      "parentUuid": "deaea7e2_0649657d",
      "range": {
        "startLine": 12,
        "startChar": 58,
        "endLine": 12,
        "endChar": 62
      },
      "revId": "f6c9d767d8ef78489a8d291c71e9cace6fbfcc0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}