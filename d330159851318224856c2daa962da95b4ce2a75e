{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "60002cd8_36859282",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2022-01-14T05:30:30Z",
      "side": 1,
      "message": "actually, that\u0027s a fair point, we should just grant system server \u0027normal\u0027 read access to these files.  that would be more future proof.  I think that would include search too.  but there\u0027s probably some fancy macro for it.",
      "revId": "d330159851318224856c2daa962da95b4ce2a75e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e88018c_36a566fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-01-14T05:35:52Z",
      "side": 1,
      "message": "Yeah, if you have to read the files in the directory, you need `search` access to the directory (of course in addition to the open/read/... for the files themselves).",
      "parentUuid": "60002cd8_36859282",
      "revId": "d330159851318224856c2daa962da95b4ce2a75e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4335325d_d594c504",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2022-01-14T08:08:54Z",
      "side": 1,
      "message": "Unfortunately, \"search\" is poorly named. It\u0027s needed for directory traversal, so definitely needed here.",
      "parentUuid": "6e88018c_36a566fd",
      "revId": "d330159851318224856c2daa962da95b4ce2a75e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc9dc8af_323ddbc0",
        "filename": "private/system_server.te",
        "patchSetId": 3
      },
      "lineNbr": 1344,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-01-14T03:49:55Z",
      "side": 1,
      "message": "nit: read",
      "range": {
        "startLine": 1344,
        "startChar": 31,
        "endLine": 1344,
        "endChar": 34
      },
      "revId": "d330159851318224856c2daa962da95b4ce2a75e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec365546_efe3f843",
        "filename": "private/system_server.te",
        "patchSetId": 3
      },
      "lineNbr": 1344,
      "author": {
        "id": 1351420
      },
      "writtenOn": "2022-01-14T07:57:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc9dc8af_323ddbc0",
      "range": {
        "startLine": 1344,
        "startChar": 31,
        "endLine": 1344,
        "endChar": 34
      },
      "revId": "d330159851318224856c2daa962da95b4ce2a75e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2c45307_fae5d20f",
        "filename": "private/system_server.te",
        "patchSetId": 3
      },
      "lineNbr": 1345,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-01-14T03:49:55Z",
      "side": 1,
      "message": "just to bet confirm. you don\u0027t need `search` access because all you need is reading the directory entries, right?",
      "range": {
        "startLine": 1345,
        "startChar": 35,
        "endLine": 1345,
        "endChar": 45
      },
      "revId": "d330159851318224856c2daa962da95b4ce2a75e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc301b9f_f83bfa91",
        "filename": "private/system_server.te",
        "patchSetId": 3
      },
      "lineNbr": 1345,
      "author": {
        "id": 1351420
      },
      "writtenOn": "2022-01-14T07:57:15Z",
      "side": 1,
      "message": "I think open and read access is enough because all avc denied logs I have are:\n\navc: denied { read } for name\u003d\"net\" dev\u003d\"sysfs\" ino\u003d29559 scontext\u003du:r:system_server:s0 tcontext\u003du:object_r:sysfs_net:s0 tclass\u003ddir permissive\u003d1\navc: denied { open } for path\u003d\"/sys/class/net\" dev\u003d\"sysfs\" ino\u003d29559 scontext\u003du:r:system_server:s0 tcontext\u003du:object_r:sysfs_net:s0 tclass\u003ddir permissive\u003d1",
      "parentUuid": "e2c45307_fae5d20f",
      "range": {
        "startLine": 1345,
        "startChar": 35,
        "endLine": 1345,
        "endChar": 45
      },
      "revId": "d330159851318224856c2daa962da95b4ce2a75e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53d8c7a1_5c920029",
        "filename": "private/system_server.te",
        "patchSetId": 3
      },
      "lineNbr": 1345,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2022-01-14T08:08:54Z",
      "side": 1,
      "message": "The point of using macros is that they\u0027re often more robust. If you can read a file, why shouldn\u0027t you be able to call stat() on it (\"getattr\" selinux permission)? Why would you want to prevent that? Is there any security reason for doing so? No.\n\nSearch is needed, it just happens to also be more widely granted here: https://cs.android.com/android/platform/superproject/+/master:system/sepolicy/private/system_server.te;l\u003d404?q\u003dsystem%2Fsepolicy%20system_server\n\nre-granting it here is actually more robust because if that other rule ever gets removed for other reasons, you\u0027ll need that permission here.",
      "parentUuid": "dc301b9f_f83bfa91",
      "range": {
        "startLine": 1345,
        "startChar": 35,
        "endLine": 1345,
        "endChar": 45
      },
      "revId": "d330159851318224856c2daa962da95b4ce2a75e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "973c1d15_26d8e0e5",
        "filename": "private/system_server.te",
        "patchSetId": 3
      },
      "lineNbr": 1345,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2022-01-14T08:08:54Z",
      "side": 1,
      "message": "perhaps r_dir_perms would be best and more future proof.",
      "range": {
        "startLine": 1345,
        "startChar": 34,
        "endLine": 1345,
        "endChar": 47
      },
      "revId": "d330159851318224856c2daa962da95b4ce2a75e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b58a332_f83da6b6",
        "filename": "private/system_server.te",
        "patchSetId": 3
      },
      "lineNbr": 1345,
      "author": {
        "id": 1351420
      },
      "writtenOn": "2022-01-15T06:53:00Z",
      "side": 1,
      "message": "r_dir_perms also give getatter, ioctl, and lock access when I look into the macro, \n\ndefine(`r_dir_perms\u0027, `{ open getattr read search ioctl lock }\u0027)",
      "parentUuid": "973c1d15_26d8e0e5",
      "range": {
        "startLine": 1345,
        "startChar": 34,
        "endLine": 1345,
        "endChar": 47
      },
      "revId": "d330159851318224856c2daa962da95b4ce2a75e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}