{
  "comments": [
    {
      "key": {
        "uuid": "a41da642_f959a2c3",
        "filename": "private/file_contexts",
        "patchSetId": 1
      },
      "lineNbr": 419,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2017-05-04T03:28:57Z",
      "side": 1,
      "message": "this is much to broad and will block access to other file systems, e.g. /sys/fs/selinux or /sys/fs/pstore.",
      "range": {
        "startLine": 419,
        "startChar": 0,
        "endLine": 419,
        "endChar": 67
      },
      "revId": "b4464ea89706f0aac940fddb1eb5d4ace46260b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6fa6af57_b22f748a",
        "filename": "private/file_contexts",
        "patchSetId": 1
      },
      "lineNbr": 419,
      "author": {
        "id": 1051712
      },
      "writtenOn": "2017-05-04T17:50:54Z",
      "side": 1,
      "message": "sys/fs/... contains all filesystems that expose attrs. The filesystem name is dynamic, can be ext2, ext3, f2fs, etc. \n\nandroid:/sys/fs # ls\ncgroup ecryptfs ext4 fuse pstore selinux\n\nThe tool here only cares about ext2-4 for now but I feel it\u0027s overprovisioning to do something like fs/ext[0-9]. Is there a way to not block subdirectories?",
      "parentUuid": "a41da642_f959a2c3",
      "range": {
        "startLine": 419,
        "startChar": 0,
        "endLine": 419,
        "endChar": 67
      },
      "revId": "b4464ea89706f0aac940fddb1eb5d4ace46260b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a643369_d0768fa2",
        "filename": "private/file_contexts",
        "patchSetId": 1
      },
      "lineNbr": 419,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2017-05-04T19:57:53Z",
      "side": 1,
      "message": "We can label in device specific policy since it\u0027s only dynamic across device types (e.g. different for Marlin vs Flounder), not within a target device (i.e. the same for all Marlins).\n\nAlso broad labels like this have the potential to really negatively impact boot time. You should verify that this is not causing major boot time regressions.",
      "parentUuid": "6fa6af57_b22f748a",
      "range": {
        "startLine": 419,
        "startChar": 0,
        "endLine": 419,
        "endChar": 67
      },
      "revId": "b4464ea89706f0aac940fddb1eb5d4ace46260b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "979a17c0_8138477f",
        "filename": "private/file_contexts",
        "patchSetId": 1
      },
      "lineNbr": 419,
      "author": {
        "id": 1051712
      },
      "writtenOn": "2017-05-04T21:22:21Z",
      "side": 1,
      "message": "I think I\u0027d step back and use fs/ext[0-9]+ if boot time is a concern. making rules device specific make it difficult to change supported filesystems.",
      "parentUuid": "0a643369_d0768fa2",
      "range": {
        "startLine": 419,
        "startChar": 0,
        "endLine": 419,
        "endChar": 67
      },
      "revId": "b4464ea89706f0aac940fddb1eb5d4ace46260b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f1e6c49_19c0f4a9",
        "filename": "private/genfs_contexts",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2017-05-04T03:28:57Z",
      "side": 1,
      "message": "note that other processes which previously had access to proc/filesystems under its \"proc\" label will now lose access. This change is fine, but be sure you test it well, and be prepared for it to cause bugs.",
      "range": {
        "startLine": 6,
        "startChar": 15,
        "endLine": 6,
        "endChar": 26
      },
      "revId": "b4464ea89706f0aac940fddb1eb5d4ace46260b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "afe3a377_415b273f",
        "filename": "private/genfs_contexts",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1051712
      },
      "writtenOn": "2017-05-04T17:50:54Z",
      "side": 1,
      "message": "Is there a way to not overriding existing access to proc? Otherwise, since we have allowed any with proc label to access /proc/filesystems, either grant or deny them access to filesystems changes existing behaviors of other apps, which is not the goal of this patch. I\u0027d just allow /proc for mke2fs in this case.",
      "parentUuid": "2f1e6c49_19c0f4a9",
      "range": {
        "startLine": 6,
        "startChar": 15,
        "endLine": 6,
        "endChar": 26
      },
      "revId": "b4464ea89706f0aac940fddb1eb5d4ace46260b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac320a6b_1180ea98",
        "filename": "private/genfs_contexts",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2017-05-04T19:57:53Z",
      "side": 1,
      "message": "Not really. This is a good change, we want processes to only have access to the files in /proc that they need, I just want you to be aware that it has the potential to cause bugs elsewhere. Please do some testing. We can then track on go/sedenials to ensure we\u0027re not causing bugs.",
      "parentUuid": "afe3a377_415b273f",
      "range": {
        "startLine": 6,
        "startChar": 15,
        "endLine": 6,
        "endChar": 26
      },
      "revId": "b4464ea89706f0aac940fddb1eb5d4ace46260b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16267ff2_beda555e",
        "filename": "private/genfs_contexts",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1051712
      },
      "writtenOn": "2017-05-04T21:22:21Z",
      "side": 1,
      "message": "It feels too risky to change from \nallowing a single app (mke2fs) to read /proc/filesystems \nto\nrestricting everyone that previously using proc to use proc_filesystems. This should really be in a separate patch. \n\nI agree with you to use limited access but the way to do it and fix all other apps seems too risky. We can\u0027t possibly test every app and I\u0027d not do that for this particular patch.\n\nIdeally we should open bug to audit wider than necessary access and restrict them to minimal.",
      "parentUuid": "ac320a6b_1180ea98",
      "range": {
        "startLine": 6,
        "startChar": 15,
        "endLine": 6,
        "endChar": 26
      },
      "revId": "b4464ea89706f0aac940fddb1eb5d4ace46260b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}