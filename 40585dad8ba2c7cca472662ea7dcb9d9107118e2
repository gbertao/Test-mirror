{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "12c01521_5eb329d0",
        "filename": "build/soong/selinux_contexts.go",
        "patchSetId": 7
      },
      "lineNbr": 422,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-02-08T08:10:35Z",
      "side": 1,
      "message": "Can you move these into the script as well? You might have to pass module name and BuildBrokenVendorPropertyNamespace though.",
      "range": {
        "startLine": 410,
        "startChar": 0,
        "endLine": 422,
        "endChar": 2
      },
      "revId": "40585dad8ba2c7cca472662ea7dcb9d9107118e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ad6dd96_e1904943",
        "filename": "build/soong/selinux_contexts.go",
        "patchSetId": 7
      },
      "lineNbr": 422,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2021-02-08T08:26:23Z",
      "side": 1,
      "message": "IMO the script should focus on searching the violations, whereas the build script should handle the warning/error messages. I feel uncomfortable for the script to process data which aren\u0027t related with the check itself.",
      "parentUuid": "12c01521_5eb329d0",
      "range": {
        "startLine": 410,
        "startChar": 0,
        "endLine": 422,
        "endChar": 2
      },
      "revId": "40585dad8ba2c7cca472662ea7dcb9d9107118e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b74d06f6_547f3007",
        "filename": "build/soong/selinux_contexts.go",
        "patchSetId": 7
      },
      "lineNbr": 422,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-02-08T08:41:55Z",
      "side": 1,
      "message": "Error message for compilation is from the compiler, not from the build system. Same should be true here. The error message is hardly contextual here; (1) name of the module, (2) whether build broken is allowed or not. (1) is actually not necessary as the script can show the input file name that user has to fix (which should be better than just showing the module name). (2) can be abstracted behind a flag like \"--strict\"",
      "parentUuid": "9ad6dd96_e1904943",
      "range": {
        "startLine": 410,
        "startChar": 0,
        "endLine": 422,
        "endChar": 2
      },
      "revId": "40585dad8ba2c7cca472662ea7dcb9d9107118e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd21127f_a14431d5",
        "filename": "build/soong/selinux_contexts.go",
        "patchSetId": 7
      },
      "lineNbr": 430,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-02-08T08:10:35Z",
      "side": 1,
      "message": "This might not work. b/178443594",
      "range": {
        "startLine": 430,
        "startChar": 21,
        "endLine": 430,
        "endChar": 32
      },
      "revId": "40585dad8ba2c7cca472662ea7dcb9d9107118e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "883832ce_653746cb",
        "filename": "build/soong/selinux_contexts.go",
        "patchSetId": 7
      },
      "lineNbr": 434,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-02-08T08:10:35Z",
      "side": 1,
      "message": "we are already inside a module-specific directory. why do we need this?",
      "range": {
        "startLine": 434,
        "startChar": 38,
        "endLine": 434,
        "endChar": 57
      },
      "revId": "40585dad8ba2c7cca472662ea7dcb9d9107118e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64c4afa5_c59a315f",
        "filename": "build/soong/selinux_contexts.go",
        "patchSetId": 7
      },
      "lineNbr": 449,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-02-08T08:41:55Z",
      "side": 1,
      "message": "what if we run this for inputs (and feed the result to buildGeneralContexts) so that users are notified with the input file that they need to fix?",
      "range": {
        "startLine": 449,
        "startChar": 53,
        "endLine": 449,
        "endChar": 65
      },
      "revId": "40585dad8ba2c7cca472662ea7dcb9d9107118e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f7d0833_50090c06",
        "filename": "tests/check_prop_prefix.py",
        "patchSetId": 7
      },
      "lineNbr": 25,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-02-08T08:10:35Z",
      "side": 1,
      "message": "Why don\u0027t you have a regex for this?",
      "range": {
        "startLine": 25,
        "startChar": 6,
        "endLine": 25,
        "endChar": 46
      },
      "revId": "40585dad8ba2c7cca472662ea7dcb9d9107118e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}