{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "02fdb9ee_aaffedd8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2022-02-05T02:23:59Z",
      "side": 1,
      "message": "go/android-codelab#make-iterative-changes Step#6 results with this fix:\n\n\n```\nramjiyani@ramjiyani:~/repos/aosp$ adb shell mount | grep system_dlkm\n/dev/block/dm-16 on /system_dlkm type ext4 (ro,seclabel,noatime,errors\u003dpanic)\nramjiyani@ramjiyani:~/repos/aosp$ adb root\nrestarting adbd as root\nramjiyani@ramjiyani:~/repos/aosp$ adb remount\nDisabling verity for /system\nWaited one second for gsiservice (is service started? are binder threads started and available?)\nUsing overlayfs for /system\nDisabling verity for /system\nDisabling verity for /odm\nUsing overlayfs for /odm\nDisabling verity for /odm\nDisabling verity for /product\nUsing overlayfs for /product\nDisabling verity for /product\nDisabling verity for /system_ext\nUsing overlayfs for /system_ext\nDisabling verity for /system_ext\nDisabling verity for /vendor\nUsing overlayfs for /vendor\nDisabling verity for /vendor\nDisabling verity for /vendor_dlkm\nUsing overlayfs for /vendor_dlkm\nDisabling verity for /vendor_dlkm\nDisabling verity for /odm_dlkm\nUsing overlayfs for /odm_dlkm\nDisabling verity for /odm_dlkm\nDisabling verity for /system_dlkm\nUsing overlayfs for /system_dlkm\nDisabling verity for /system_dlkm\nNow reboot your device for settings to take effect\nramjiyani@ramjiyani:~/repos/aosp$ adb reboot \u0026\u0026 adb wait-for-device root\nrestarting adbd as root\nramjiyani@ramjiyani:~/repos/aosp$ adb remount\nremount succeeded\nramjiyani@ramjiyani:~/repos/aosp$ adb sync\n/data/: 0 files pushed, 0 skipped.\n/odm/: 0 files pushed, 12 skipped.\n/product/: 0 files pushed, 331 skipped.\n/system/: 0 files pushed, 2924 skipped.\n/system_ext/: 0 files pushed, 75 skipped.\n/vendor/: 0 files pushed, 627 skipped.\nramjiyani@ramjiyani:~/repos/aosp$ adb reboot\nramjiyani@ramjiyani:~/repos/aosp$ adb wait-for-device\nramjiyani@ramjiyani:~/repos/aosp$ adb shell mount | grep system_dlkm\n/dev/block/dm-8 on /system_dlkm type ext4 (ro,seclabel,noatime,errors\u003dpanic)\noverlay on /system_dlkm type overlay (ro,seclabel,noatime,lowerdir\u003d/system_dlkm,upperdir\u003d/mnt/scratch/overlay/system_dlkm/upper,workdir\u003d/mnt/scratch/overlay/system_dlkm/work,override_creds\u003doff)\nramjiyani@ramjiyani:~/repos/aosp$\n```",
      "revId": "2548dedde7c9a8a2d5d209759bc341a8a6f0a5d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30a9cd27_4febcec3",
        "filename": "private/file_contexts",
        "patchSetId": 1
      },
      "lineNbr": 472,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-02-07T00:17:03Z",
      "side": 1,
      "message": "Do we want to reuse this label for kernel modules? I expected that we would have a new label so that we can fine control the access to these files.",
      "range": {
        "startLine": 472,
        "startChar": 47,
        "endLine": 472,
        "endChar": 58
      },
      "revId": "2548dedde7c9a8a2d5d209759bc341a8a6f0a5d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1faa73cd_d72dfcd2",
        "filename": "private/file_contexts",
        "patchSetId": 1
      },
      "lineNbr": 472,
      "author": {
        "id": 1889091
      },
      "writtenOn": "2022-02-07T01:02:07Z",
      "side": 1,
      "message": "Thanks Jiyong for review, and making me thinking deeper on this one.\n\nMy goal was to restore codelab to working state asap; just to make life easier for the people new to this. But thinking deeper now; how about this?\n\nI initially added this entry to fix the build; but now connecting the dots as I understand this more. Since for T any signed kernel module present in /system_dlkm is vendor\u0027s responsibility to load if they want that kernel feature for that particular device or for a device type like phone/car/tv etc which we never know in advance. Due to this, this actually should be labeled as vendor_file like vendor_dlkm, and any other label will limit vendor init script to load them.\n\nDoes it sound correct?\n\nHere is how vendor_dlkm is labeled:\n\n#############################\n# VendorDlkm files\n# This includes VENDOR Dynamically Loadable Kernel Modules and other misc files.\n#\n/(vendor_dlkm|vendor/vendor_dlkm|system/vendor/vendor_dlkm)(/.*)?         u:object_r:vendor_file:s0\n/(vendor_dlkm|vendor/vendor_dlkm|system/vendor/vendor_dlkm)/etc(/.*)?     u:object_r:vendor_configs_file:s0",
      "parentUuid": "30a9cd27_4febcec3",
      "range": {
        "startLine": 472,
        "startChar": 47,
        "endLine": 472,
        "endChar": 58
      },
      "revId": "2548dedde7c9a8a2d5d209759bc341a8a6f0a5d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44a34227_173c80ff",
        "filename": "private/file_contexts",
        "patchSetId": 1
      },
      "lineNbr": 472,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-02-07T01:37:23Z",
      "side": 1,
      "message": "Labeling a file that is under system_* as vendor_* seems a bit odd and counter-intuitive to me. In addition, vendor_dlkm being labeled as vendor_file doesn\u0027t look ideal either, though fixing that might not be in the scope of this CL.\n\nTo be honest, this neverallow [1] looks quite permissive to me. Every file in the system, vendor, rootfs partitions can be loaded.\n\nCan\u0027t we have system_kernel_module_file (or similar)? I may be too paranoid. So I\u0027ve invited Jeff and Joel to hear their opinion.\n\n[1] https://cs.android.com/android/platform/superproject/+/master:system/sepolicy/public/domain.te;drc\u003d6003019fa87fc3889e887af29580045de550cf96;l\u003d1265",
      "parentUuid": "1faa73cd_d72dfcd2",
      "range": {
        "startLine": 472,
        "startChar": 47,
        "endLine": 472,
        "endChar": 58
      },
      "revId": "2548dedde7c9a8a2d5d209759bc341a8a6f0a5d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8573528_ba8d08a5",
        "filename": "private/file_contexts",
        "patchSetId": 1
      },
      "lineNbr": 472,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2022-02-07T10:18:06Z",
      "side": 1,
      "message": "Probably best to provide a separate label for this. Everything has access to system_file, and there\u0027s really no reason to grant everything access to kernel modules.",
      "parentUuid": "44a34227_173c80ff",
      "range": {
        "startLine": 472,
        "startChar": 47,
        "endLine": 472,
        "endChar": 58
      },
      "revId": "2548dedde7c9a8a2d5d209759bc341a8a6f0a5d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}