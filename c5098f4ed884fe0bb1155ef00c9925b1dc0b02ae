{
  "comments": [
    {
      "key": {
        "uuid": "697cb771_a69b28c2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2020-01-28T20:21:17Z",
      "side": 1,
      "message": "vold is in init group \"core\" [1], whereas zygote is in init group \"main\". The \"core\" group always starts before the \"main\" group [3], so I\u0027m not sure how this race condition should occur.\n\nIf this is happening, it seems like a race condition that should be fixed.\n\n[1] https://android.googlesource.com/platform/system/vold/+/432ca5af06a540f627a3b82c870b9ec099f309b7/vold.rc#4\n[2] https://android.googlesource.com/platform/system/core/+/077839ab239f0aeae95e0b3814da70f6a0eb9699/rootdir/init.zygote64.rc#2\n[3] https://android.googlesource.com/platform/system/core/+/077839ab239f0aeae95e0b3814da70f6a0eb9699/rootdir/init.rc#887",
      "range": {
        "startLine": 24,
        "startChar": 8,
        "endLine": 24,
        "endChar": 41
      },
      "revId": "c5098f4ed884fe0bb1155ef00c9925b1dc0b02ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "daea5402_7d798081",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1346941
      },
      "writtenOn": "2020-01-28T21:01:00Z",
      "side": 1,
      "message": "You are right and thanks for the links. I\u0027ve updated my commit message to reflect what I meant. Which is, zygote forking an app for a user before vold has finished preparing the mounts/paths for that user.\n\nThat too is very unlikely in practice, but we do handle it for /mnt/user/\u003cuserid\u003e by creating the dir in zygote if it doesn\u0027t exist and I\u0027ll do same for /mnt/pass_through/\u003cuserid\u003e in a follow up cl",
      "parentUuid": "697cb771_a69b28c2",
      "range": {
        "startLine": 24,
        "startChar": 8,
        "endLine": 24,
        "endChar": 41
      },
      "revId": "c5098f4ed884fe0bb1155ef00c9925b1dc0b02ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "127247f7_483cb0c8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2020-01-28T21:12:02Z",
      "side": 1,
      "message": "To avoid the race condition, perhaps zygote should unconditionally create these links, and not have vold / system_server responsible for calling into vold. That would be much simpler, probably faster, and avoid the race condition.\n\nPerhaps a future change?\n\nThe goal of the sepolicy review is not to only address security issues, but also to address architectural issues too.",
      "parentUuid": "daea5402_7d798081",
      "range": {
        "startLine": 24,
        "startChar": 8,
        "endLine": 24,
        "endChar": 41
      },
      "revId": "c5098f4ed884fe0bb1155ef00c9925b1dc0b02ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6a676da_fb8240d4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1346941
      },
      "writtenOn": "2020-01-28T22:22:12Z",
      "side": 1,
      "message": "I agree, only one component should be responsible for creating these. It\u0027s a bit tricky cos system_server is the \u0027first\u0027 to know when a user is started and needs vold to do some more involved path setup for that user, maybe we can have a strict invariant that when a zygote app is forked its paths must have already been created by vold. Will discuss further here b/148480835",
      "parentUuid": "127247f7_483cb0c8",
      "range": {
        "startLine": 24,
        "startChar": 8,
        "endLine": 24,
        "endChar": 41
      },
      "revId": "c5098f4ed884fe0bb1155ef00c9925b1dc0b02ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}