{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "25b4d611_ef2be205",
        "filename": "private/compat/30.0/30.0.ignore.cil",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1659435
      },
      "writtenOn": "2021-01-25T14:05:38Z",
      "side": 1,
      "message": "Is it ok to have this ignored on previous Android versions?",
      "revId": "58c65933227c838d247a511cb2c8b97f9c73b6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14605806_ba999d02",
        "filename": "private/compat/30.0/30.0.ignore.cil",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-01-26T12:10:12Z",
      "side": 1,
      "message": "It depends on whether there\u0027s an analogue of this in the old policy. I guess this could be mapped to either vendor_public_lib_file or vendor_framework_file, again depending on whether or not we would like to fix this retroactively. I personally prefer fixing it.",
      "parentUuid": "25b4d611_ef2be205",
      "revId": "58c65933227c838d247a511cb2c8b97f9c73b6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2413fb89_8bb19b1c",
        "filename": "private/compat/30.0/30.0.ignore.cil",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1659435
      },
      "writtenOn": "2021-01-26T13:16:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "14605806_ba999d02",
      "revId": "58c65933227c838d247a511cb2c8b97f9c73b6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8db58f52_79fe7ddb",
        "filename": "public/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 995,
      "author": {
        "id": 1659435
      },
      "writtenOn": "2021-01-25T14:05:38Z",
      "side": 1,
      "message": "Is this the best place to add this rule? The coredomain.te is only in /private folder, should there be something similar in /public ?",
      "revId": "58c65933227c838d247a511cb2c8b97f9c73b6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7d6e305_d40be0f0",
        "filename": "public/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 995,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-01-26T01:47:56Z",
      "side": 1,
      "message": "I think this should be `allow appdomain ...` in public/app.te.",
      "parentUuid": "8db58f52_79fe7ddb",
      "revId": "58c65933227c838d247a511cb2c8b97f9c73b6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f18c4a2_299dfea4",
        "filename": "public/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 995,
      "author": {
        "id": 1659435
      },
      "writtenOn": "2021-01-26T10:25:31Z",
      "side": 1,
      "message": "The bug states \"Apps belonging to coredomain is not allowed to execute\" vendor libs, allowing appdomain would technically make vendor_public_framework_file the same as vendor_public_lib_file, also taking in consideration the next comment. Is this intentional, or is there a way to better label the system apps?",
      "parentUuid": "f7d6e305_d40be0f0",
      "revId": "58c65933227c838d247a511cb2c8b97f9c73b6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5c667de_2d316edf",
        "filename": "public/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 995,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-01-26T12:10:12Z",
      "side": 1,
      "message": "coredomain and apps installed in /system are not equal. either of them is a subset of the other. coredomain can include both app processes (java) and native processes. In addition, some /system apps don\u0027t have the coredomain attribute.\n\nSince we have been allowing vendor_framework_file and vendor_public_lib_file to appdomain, not to coredomain, I think this new type should also be for appdomain.",
      "parentUuid": "6f18c4a2_299dfea4",
      "revId": "58c65933227c838d247a511cb2c8b97f9c73b6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "95be84e1_9361cc5f",
        "filename": "public/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 995,
      "author": {
        "id": 1659435
      },
      "writtenOn": "2021-01-26T13:16:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d5c667de_2d316edf",
      "revId": "58c65933227c838d247a511cb2c8b97f9c73b6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e24d4af_02853550",
        "filename": "public/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 1350,
      "author": {
        "id": 1659435
      },
      "writtenOn": "2021-01-25T14:05:38Z",
      "side": 1,
      "message": "Would something similar be needed for vendor_public_framework_file? (e.g. neverallow {coredomain -appdomain} vendor_public_framework_file)",
      "revId": "58c65933227c838d247a511cb2c8b97f9c73b6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04f69487_0acd0d63",
        "filename": "public/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 1350,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-01-26T01:47:56Z",
      "side": 1,
      "message": "Yes. You can modify this rule to be `{ vendor_public_lib_file vendor_public_framework_file }:file`",
      "parentUuid": "7e24d4af_02853550",
      "revId": "58c65933227c838d247a511cb2c8b97f9c73b6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5c4b458_49b67c09",
        "filename": "public/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 1350,
      "author": {
        "id": 1659435
      },
      "writtenOn": "2021-01-26T10:25:31Z",
      "side": 1,
      "message": "Wouldn\u0027t that prevent the system apps access to vendor libs? Or we want to allow it only for non full treble case?",
      "parentUuid": "04f69487_0acd0d63",
      "revId": "58c65933227c838d247a511cb2c8b97f9c73b6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "396debfd_b0f08656",
        "filename": "public/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 1350,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-01-26T12:10:12Z",
      "side": 1,
      "message": "{coredomain -appdomain} means native processes started from /system. I am not sure which of the processes would need access to the vendor framework libraries. Since they are native processes, most of them won\u0027t need the access to the java libraries.",
      "parentUuid": "b5c4b458_49b67c09",
      "revId": "58c65933227c838d247a511cb2c8b97f9c73b6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0df9856b_8bf14a9d",
        "filename": "public/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 1350,
      "author": {
        "id": 1659435
      },
      "writtenOn": "2021-01-26T13:16:04Z",
      "side": 1,
      "message": "Done. Though atm vendor_public_framework_file and vendor_public_lib_file have the same functionality. Would adding a neverallow rule to prevent non system apps using vendor_public_framework_file be desired at this point?",
      "parentUuid": "396debfd_b0f08656",
      "revId": "58c65933227c838d247a511cb2c8b97f9c73b6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}