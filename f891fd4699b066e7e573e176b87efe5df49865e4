{
  "comments": [
    {
      "key": {
        "uuid": "3f4ba4fa_21098b3e",
        "filename": "public/ueventd.te",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2020-06-10T10:34:00Z",
      "side": 1,
      "message": "This is a massive change increase in the privilege level of ueventd. Why is this necessary?",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 72
      },
      "revId": "f891fd4699b066e7e573e176b87efe5df49865e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07ac5725_d84620d6",
        "filename": "public/ueventd.te",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2020-06-10T10:45:39Z",
      "side": 1,
      "message": "The topic tries to switch \"mount namespace\" for ueventd process.\nThe call to setns() requires this.",
      "parentUuid": "3f4ba4fa_21098b3e",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 72
      },
      "revId": "f891fd4699b066e7e573e176b87efe5df49865e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19b4d66c_14777e80",
        "filename": "public/ueventd.te",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2020-06-10T10:49:06Z",
      "side": 1,
      "message": "\u003e The topic tries to switch \"mount namespace\" for ueventd process.\n\nWhy?",
      "parentUuid": "07ac5725_d84620d6",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 72
      },
      "revId": "f891fd4699b066e7e573e176b87efe5df49865e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49f739e2_97338eb5",
        "filename": "public/ueventd.te",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2020-06-10T11:30:47Z",
      "side": 1,
      "message": "We\u0027re trying to support loading firmwares from APEXes.\n\ninit process prepares two mount namespaces: bootstrap and default which have different set of APEXes, by the way.\n\nueventd is one of early processes which starts in a bootstrap mount namespace. But to support loading firmwares from regular APEXes which are mounted in \"default\" mount namespace ueventd needs to switch its mount namespace to \"default\" when APEXes are ready to use.",
      "parentUuid": "19b4d66c_14777e80",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 72
      },
      "revId": "f891fd4699b066e7e573e176b87efe5df49865e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b8d1586_ccc9f955",
        "filename": "public/ueventd.te",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2020-06-10T11:34:39Z",
      "side": 1,
      "message": "Can init do this for ueventd? Init already has these privileges.",
      "parentUuid": "49f739e2_97338eb5",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 72
      },
      "revId": "f891fd4699b066e7e573e176b87efe5df49865e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bae35f01_de04fc82",
        "filename": "public/ueventd.te",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2020-06-10T11:44:59Z",
      "side": 1,
      "message": "AFAIK, loading firmware is one of ueventd responsibilities. Well, given that ueventd is just a symlink of init, it might be doable.\n\nTom, what do you think?",
      "parentUuid": "0b8d1586_ccc9f955",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 72
      },
      "revId": "f891fd4699b066e7e573e176b87efe5df49865e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ec34abb_7b60d716",
        "filename": "public/ueventd.te",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2020-06-10T15:43:59Z",
      "side": 1,
      "message": "Is the question can init force ueventd to transition to the new namespace or for init to handle firmwares?\n\nFor the first question:\nI don\u0027t think there are any syscalls that can push a different process into a given namespace.  \n\nThere\u0027s a chicken and egg problem here that prevents init from starting ueventd in the default, since we use the bootstrap namespace for any process that is started before /data is mounted and we need to start ueventd to mount /data.  (Unless it would be somehow possible to start ueventd in the default namespace ahead of mounting /data?  I\u0027m guessing that\u0027s not possible, but Jooyung/Jiyong would be better to confirm).\n\nWe don\u0027t want to restart ueventd either, since if we close the uevent netlink socket, then we may miss uevents between when we close it and reopen it.  Maybe we could come up with a strategy to keep this socket alive through ueventd restarts, but that\u0027ll also be complex / require more privileges.  \n\nThat said, I don\u0027t think we\u0027d have significant issues if two copies of ueventd are running in parallel, or at least we should be able to use some sort of shared lock to ensure that only one of them is functional... so maybe launching a ueventd_default_ns after /data is mounted is another solution?\n\nFor the second question:\nYes it\u0027s pretty much just the design; ueventd reads from the uevent netlink socket and handles firmwares.  I don\u0027t think we\u0027ll want to change that design.",
      "parentUuid": "bae35f01_de04fc82",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 72
      },
      "revId": "f891fd4699b066e7e573e176b87efe5df49865e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64d2e56c_83a282b1",
        "filename": "public/ueventd.te",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2020-06-10T10:34:00Z",
      "side": 1,
      "message": "Why is this needed?",
      "range": {
        "startLine": 70,
        "startChar": 16,
        "endLine": 70,
        "endChar": 25
      },
      "revId": "f891fd4699b066e7e573e176b87efe5df49865e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b2ab83e_ab715074",
        "filename": "public/ueventd.te",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2020-06-10T10:45:39Z",
      "side": 1,
      "message": "open(/proc/1/ns/mnt) requires this.\nWhen I tested, mount namespace file(say, /proc/1/ns/mnt) was labeled as \"unlabeled\".  \n\nI thought labeling those files as \"nsfs\" would be the ideal, but a quick codesearch revealed that many processes are using \"unlabeled\" and changing them seems to be too much for this change.",
      "parentUuid": "64d2e56c_83a282b1",
      "range": {
        "startLine": 70,
        "startChar": 16,
        "endLine": 70,
        "endChar": 25
      },
      "revId": "f891fd4699b066e7e573e176b87efe5df49865e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}