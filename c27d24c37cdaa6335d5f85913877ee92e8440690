{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "683e2d5b_075d6c9c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2022-02-09T03:10:38Z",
      "side": 1,
      "message": "Is there some way to write a neverallow rule that would enforce:\n\nthere should never be a vendor process (domain?) with one or more of {net_admin, net_raw} capability and access to bpf?",
      "revId": "c27d24c37cdaa6335d5f85913877ee92e8440690",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25983409_782ba048",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-02-09T03:16:32Z",
      "side": 1,
      "message": "We only allow vendor processes to use tracepoints, so I don\u0027t think it should matter. net_admin/net_raw would need to be controlled with a kernel change AFAIU, unless we have a framework process that could delegate this access control lookup. However, in that case, due to the size of these permission sets, and that fact that they would confer other unneeded permissions, it\u0027s recommended to add a new access_vector.\n\nStill - we have the problem here that we don\u0027t have an access_vector for bpf attach points specifically (from your comments on the bug), so we can\u0027t really guard specific usage, which is why we only allow have tracepoints exposed.",
      "parentUuid": "683e2d5b_075d6c9c",
      "revId": "c27d24c37cdaa6335d5f85913877ee92e8440690",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3a91931_0c173feb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1115183
      },
      "writtenOn": "2022-02-09T03:29:27Z",
      "side": 1,
      "message": "Not sure if there\u0027s a kernel issue for maze@\u0027s proposal - can\u0027t we already restrict capabilities via selinux?\n\nNot 100% sure if this would work, but maybe we could add a new domain for which:\n- vendor processes within the domain are never allowed to have those capabilities\n- vendor processes outside it are never allowed to have any bpf permissions,  access to /sys/fs/bpf, etc.",
      "parentUuid": "25983409_782ba048",
      "revId": "c27d24c37cdaa6335d5f85913877ee92e8440690",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dad23ae3_ca2fbd06",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2022-02-09T22:34:59Z",
      "side": 1,
      "message": "I\u0027m disappointed this topic was merged without more discussion and without more protections to prevent vendor bpf networking use.",
      "revId": "c27d24c37cdaa6335d5f85913877ee92e8440690",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "943ff296_15b53b80",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-02-09T22:48:40Z",
      "side": 1,
      "message": "Please see the email thread - I also talked with Lorenzo offline. The existing situation already doesn\u0027t guarantee much for networking, and this is limited to tracepoints. We\u0027re going to meet about fixing the existing problems soon (this really doesn\u0027t regress the story here - vendors can already put BPF programs on the system image)",
      "parentUuid": "dad23ae3_ca2fbd06",
      "revId": "c27d24c37cdaa6335d5f85913877ee92e8440690",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39509750_547d8187",
        "filename": "public/bpfloader.te",
        "patchSetId": 8
      },
      "lineNbr": 1,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2022-02-09T22:34:59Z",
      "side": 1,
      "message": "why did we need to add this?\n\nbpfloader should not need to be publically visible?",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 35
      },
      "revId": "c27d24c37cdaa6335d5f85913877ee92e8440690",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea156386_7f2985ba",
        "filename": "public/bpfloader.te",
        "patchSetId": 8
      },
      "lineNbr": 1,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-02-09T22:48:40Z",
      "side": 1,
      "message": "It would be needed for a rule like this for vendor:\n\nallow hal_health_server bpfloader:bpf prog_run;",
      "parentUuid": "39509750_547d8187",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 35
      },
      "revId": "c27d24c37cdaa6335d5f85913877ee92e8440690",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}