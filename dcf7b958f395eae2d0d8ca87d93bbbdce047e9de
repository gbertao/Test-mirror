{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4114fb91_7cd97cef",
        "filename": "private/charger_type.te",
        "patchSetId": 10
      },
      "lineNbr": 3,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-10-29T23:50:48Z",
      "side": 1,
      "message": "Jeff, qqs:\n\n- is there a better name for this, since it\u0027s an attribute (not a type)? I am thinking it should be \u0027charger_domain\u0027, but maybe you have an even more specific idea?\n- I think it\u0027s interesting to note here that this attribute is used exactly like some of these single-parameter macros. Since expandattribute is not specified, and it will be compiled out, I actually quite like the use of an attribute over, say, a macro like \u0027use_binder\u0027. One of the coolest things about this is that it allows you to write rules about all of the charger_type. This can be much more explicit/clear than some of the rules we have. We should consider replacing some of the macros we do have with attributes.",
      "range": {
        "startLine": 3,
        "startChar": 16,
        "endLine": 3,
        "endChar": 21
      },
      "revId": "dcf7b958f395eae2d0d8ca87d93bbbdce047e9de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d69f6a1_3e22ccac",
        "filename": "private/charger_type.te",
        "patchSetId": 10
      },
      "lineNbr": 3,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-10-30T05:33:58Z",
      "side": 1,
      "message": "I used to call it \"charger_common_type\" but Alan suggests \"charger_type\". Let me know if you want better names.",
      "parentUuid": "4114fb91_7cd97cef",
      "range": {
        "startLine": 3,
        "startChar": 16,
        "endLine": 3,
        "endChar": 21
      },
      "revId": "dcf7b958f395eae2d0d8ca87d93bbbdce047e9de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba1ee56d_636067ab",
        "filename": "private/charger_type.te",
        "patchSetId": 10
      },
      "lineNbr": 3,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2021-11-01T06:57:51Z",
      "side": 1,
      "message": "The primary reason for avoiding using attributes this way is because it makes writing useful neverallow rules difficult to enforce, and easy to bypass. For example, if you create a neverallow rule but want to exempt an attribute, then you have to add a lot of logic that ensures that only expected types have that attribute. The neverallow rule below is a good example. How are we preventing arbitrary types from being added to the charger_type attribute? A partner could add charger_type to untrusted app (or any other type) and thus be able to bypass the intended purpose of this neverallow rule. For appdomain, we have tests that ensure that zygote-forked processes have the appdomain attribute and non-zygote-forked processes do no. Macros OTOH allow assigning permissions to types while still requiring that types be specifically exempted from neverallow rules that they violate.",
      "parentUuid": "1d69f6a1_3e22ccac",
      "range": {
        "startLine": 3,
        "startChar": 16,
        "endLine": 3,
        "endChar": 21
      },
      "revId": "dcf7b958f395eae2d0d8ca87d93bbbdce047e9de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e08894d_b8fead16",
        "filename": "private/charger_type.te",
        "patchSetId": 10
      },
      "lineNbr": 3,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-11-01T20:15:13Z",
      "side": 1,
      "message": "TBH I don\u0027t care if apps can read charger_config_prop, though it is not intentional with this neverallow rule.\n\nAlso, charger_config_prop are ro.*, so they should be readonly.\n\nI can also add\n\n```\nneverallow {\n    domain\n    -init\n    -dumpstate\n    -vendor_init\n} charger_config_prop :file no_w_file_perms;\n```\n\n... because charget_type should only `get_prop(charger_config_prop)`\n\n------------\n\ncharger_status_prop is a bit tricky because it is a property writable by charger domains. Maybe I can do this?\n\n```\nneverallow {\n    domain\n    -init\n    -dumpstate\n    -vendor_init\n    -charger_type\n} { charger_status_prop }:file no_rw_file_perms;\nneverallow {\n    domain\n    -init\n    -dumpstate\n    -vendor_init\n    -hal_health_server\n} { charger_status_prop }:file no_rw_file_perms;\n```\n\nThis ensures that only init, dumpstate, vendor_init, and a domain that is both (charger_type and hal_health_server) can do set_prop on the properties.\n\nThough, hal_health_server is also an an attribute, so it does not completely solve the problem.\n\n---------\n\nAnother option is to ask vendor health HALs to also use hal_health_default (in fact, they are already doing this), and explicitly list `charger` and `hal_health_default` as an allowlist here.",
      "parentUuid": "ba1ee56d_636067ab",
      "range": {
        "startLine": 3,
        "startChar": 16,
        "endLine": 3,
        "endChar": 21
      },
      "revId": "dcf7b958f395eae2d0d8ca87d93bbbdce047e9de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bceaad59_bb738e7b",
        "filename": "private/charger_type.te",
        "patchSetId": 10
      },
      "lineNbr": 3,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2021-11-03T07:10:29Z",
      "side": 1,
      "message": "hal_health_server is also an attribute, but the various hal_*_server attributes do have additional tests which prevent them from being arbitrarily applied to domains, so I think this is a reasonable solution.\n\n\u003e TBH I don\u0027t care if apps can read charger_config_prop, though it is not intentional with this neverallow rule.\n\nYou should. Undocumented APIs exposed via system properties is a continual cause of app compat issues. If a property isn\u0027t specifically required to be exposed, it shouldn\u0027t be.\n\n\u003e } { charger_status_prop }:file no_rw_file_perms;\nNote that while properties are directly read from files, they\u0027re not written directly to files. Rather, this is controlled by the property service. So if you intend to limit which domains are allowed to set a property you need a separate neverallow rule. Something like:\n\nneverallow { domain -... } charger_status_config:property_service set;",
      "parentUuid": "4e08894d_b8fead16",
      "range": {
        "startLine": 3,
        "startChar": 16,
        "endLine": 3,
        "endChar": 21
      },
      "revId": "dcf7b958f395eae2d0d8ca87d93bbbdce047e9de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf1a3596_1e9c0a87",
        "filename": "private/charger_type.te",
        "patchSetId": 10
      },
      "lineNbr": 3,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-11-03T19:24:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bceaad59_bb738e7b",
      "range": {
        "startLine": 3,
        "startChar": 16,
        "endLine": 3,
        "endChar": 21
      },
      "revId": "dcf7b958f395eae2d0d8ca87d93bbbdce047e9de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9d0c4d2_1a413129",
        "filename": "private/charger_type.te",
        "patchSetId": 10
      },
      "lineNbr": 3,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-11-03T19:48:38Z",
      "side": 1,
      "message": "\u003e is there a better name for this, since it\u0027s an attribute (not a type)? I am thinking it should be \u0027charger_domain\u0027, but maybe you have an even more specific idea?",
      "parentUuid": "cf1a3596_1e9c0a87",
      "range": {
        "startLine": 3,
        "startChar": 16,
        "endLine": 3,
        "endChar": 21
      },
      "revId": "dcf7b958f395eae2d0d8ca87d93bbbdce047e9de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02cd22c3_513002d9",
        "filename": "public/charger_type.te",
        "patchSetId": 10
      },
      "lineNbr": 12,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-10-29T23:50:48Z",
      "side": 1,
      "message": "style (compared to line below?)",
      "range": {
        "startLine": 12,
        "startChar": 52,
        "endLine": 12,
        "endChar": 54
      },
      "revId": "dcf7b958f395eae2d0d8ca87d93bbbdce047e9de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b0aec093_56e7277b",
        "filename": "public/charger_type.te",
        "patchSetId": 10
      },
      "lineNbr": 12,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-11-03T19:24:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02cd22c3_513002d9",
      "range": {
        "startLine": 12,
        "startChar": 52,
        "endLine": 12,
        "endChar": 54
      },
      "revId": "dcf7b958f395eae2d0d8ca87d93bbbdce047e9de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "078cc7c2_2cad95f9",
        "filename": "public/charger_type.te",
        "patchSetId": 10
      },
      "lineNbr": 35,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-10-29T23:50:48Z",
      "side": 1,
      "message": "these should only be needed by charger mode for the most part, right? not the health HAL?",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 35,
        "endChar": 49
      },
      "revId": "dcf7b958f395eae2d0d8ca87d93bbbdce047e9de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04c89a21_7161fa86",
        "filename": "public/charger_type.te",
        "patchSetId": 10
      },
      "lineNbr": 35,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-10-30T05:33:58Z",
      "side": 1,
      "message": "Correct, this is for charger mode.\n\nIn AIDL health HAL, I am combining the functionality of charger into the health HAL. This is why these permissions are added to the health HAL.\n\nWhen the health HAL is started as charger mode, it will continue to have domain `hal_health_default` (or some vendor specific domain), but NOT the charger domain. Note the charger domain is a coredomain because it is a system binary.",
      "parentUuid": "078cc7c2_2cad95f9",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 35,
        "endChar": 49
      },
      "revId": "dcf7b958f395eae2d0d8ca87d93bbbdce047e9de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45177b10_8528bb2f",
        "filename": "public/charger_type.te",
        "patchSetId": 10
      },
      "lineNbr": 35,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-11-03T19:24:01Z",
      "side": 1,
      "message": "Resolving. Please reopen if you have additional comments on this",
      "parentUuid": "04c89a21_7161fa86",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 35,
        "endChar": 49
      },
      "revId": "dcf7b958f395eae2d0d8ca87d93bbbdce047e9de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b3d0f2a_9f670f41",
        "filename": "public/charger_type.te",
        "patchSetId": 10
      },
      "lineNbr": 35,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-11-03T19:48:38Z",
      "side": 1,
      "message": "Wait - sorry, we are only adding charger_type to charger now? Where else will we add it (if not in this CL, please document in commit message)",
      "parentUuid": "45177b10_8528bb2f",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 35,
        "endChar": 49
      },
      "revId": "dcf7b958f395eae2d0d8ca87d93bbbdce047e9de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c29fc0aa_391d4425",
        "filename": "public/charger_type.te",
        "patchSetId": 10
      },
      "lineNbr": 35,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-11-03T19:52:03Z",
      "side": 1,
      "message": "yeah this is supposed to be a \"refactoring\" CL that does not add anything new.\n\nCL:1870393 is the CL to add charger_type to health HAL. And potentially, it can be added to vendor domains that serves the health HAL.\n\nI have put this in the commit message.",
      "parentUuid": "3b3d0f2a_9f670f41",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 35,
        "endChar": 49
      },
      "revId": "dcf7b958f395eae2d0d8ca87d93bbbdce047e9de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}