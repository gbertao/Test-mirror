{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7621ef6e_2d55e183",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:49:35Z",
      "side": 1,
      "message": "A quick first pass; I don\u0027t entirely understand this yet.",
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aded6f1d_170bcd44",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-11-19T14:19:11Z",
      "side": 1,
      "message": "Sorry, this CL should have come with more explanation.\n\nIn Android S, ART becomes an updatable Mainline module. In the module there is a program called odrefresh which recompiles the parts of the boot class path that are not in the ART apex themselves (e.g. frameworks.jar) and the system server jars. There is also a component called ods (http://ag/12685324) which signs the artifacts and checks their signatures on subsequent boots. ods drives odrefresh to check the artifacts for existence and freshness and to recompile if necessary. \n\nThere are two main things going on in this CL:\n\n1) enabling zygote to load the updated artifacts from the ART APEX data directory /data/misc/apexdata/com.android.art (go/apex-data-directories).\n2) enabling odrefresh to write artifacts.\n\nThe path in 1 mostly tries to follow what we do currently for the dalvik-cache. The path in 2 mostly tries to copy what we do for installd, e.g. do not allow dex2oat to write artifacts directly but have odrefresh create the descriptors and pass them to dex2oat.\n\nIt might make this easier to review if we split 1 and 2 out into separate CLs?",
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aec8716a_3b67e8dd",
        "filename": "prebuilts/api/30.0/private/file_contexts",
        "patchSetId": 12
      },
      "lineNbr": 523,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:49:35Z",
      "side": 1,
      "message": "There\u0027s a couple of missing \\ here that it wouldn\u0027t hurt to fix",
      "range": {
        "startLine": 523,
        "startChar": 23,
        "endLine": 523,
        "endChar": 24
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae69b319_a927f3ba",
        "filename": "private/apexd.te",
        "patchSetId": 12
      },
      "lineNbr": 15,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:49:35Z",
      "side": 1,
      "message": "Why do you need to relabel? Will these files exist anywhere other than in the relevant apexdata dir?\n(The same question applies to some of the other types below. There\u0027s probably a reason, would be nice to capture it in the comment.)",
      "range": {
        "startLine": 15,
        "startChar": 54,
        "endLine": 15,
        "endChar": 63
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17ff3a62_51fb45a5",
        "filename": "private/dex2oat.te",
        "patchSetId": 12
      },
      "lineNbr": 35,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:49:35Z",
      "side": 1,
      "message": "I thought we generally tried to pass in open file handles to dex2oat?",
      "range": {
        "startLine": 35,
        "startChar": 2,
        "endLine": 35,
        "endChar": 29
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d73a6340_32bfd011",
        "filename": "private/dex2oat.te",
        "patchSetId": 12
      },
      "lineNbr": 38,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:49:35Z",
      "side": 1,
      "message": "Comment needs fixing",
      "range": {
        "startLine": 38,
        "startChar": 8,
        "endLine": 38,
        "endChar": 14
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38b79526_3120b61a",
        "filename": "private/dexoptanalyzer.te",
        "patchSetId": 12
      },
      "lineNbr": 22,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:49:35Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 22,
        "startChar": 2,
        "endLine": 22,
        "endChar": 7
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57f1785d_5f650890",
        "filename": "private/domain.te",
        "patchSetId": 12
      },
      "lineNbr": 273,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:49:35Z",
      "side": 1,
      "message": "Should you be constraining read too?",
      "range": {
        "startLine": 273,
        "startChar": 38,
        "endLine": 273,
        "endChar": 45
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72e3f9f0_db3a0bc6",
        "filename": "private/domain.te",
        "patchSetId": 12
      },
      "lineNbr": 273,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-11-19T14:19:11Z",
      "side": 1,
      "message": "The data directory here will contain signed AOT compilation artifacts of system server and boot class path extensions following an update of the ART APEX through a Mainline update. We map the files into all managed processes (through zygotes) and various diagnostic tools need to be able to read them.\n\nThe change here was based on the example of the dalvikcache immediately above as this is AOT artifacts.\n\nShould we try locking this down further?",
      "parentUuid": "57f1785d_5f650890",
      "range": {
        "startLine": 273,
        "startChar": 38,
        "endLine": 273,
        "endChar": 45
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a6f659a_38aa8eec",
        "filename": "private/odrefresh.te",
        "patchSetId": 12
      },
      "lineNbr": 3,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:50:53Z",
      "side": 1,
      "message": "I think you\u0027re missing a transition rule so that running odrefresh_exec moves into the odrefresh domain.",
      "range": {
        "startLine": 3,
        "startChar": 5,
        "endLine": 3,
        "endChar": 19
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a44e717b_404350be",
        "filename": "private/shell.te",
        "patchSetId": 12
      },
      "lineNbr": 77,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:49:35Z",
      "side": 1,
      "message": "Missing verb",
      "range": {
        "startLine": 77,
        "startChar": 2,
        "endLine": 77,
        "endChar": 8
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffa0cf8c_69310001",
        "filename": "private/zygote.te",
        "patchSetId": 12
      },
      "lineNbr": 56,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:49:35Z",
      "side": 1,
      "message": "Typo",
      "range": {
        "startLine": 56,
        "startChar": 8,
        "endLine": 56,
        "endChar": 14
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78d2fd8b_fc8b8ed8",
        "filename": "public/crash_dump.te",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:49:35Z",
      "side": 1,
      "message": "zygote -\u003e crash_dump",
      "range": {
        "startLine": 32,
        "startChar": 6,
        "endLine": 32,
        "endChar": 12
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}