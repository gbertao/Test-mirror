{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7621ef6e_2d55e183",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:49:35Z",
      "side": 1,
      "message": "A quick first pass; I don\u0027t entirely understand this yet.",
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aded6f1d_170bcd44",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-11-19T14:19:11Z",
      "side": 1,
      "message": "Sorry, this CL should have come with more explanation.\n\nIn Android S, ART becomes an updatable Mainline module. In the module there is a program called odrefresh which recompiles the parts of the boot class path that are not in the ART apex themselves (e.g. frameworks.jar) and the system server jars. There is also a component called ods (http://ag/12685324) which signs the artifacts and checks their signatures on subsequent boots. ods drives odrefresh to check the artifacts for existence and freshness and to recompile if necessary. \n\nThere are two main things going on in this CL:\n\n1) enabling zygote to load the updated artifacts from the ART APEX data directory /data/misc/apexdata/com.android.art (go/apex-data-directories).\n2) enabling odrefresh to write artifacts.\n\nThe path in 1 mostly tries to follow what we do currently for the dalvik-cache. The path in 2 mostly tries to copy what we do for installd, e.g. do not allow dex2oat to write artifacts directly but have odrefresh create the descriptors and pass them to dex2oat.\n\nIt might make this easier to review if we split 1 and 2 out into separate CLs?",
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17cfea12_91908d98",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T14:28:31Z",
      "side": 1,
      "message": "\u003e There are two main things going on in this CL:\n\nThanks, that\u0027s very helpful.\n\n\u003e It might make this easier to review if we split 1 and 2 out into separate CLs?\n\nPossibly, although it\u0027s going to be quite tricky anyway.",
      "parentUuid": "aded6f1d_170bcd44",
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aec8716a_3b67e8dd",
        "filename": "prebuilts/api/30.0/private/file_contexts",
        "patchSetId": 12
      },
      "lineNbr": 523,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:49:35Z",
      "side": 1,
      "message": "There\u0027s a couple of missing \\ here that it wouldn\u0027t hurt to fix",
      "range": {
        "startLine": 523,
        "startChar": 23,
        "endLine": 523,
        "endChar": 24
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e86afa8_d5c76728",
        "filename": "prebuilts/api/30.0/private/file_contexts",
        "patchSetId": 12
      },
      "lineNbr": 523,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-11-19T16:42:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aec8716a_3b67e8dd",
      "range": {
        "startLine": 523,
        "startChar": 23,
        "endLine": 523,
        "endChar": 24
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae69b319_a927f3ba",
        "filename": "private/apexd.te",
        "patchSetId": 12
      },
      "lineNbr": 15,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:49:35Z",
      "side": 1,
      "message": "Why do you need to relabel? Will these files exist anywhere other than in the relevant apexdata dir?\n(The same question applies to some of the other types below. There\u0027s probably a reason, would be nice to capture it in the comment.)",
      "range": {
        "startLine": 15,
        "startChar": 54,
        "endLine": 15,
        "endChar": 63
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12e7b2c9_060a98da",
        "filename": "private/apexd.te",
        "patchSetId": 12
      },
      "lineNbr": 15,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-11-19T16:42:40Z",
      "side": 1,
      "message": "apexd creates manages these APEX data directories and relabels them so they can be used by code in the APEX. If there is a new ART apex (or any other apex using data directories), the old ART data directory will be squirreled away by apexd and a new one created for the new ART apex. apexd should delete the old directory when it\u0027s happy the mainline updates are sticking (or roll back to it if not).\n\nThe apexd behaviour here is quite cool: we do not have to manage the contents ourselves, e.g. check whether the artifacts are compatible with the currently mounted APEX: they are always in sync.\n\nThere is a comment above which we can expand, but otherwise we\u0027re just following the pattern in go/apex-data-directories.",
      "parentUuid": "ae69b319_a927f3ba",
      "range": {
        "startLine": 15,
        "startChar": 54,
        "endLine": 15,
        "endChar": 63
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9d0e333_f8d197c9",
        "filename": "private/apexd.te",
        "patchSetId": 12
      },
      "lineNbr": 15,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-12-14T09:13:08Z",
      "side": 1,
      "message": "s/squirreled away/snapshotted/",
      "parentUuid": "12e7b2c9_060a98da",
      "range": {
        "startLine": 15,
        "startChar": 54,
        "endLine": 15,
        "endChar": 63
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17ff3a62_51fb45a5",
        "filename": "private/dex2oat.te",
        "patchSetId": 12
      },
      "lineNbr": 35,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:49:35Z",
      "side": 1,
      "message": "I thought we generally tried to pass in open file handles to dex2oat?",
      "range": {
        "startLine": 35,
        "startChar": 2,
        "endLine": 35,
        "endChar": 29
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86a90cc4_57760025",
        "filename": "private/dex2oat.te",
        "patchSetId": 12
      },
      "lineNbr": 35,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-11-19T16:42:40Z",
      "side": 1,
      "message": "Ack, but only for output files.",
      "parentUuid": "17ff3a62_51fb45a5",
      "range": {
        "startLine": 35,
        "startChar": 2,
        "endLine": 35,
        "endChar": 29
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d73a6340_32bfd011",
        "filename": "private/dex2oat.te",
        "patchSetId": 12
      },
      "lineNbr": 38,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:49:35Z",
      "side": 1,
      "message": "Comment needs fixing",
      "range": {
        "startLine": 38,
        "startChar": 8,
        "endLine": 38,
        "endChar": 14
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79087525_2ea50c85",
        "filename": "private/dex2oat.te",
        "patchSetId": 12
      },
      "lineNbr": 38,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-11-19T16:42:40Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "d73a6340_32bfd011",
      "range": {
        "startLine": 38,
        "startChar": 8,
        "endLine": 38,
        "endChar": 14
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38b79526_3120b61a",
        "filename": "private/dexoptanalyzer.te",
        "patchSetId": 12
      },
      "lineNbr": 22,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:49:35Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 22,
        "startChar": 2,
        "endLine": 22,
        "endChar": 7
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e80f7940_20961a0a",
        "filename": "private/dexoptanalyzer.te",
        "patchSetId": 12
      },
      "lineNbr": 22,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-11-19T16:42:40Z",
      "side": 1,
      "message": "Done.\n\n[ I\u0027m puzzled why this isn\u0027t necessary, but no denials when commented out or removed. ]",
      "parentUuid": "38b79526_3120b61a",
      "range": {
        "startLine": 22,
        "startChar": 2,
        "endLine": 22,
        "endChar": 7
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57f1785d_5f650890",
        "filename": "private/domain.te",
        "patchSetId": 12
      },
      "lineNbr": 273,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:49:35Z",
      "side": 1,
      "message": "Should you be constraining read too?",
      "range": {
        "startLine": 273,
        "startChar": 38,
        "endLine": 273,
        "endChar": 45
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72e3f9f0_db3a0bc6",
        "filename": "private/domain.te",
        "patchSetId": 12
      },
      "lineNbr": 273,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-11-19T14:19:11Z",
      "side": 1,
      "message": "The data directory here will contain signed AOT compilation artifacts of system server and boot class path extensions following an update of the ART APEX through a Mainline update. We map the files into all managed processes (through zygotes) and various diagnostic tools need to be able to read them.\n\nThe change here was based on the example of the dalvikcache immediately above as this is AOT artifacts.\n\nShould we try locking this down further?",
      "parentUuid": "57f1785d_5f650890",
      "range": {
        "startLine": 273,
        "startChar": 38,
        "endLine": 273,
        "endChar": 45
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d737da90_72b1bb6a",
        "filename": "private/domain.te",
        "patchSetId": 12
      },
      "lineNbr": 273,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T14:28:31Z",
      "side": 1,
      "message": "I think that\u0027s up to you, but if all untrusted apps need read access then it isn\u0027t as much of a concern.\nWrite access is obviously crucial.",
      "parentUuid": "72e3f9f0_db3a0bc6",
      "range": {
        "startLine": 273,
        "startChar": 38,
        "endLine": 273,
        "endChar": 45
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c47bf5b_c4d03a3e",
        "filename": "private/domain.te",
        "patchSetId": 12
      },
      "lineNbr": 273,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-11-19T16:42:40Z",
      "side": 1,
      "message": "Thanks.",
      "parentUuid": "d737da90_72b1bb6a",
      "range": {
        "startLine": 273,
        "startChar": 38,
        "endLine": 273,
        "endChar": 45
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a6f659a_38aa8eec",
        "filename": "private/odrefresh.te",
        "patchSetId": 12
      },
      "lineNbr": 3,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:50:53Z",
      "side": 1,
      "message": "I think you\u0027re missing a transition rule so that running odrefresh_exec moves into the odrefresh domain.",
      "range": {
        "startLine": 3,
        "startChar": 5,
        "endLine": 3,
        "endChar": 19
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee4bad13_c50a2953",
        "filename": "private/odrefresh.te",
        "patchSetId": 12
      },
      "lineNbr": 3,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-11-19T16:42:40Z",
      "side": 1,
      "message": "Thanks. In the long run ods should be transitioning, for now I\u0027ve just added this to su.te which reveals a few problems that need to be fixed on the ART side.",
      "parentUuid": "4a6f659a_38aa8eec",
      "range": {
        "startLine": 3,
        "startChar": 5,
        "endLine": 3,
        "endChar": 19
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95facb06_db11df5e",
        "filename": "private/odrefresh.te",
        "patchSetId": 12
      },
      "lineNbr": 3,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T16:56:08Z",
      "side": 1,
      "message": "I think you need the same rule for shell. \nOr will do once you get to testing without adb root ;-)\n\nYou might also want a neverallow on odrefresh_exec, like https://source.corp.google.com/android/system/sepolicy/private/incident.te;rcl\u003def641ba5fc5df1f17c68cb030487868409e26658;l\u003d37.",
      "parentUuid": "ee4bad13_c50a2953",
      "range": {
        "startLine": 3,
        "startChar": 5,
        "endLine": 3,
        "endChar": 19
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "133ec7e1_5bda1aab",
        "filename": "private/odrefresh.te",
        "patchSetId": 12
      },
      "lineNbr": 3,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-11-24T19:47:38Z",
      "side": 1,
      "message": "Thanks, added the neverallow. I found trying to enable shell access for testing (userdebug_or_eng) foiled by regular fs uid / gid issues. I think we\u0027re okay with just adb root testing as the ods process that normally invoked odrefresh will run from init.",
      "parentUuid": "95facb06_db11df5e",
      "range": {
        "startLine": 3,
        "startChar": 5,
        "endLine": 3,
        "endChar": 19
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a44e717b_404350be",
        "filename": "private/shell.te",
        "patchSetId": 12
      },
      "lineNbr": 77,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:49:35Z",
      "side": 1,
      "message": "Missing verb",
      "range": {
        "startLine": 77,
        "startChar": 2,
        "endLine": 77,
        "endChar": 8
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3dc327d_f6771c8b",
        "filename": "private/shell.te",
        "patchSetId": 12
      },
      "lineNbr": 77,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-11-19T16:42:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a44e717b_404350be",
      "range": {
        "startLine": 77,
        "startChar": 2,
        "endLine": 77,
        "endChar": 8
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffa0cf8c_69310001",
        "filename": "private/zygote.te",
        "patchSetId": 12
      },
      "lineNbr": 56,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:49:35Z",
      "side": 1,
      "message": "Typo",
      "range": {
        "startLine": 56,
        "startChar": 8,
        "endLine": 56,
        "endChar": 14
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a8de26c_300f4cf5",
        "filename": "private/zygote.te",
        "patchSetId": 12
      },
      "lineNbr": 56,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-11-19T16:42:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ffa0cf8c_69310001",
      "range": {
        "startLine": 56,
        "startChar": 8,
        "endLine": 56,
        "endChar": 14
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78d2fd8b_fc8b8ed8",
        "filename": "public/crash_dump.te",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2020-11-19T10:49:35Z",
      "side": 1,
      "message": "zygote -\u003e crash_dump",
      "range": {
        "startLine": 32,
        "startChar": 6,
        "endLine": 32,
        "endChar": 12
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00b25ef8_348326bf",
        "filename": "public/crash_dump.te",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-11-19T16:42:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "78d2fd8b_fc8b8ed8",
      "range": {
        "startLine": 32,
        "startChar": 6,
        "endLine": 32,
        "endChar": 12
      },
      "revId": "71f2c6ea6ee8eed7f697280501966d49857abc60",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}