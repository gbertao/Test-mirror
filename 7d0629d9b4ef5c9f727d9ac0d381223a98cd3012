{
  "comments": [
    {
      "key": {
        "uuid": "e8144f9c_fc765fc0",
        "filename": "private/apexd.te",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2018-10-16T21:21:55Z",
      "side": 1,
      "message": "For robustness, I recommend using the macro:\n\n  allow apexd apex_mnt_dir:lnk_file create_file_perms;\n\nwhich adds slightly more permissions to make this more robust.",
      "revId": "7d0629d9b4ef5c9f727d9ac0d381223a98cd3012",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b50f16e4_6fed6bd4",
        "filename": "private/apexd.te",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1305591
      },
      "writtenOn": "2018-10-17T10:25:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e8144f9c_fc765fc0",
      "revId": "7d0629d9b4ef5c9f727d9ac0d381223a98cd3012",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60691b1b_2a3ac09d",
        "filename": "private/apexd.te",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2018-10-16T21:21:55Z",
      "side": 1,
      "message": "by convention, neverallow rules are placed in their own section at the bottom of the file, not intermixed with allow rules. Can you please move this to near line 46?",
      "revId": "7d0629d9b4ef5c9f727d9ac0d381223a98cd3012",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "991ef311_58eb797f",
        "filename": "private/apexd.te",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 1305591
      },
      "writtenOn": "2018-10-17T10:25:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "60691b1b_2a3ac09d",
      "revId": "7d0629d9b4ef5c9f727d9ac0d381223a98cd3012",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d816d0c0_9acfb85b",
        "filename": "public/domain.te",
        "patchSetId": 4
      },
      "lineNbr": 346,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2018-10-16T21:21:55Z",
      "side": 1,
      "message": "Only \"read\" is granted below. If you want to grant stat, you need the \"getattr\" selinux permission.\n\n  allow domain apex_mnt_dir:lnk_file { read getattr };\n\nor for robustness, use the r_file_perm macro defined in system/sepolicy/public/global_macros\n\n  allow domain apex_mnt_dir:lnk_file r_file_perms;",
      "range": {
        "startLine": 346,
        "startChar": 7,
        "endLine": 346,
        "endChar": 15
      },
      "revId": "7d0629d9b4ef5c9f727d9ac0d381223a98cd3012",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03349a74_aaef9f4c",
        "filename": "public/domain.te",
        "patchSetId": 4
      },
      "lineNbr": 346,
      "author": {
        "id": 1305591
      },
      "writtenOn": "2018-10-17T10:25:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d816d0c0_9acfb85b",
      "range": {
        "startLine": 346,
        "startChar": 7,
        "endLine": 346,
        "endChar": 15
      },
      "revId": "7d0629d9b4ef5c9f727d9ac0d381223a98cd3012",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3500bb9_c6fd141d",
        "filename": "public/domain.te",
        "patchSetId": 4
      },
      "lineNbr": 347,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2018-10-16T21:21:55Z",
      "side": 1,
      "message": "Treble uses SELinux to enforce a strict separation between vendor and non-vendor code. These restrictions are currently in place for files and directories.\n\nThis rule allows all domains, including coredomains and vendor domains, to read this symlink.\n\nBecause these symlinks will be readable to vendor code, vendor code may come to rely on this. These links seem to me to be part of the VNDK API that we expose to partners.\n\nsmoreland, trong: Do we need to consider Treble implications for these symlinks? Are symlinks subject to the same Treble separation rules that files and directories are?",
      "range": {
        "startLine": 347,
        "startChar": 6,
        "endLine": 347,
        "endChar": 12
      },
      "revId": "7d0629d9b4ef5c9f727d9ac0d381223a98cd3012",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37e8c9b6_82995919",
        "filename": "public/domain.te",
        "patchSetId": 4
      },
      "lineNbr": 347,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2018-10-16T21:55:04Z",
      "side": 1,
      "message": "For Treble it\u0027s OK to have globally accessible symlinks if:\n- the underling file/dir adheres to Treble requirement\n- symlink location doesn\u0027t change (ever)\n\nWe already do something like that with sysfs. We allow global access to sysfs symlinks [1], but we tightly control what can be done to underlying files [2]. \n[1] https://android.googlesource.com/platform/system/sepolicy/+/master/public/domain.te#234\n[2] https://android.googlesource.com/platform/system/sepolicy/+/master/private/coredomain.te#4",
      "parentUuid": "e3500bb9_c6fd141d",
      "range": {
        "startLine": 347,
        "startChar": 6,
        "endLine": 347,
        "endChar": 12
      },
      "revId": "7d0629d9b4ef5c9f727d9ac0d381223a98cd3012",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3176849e_f33229eb",
        "filename": "public/domain.te",
        "patchSetId": 4
      },
      "lineNbr": 347,
      "author": {
        "id": 1305591
      },
      "writtenOn": "2018-10-17T10:25:35Z",
      "side": 1,
      "message": "I *think* this is the case for APEX. Jiyong, can you comment?",
      "parentUuid": "37e8c9b6_82995919",
      "range": {
        "startLine": 347,
        "startChar": 6,
        "endLine": 347,
        "endChar": 12
      },
      "revId": "7d0629d9b4ef5c9f727d9ac0d381223a98cd3012",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e54bf104_49d2f6a5",
        "filename": "public/domain.te",
        "patchSetId": 4
      },
      "lineNbr": 347,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2018-10-17T10:39:51Z",
      "side": 1,
      "message": "IMO, this doesn\u0027t break the system / vendor separation. APEXs are updated fragments of system.img. Since the existence of the path /system is known to vendors, so should the path where its updates (APEXs) are mounted at.\n\nIn addition, this is required since system libs (VNDK and LLNDK) can be loaded into vendor processes. The libs of course should be allowed to read the symlink.",
      "parentUuid": "3176849e_f33229eb",
      "range": {
        "startLine": 347,
        "startChar": 6,
        "endLine": 347,
        "endChar": 12
      },
      "revId": "7d0629d9b4ef5c9f727d9ac0d381223a98cd3012",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a45dd9f_b5fc49c3",
        "filename": "public/domain.te",
        "patchSetId": 4
      },
      "lineNbr": 347,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2018-10-17T13:01:54Z",
      "side": 1,
      "message": "I do think there\u0027s a slight difference here, although probably not significant. The /system partition is created once, cryptographically signed, mounted read-only, and essentially immutable. Whereas the apexd process doesn\u0027t have the same immutability guarantees, at least not today.",
      "parentUuid": "e54bf104_49d2f6a5",
      "range": {
        "startLine": 347,
        "startChar": 6,
        "endLine": 347,
        "endChar": 12
      },
      "revId": "7d0629d9b4ef5c9f727d9ac0d381223a98cd3012",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c1492db_61f1bf40",
        "filename": "public/domain.te",
        "patchSetId": 4
      },
      "lineNbr": 347,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2018-10-17T13:16:23Z",
      "side": 1,
      "message": "APEXs are also cryptographically signed (via dm-verity) and mounted read-only -- today. The only difference from /system is that the existence of APEXs are not static; it exists only after it is downloaded from the net and installed.",
      "parentUuid": "8a45dd9f_b5fc49c3",
      "range": {
        "startLine": 347,
        "startChar": 6,
        "endLine": 347,
        "endChar": 12
      },
      "revId": "7d0629d9b4ef5c9f727d9ac0d381223a98cd3012",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}