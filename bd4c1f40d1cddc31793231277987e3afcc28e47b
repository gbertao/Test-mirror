{
  "comments": [
    {
      "key": {
        "uuid": "2e62c0b3_05d3c7a2",
        "filename": "tools/fc_sort/fc_sort.c",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2017-04-28T02:11:15Z",
      "side": 1,
      "message": "Ugh, buf_len is uninitialized here, while line_buf is NULL. This is undefined behavior.",
      "revId": "bd4c1f40d1cddc31793231277987e3afcc28e47b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe6981d9_00917bbd",
        "filename": "tools/fc_sort/fc_sort.c",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-04-28T02:40:20Z",
      "side": 1,
      "message": "Nah. I\u0027m sure buf_len is always zero... :-)\n\nAnyways, I didn\u0027t want to make more changes, but maybe I should?",
      "parentUuid": "2e62c0b3_05d3c7a2",
      "revId": "bd4c1f40d1cddc31793231277987e3afcc28e47b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de92b67b_43ab0849",
        "filename": "tools/fc_sort/fc_sort.c",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2017-04-28T02:44:05Z",
      "side": 1,
      "message": "I need to read the manpages more carefully. It\u0027s ok for buf_len to be anything, because a NULL line_buf means it is ignored. Whew. I guess the stranger part is reusing that same new buf_len repeatedly in the future, when lines might be longer. It\u0027s hard to tell if there are correctness issues there without digging deeper into the rest of the code (and its expectations about the file).",
      "parentUuid": "fe6981d9_00917bbd",
      "revId": "bd4c1f40d1cddc31793231277987e3afcc28e47b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bea3343f_50ccdede",
        "filename": "tools/fc_sort/fc_sort.c",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2017-04-28T02:45:10Z",
      "side": 1,
      "message": "And still more reading. Please ignore me. the buf_len part gets updated. I guess I haven\u0027t used getline in ages.",
      "parentUuid": "de92b67b_43ab0849",
      "revId": "bd4c1f40d1cddc31793231277987e3afcc28e47b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c39372f_6f7c9434",
        "filename": "tools/fc_sort/fc_sort.c",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-04-28T02:46:11Z",
      "side": 1,
      "message": "From the spec:\n\n       If *lineptr is set to NULL and *n is set 0 before the call, then\n       getline() will allocate a buffer for storing the line.  This buffer\n       should be freed by the user program even if getline() failed.\n\n       Alternatively, before calling getline(), *lineptr can contain a\n       pointer to a malloc(3)-allocated buffer *n bytes in size.  If the\n       buffer is not large enough to hold the line, getline() resizes it\n       with realloc(3), updating *lineptr and *n as necessary.\n\nSo:\n* null + 0 is OK and allocates the buffer (what I meant by \"always zero\" on start)\n* non-null + size is OK, and reallocs on demand",
      "parentUuid": "de92b67b_43ab0849",
      "revId": "bd4c1f40d1cddc31793231277987e3afcc28e47b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfc45fa8_3d1c8533",
        "filename": "tools/fc_sort/fc_sort.c",
        "patchSetId": 1
      },
      "lineNbr": 483,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2017-04-28T01:56:28Z",
      "side": 1,
      "message": "No longer necessary.",
      "range": {
        "startLine": 483,
        "startChar": 0,
        "endLine": 483,
        "endChar": 17
      },
      "revId": "bd4c1f40d1cddc31793231277987e3afcc28e47b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}