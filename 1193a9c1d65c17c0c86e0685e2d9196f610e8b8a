{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8f3e5be8_3460205d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-11-21T20:25:38Z",
      "side": 1,
      "message": "please include all the policy to use this service",
      "revId": "1193a9c1d65c17c0c86e0685e2d9196f610e8b8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8c82e20_8f752f92",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1320788
      },
      "writtenOn": "2023-11-29T03:24:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8f3e5be8_3460205d",
      "revId": "1193a9c1d65c17c0c86e0685e2d9196f610e8b8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "755dbcfe_397d8d89",
        "filename": "build/soong/service_fuzzer_bindings.go",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-11-21T20:26:20Z",
      "side": 1,
      "message": "the sample service is written in C++, but we don\u0027t necessarily need a fuzzer for sample services. is there a real implementation? We should add a fuzzer",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 54,
        "endChar": 97
      },
      "revId": "1193a9c1d65c17c0c86e0685e2d9196f610e8b8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0aac20a_49e07c2c",
        "filename": "build/soong/service_fuzzer_bindings.go",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1320788
      },
      "writtenOn": "2023-11-22T15:24:07Z",
      "side": 1,
      "message": "For now, we don\u0027t have a real implementation yet, we will add a fuzzer test with the real implementation",
      "parentUuid": "755dbcfe_397d8d89",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 54,
        "endChar": 97
      },
      "revId": "1193a9c1d65c17c0c86e0685e2d9196f610e8b8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0af36004_dd58d61b",
        "filename": "build/soong/service_fuzzer_bindings.go",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-11-23T00:29:15Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a0aac20a_49e07c2c",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 54,
        "endChar": 97
      },
      "revId": "1193a9c1d65c17c0c86e0685e2d9196f610e8b8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "315d24b8_03b1d19f",
        "filename": "private/service_contexts",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1561651
      },
      "writtenOn": "2023-11-30T03:27:13Z",
      "side": 1,
      "message": "I don\u0027t know what this service is, but presumably it should have its own type. Why does it reuse the hal_bluetooth_service type?",
      "revId": "1193a9c1d65c17c0c86e0685e2d9196f610e8b8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "037af683_e86adb8d",
        "filename": "private/service_contexts",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1320788
      },
      "writtenOn": "2023-11-30T04:06:02Z",
      "side": 1,
      "message": "This is part of bluetooth HAL, so it reuse hal_bluetooth_service",
      "parentUuid": "315d24b8_03b1d19f",
      "revId": "1193a9c1d65c17c0c86e0685e2d9196f610e8b8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22a0e943_5f43c2ed",
        "filename": "private/service_contexts",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1561651
      },
      "writtenOn": "2023-12-01T02:14:02Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "037af683_e86adb8d",
      "revId": "1193a9c1d65c17c0c86e0685e2d9196f610e8b8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}