{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f23cdc55_5e9babce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1482458
      },
      "writtenOn": "2023-03-30T10:14:39Z",
      "side": 1,
      "message": "Update the patch set to remove CAP_KILL.\n\n(Also, updated related CLs as well)\nhttps://android-review.googlesource.com/c/platform/hardware/google/camera/+/2515017\nhttps://android-review.googlesource.com/c/platform/frameworks/av/+/2470180",
      "revId": "29815c648498809a7383943ed43c7085540b34c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ff3c784_780a52c2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2023-03-30T10:20:56Z",
      "side": 1,
      "message": "In my Pixel 6 it looks like the Camera HAL is running as UID system. Perhaps toss in a don",
      "parentUuid": "f23cdc55_5e9babce",
      "revId": "29815c648498809a7383943ed43c7085540b34c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c79278fc_cda8bdda",
        "filename": "public/domain.te",
        "patchSetId": 6
      },
      "lineNbr": 1001,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2023-03-30T10:20:56Z",
      "side": 1,
      "message": "we should ask the incidentd folks if this is acceptable. +joeo",
      "range": {
        "startLine": 1001,
        "startChar": 58,
        "endLine": 1001,
        "endChar": 70
      },
      "revId": "29815c648498809a7383943ed43c7085540b34c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2d1d469_ccde17d4",
        "filename": "public/domain.te",
        "patchSetId": 6
      },
      "lineNbr": 1001,
      "author": {
        "id": 1000701
      },
      "writtenOn": "2023-03-30T21:22:45Z",
      "side": 1,
      "message": "I\u0027m not really working on incidentd anymore. @yaochen, is anyone?\n\nBut either way, is this making camera able to read tombstones? That does NOT sound okay. In general, services shouldn\u0027t be doing their own logging upload or reporting.  They should trigger a bugreport, which will follow all of the privacy rules surrounding bugreport and tombstone data.\n\nThis is fundamentally a privacy issue, so there needs to be a PDD for this.",
      "parentUuid": "c79278fc_cda8bdda",
      "range": {
        "startLine": 1001,
        "startChar": 58,
        "endLine": 1001,
        "endChar": 70
      },
      "revId": "29815c648498809a7383943ed43c7085540b34c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "055b55c3_7eeebb16",
        "filename": "public/domain.te",
        "patchSetId": 6
      },
      "lineNbr": 1001,
      "author": {
        "id": 1010050
      },
      "writtenOn": "2023-03-30T21:35:24Z",
      "side": 1,
      "message": "Grabbing a bugreport for every camera service watchdog firing would presumably not be acceptable on released user- builds, though it would make a lot of sense for dogfooding.\n\nIs this something where userdebug- and user- builds are allowed to diverge?\n\nWe\u0027re basically trying to figure out how to get debug information that is lost if the stack traces aren\u0027t captured before this watchdog fires and kills the service to recover operation.  Before the watchdog, everything would just be deadlocked so a bug report would have the necessary information; with the watchdog (which improves the user experience greatly) we can\u0027t get that and it makes it much harder to fix the problem causing the restart.",
      "parentUuid": "e2d1d469_ccde17d4",
      "range": {
        "startLine": 1001,
        "startChar": 58,
        "endLine": 1001,
        "endChar": 70
      },
      "revId": "29815c648498809a7383943ed43c7085540b34c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4bd2789_1cb4ef84",
        "filename": "public/domain.te",
        "patchSetId": 6
      },
      "lineNbr": 1001,
      "author": {
        "id": 1010050
      },
      "writtenOn": "2023-03-30T21:37:39Z",
      "side": 1,
      "message": "And to be clear, we don\u0027t need camera service to read these, we just want to save / log tombstones somewhere for later debugging (included in the next bugreport, etc). So if we can just tell some privileged daemon to trigger capture, that would be plenty.",
      "parentUuid": "055b55c3_7eeebb16",
      "range": {
        "startLine": 1001,
        "startChar": 58,
        "endLine": 1001,
        "endChar": 70
      },
      "revId": "29815c648498809a7383943ed43c7085540b34c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "922576bc_30c98577",
        "filename": "public/domain.te",
        "patchSetId": 6
      },
      "lineNbr": 1001,
      "author": {
        "id": 1482458
      },
      "writtenOn": "2023-03-31T06:50:49Z",
      "side": 1,
      "message": "As Eddy already mentioned above, what we are trying to acheive is to preserve the stack trace of camera HAL when camera watchdog bites. We faced numbers of customer report about camera malfunction which is related to the HAL deadlock. However, without the proper stack trace, it is nearly impossible to further investigate the root cause of the deadlock which fires camera watchdog.\n\nthe currently CLs are gathering the stack trace with debuggerd_trigger_dump and redirect it to the platform log. So that, the stack trace can be retrived later once bugreport is triggered by user. it is kind of aggresive.\n\nif there is an alternative less privacy concern way to preserve the stack trace, we are more than happy to follow. (Does just sending a kDebuggerd* signal to camera HAL work for this purpose?)",
      "parentUuid": "f4bd2789_1cb4ef84",
      "range": {
        "startLine": 1001,
        "startChar": 58,
        "endLine": 1001,
        "endChar": 70
      },
      "revId": "29815c648498809a7383943ed43c7085540b34c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}