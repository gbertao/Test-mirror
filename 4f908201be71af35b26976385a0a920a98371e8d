{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "75ed675b_02a9ba69",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2024-03-07T17:22:43Z",
      "side": 1,
      "message": "Can you explain why?\n\n(I think we said we need this so that vendor policy can exclude it from \"allow everything to access \u003cthis socket\u003e rules.)",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "4f908201be71af35b26976385a0a920a98371e8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cdc0f90f_35551dcd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1929300
      },
      "writtenOn": "2024-03-08T10:29:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "75ed675b_02a9ba69",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "4f908201be71af35b26976385a0a920a98371e8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0f29aa8_bb12d158",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2024-03-07T19:40:38Z",
      "side": 1,
      "message": "I read go/sdk-sandbox-audit-next but it\u0027s still not clear why we need to do this. We need system/sepolicy/public when we want vendors (`/vendor`, `/odm`) to customize permissions regarding platform resources, and apps have nothing to do with vendors.",
      "revId": "4f908201be71af35b26976385a0a920a98371e8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1b092d4_f4fa4b77",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1929300
      },
      "writtenOn": "2024-03-08T10:29:45Z",
      "side": 1,
      "message": "That\u0027s because the bug linked in the description is not very relevant to this CL ðŸ˜„\n\nI updated the bug to b/328729812. go/rb-localhost has a better explanation of what we are trying to achieve.\n\nI also updated the CL description. Let me know if it is more clear now.",
      "parentUuid": "d0f29aa8_bb12d158",
      "revId": "4f908201be71af35b26976385a0a920a98371e8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3294995f_14b961e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2024-03-08T10:37:40Z",
      "side": 1,
      "message": "aosp/2969275 adds \n```\nneverallow sdk_sandbox_all { domain -exceptions}:unix_stream_socket connect;\n```\n\nwhich may contradict existing vendor policy along the lines of `allow domain vendor_foo:unix_stream_socket connect;`. And the proposed solution is for the vendor policy to exempt sdk_sandbox_all, so it needs visibility of the name.",
      "parentUuid": "d0f29aa8_bb12d158",
      "revId": "4f908201be71af35b26976385a0a920a98371e8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5c0208c_e539e2c5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2024-03-11T02:34:05Z",
      "side": 1,
      "message": "\u003e To get there, we need to expose the sdk_sandbox_all domain in public to allow vendor policies to carve out the attribute from allow rules affecting unix_stream_socket.\n\nDoes this mean that you want to allow vendors to write rules like `allow { appdomain -sdk_sandbox_all } ...:unix_stream_socket connect;`? If so, why do vendors need to grant access to generic domains, not to their specific types? e.g. they could just write `allow vendor_some_domain ...:unix_stream_socket connect;` for each type they want to grant\n\nIf not, could you elaborate on this? what are the expected use cases?",
      "parentUuid": "3294995f_14b961e0",
      "revId": "4f908201be71af35b26976385a0a920a98371e8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43851f2f_468a6dea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1929300
      },
      "writtenOn": "2024-03-11T10:16:47Z",
      "side": 1,
      "message": "You can see an example at ag/26316435.\n\nAdmittedly, that example is for a test type, so we might find other ways to fix that specific example that do not involve making the sandbox attribute public. It is probably better to have a general solution than fix one specific case.",
      "parentUuid": "d5c0208c_e539e2c5",
      "revId": "4f908201be71af35b26976385a0a920a98371e8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6704d194_3c0c4966",
        "filename": "public/attributes",
        "patchSetId": 4
      },
      "lineNbr": 454,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2024-03-07T17:22:43Z",
      "side": 1,
      "message": "Technically we\u0027re past API Freeze so we shouldn\u0027t be changing public policy.\n\nI\u0027m slightly surprised this didn\u0027t hit a presubmit error because of that.\n\nI think it\u0027s actually ok - this won\u0027t break anything, and is useful - but you may need to update prebuilts.",
      "range": {
        "startLine": 454,
        "startChar": 0,
        "endLine": 454,
        "endChar": 26
      },
      "revId": "4f908201be71af35b26976385a0a920a98371e8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37fee548_c107c925",
        "filename": "public/attributes",
        "patchSetId": 4
      },
      "lineNbr": 454,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2024-03-07T19:40:38Z",
      "side": 1,
      "message": "Adding types and attributes is ok. Removing types and attributes is not OK.",
      "parentUuid": "6704d194_3c0c4966",
      "range": {
        "startLine": 454,
        "startChar": 0,
        "endLine": 454,
        "endChar": 26
      },
      "revId": "4f908201be71af35b26976385a0a920a98371e8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28070d7d_ce5eced2",
        "filename": "public/attributes",
        "patchSetId": 4
      },
      "lineNbr": 454,
      "author": {
        "id": 1929300
      },
      "writtenOn": "2024-03-08T10:29:45Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "37fee548_c107c925",
      "range": {
        "startLine": 454,
        "startChar": 0,
        "endLine": 454,
        "endChar": 26
      },
      "revId": "4f908201be71af35b26976385a0a920a98371e8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d916ab9_7b9497d5",
        "filename": "public/attributes",
        "patchSetId": 4
      },
      "lineNbr": 454,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2024-03-08T10:37:40Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "37fee548_c107c925",
      "range": {
        "startLine": 454,
        "startChar": 0,
        "endLine": 454,
        "endChar": 26
      },
      "revId": "4f908201be71af35b26976385a0a920a98371e8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}