{
  "comments": [
    {
      "key": {
        "uuid": "d2ad9da7_e20fd9d3",
        "filename": "private/file_contexts",
        "patchSetId": 4
      },
      "lineNbr": 479,
      "author": {
        "id": 1081223
      },
      "writtenOn": "2020-08-07T19:31:35Z",
      "side": 1,
      "message": "The files under vendor_overlay are supposed to have vendor labels.\nThis folder will be overlayed on top of vendor only if we have matching se-labels between the overlay and target\nHence defaulting to vendor_file is the proper context",
      "revId": "4fee5fe43735f9d908f659f27994ea576d2151db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fe29af6_c8efbf8c",
        "filename": "private/file_contexts",
        "patchSetId": 4
      },
      "lineNbr": 479,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-07T21:16:57Z",
      "side": 1,
      "message": "What infrastructure is used to guarantee compatibility of these with vendor?",
      "parentUuid": "d2ad9da7_e20fd9d3",
      "revId": "4fee5fe43735f9d908f659f27994ea576d2151db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42ba3855_4217e423",
        "filename": "private/file_contexts",
        "patchSetId": 4
      },
      "lineNbr": 479,
      "author": {
        "id": 1081223
      },
      "writtenOn": "2020-08-07T21:22:58Z",
      "side": 1,
      "message": "https://source.android.com/devices/bootloader/system-as-root#using-vendor-overlay\nhttps://android-review.googlesource.com/#/c/814874",
      "parentUuid": "4fe29af6_c8efbf8c",
      "revId": "4fee5fe43735f9d908f659f27994ea576d2151db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c70957f_1c669f62",
        "filename": "private/file_contexts",
        "patchSetId": 4
      },
      "lineNbr": 479,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-07T21:30:41Z",
      "side": 1,
      "message": "Justin, can you comment on possibility of labeling this as a system file (since it is on system) and then allowing vendor to read it with certain exceptions and also comment on the testing story for this so that we can make sure not to break anything?",
      "parentUuid": "42ba3855_4217e423",
      "revId": "4fee5fe43735f9d908f659f27994ea576d2151db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2585d05_903bc1b2",
        "filename": "private/file_contexts",
        "patchSetId": 4
      },
      "lineNbr": 479,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2020-08-10T00:27:10Z",
      "side": 1,
      "message": "These files are in the product partition, but actually used as vendor files for the system-only update. It is similar to have /system/vendor in the system partition.\nWe don\u0027t have special rule for the vendor overlays because any vendor files can be overridden by the vendor_overlay.\nI think we may use sepolicy_tests.py to guarantee these files have vendor_files.",
      "parentUuid": "5c70957f_1c669f62",
      "revId": "4fee5fe43735f9d908f659f27994ea576d2151db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f99d6432_e26f53e5",
        "filename": "private/file_contexts",
        "patchSetId": 4
      },
      "lineNbr": 479,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-10T20:10:43Z",
      "side": 1,
      "message": "It is supposed to be \"everything on the system and related partitions is a system file\" and \"everything on the vendor and related partitions is a vendor file\". It\u0027s fine to allow vendor or system domains to read specific files from the other, but marking a file on the \u0027system.img\u0027 as vendor_file makes policy confusing to read/write. For instance, someone might want to write a rule about \"all files coupled with system.img\", and that becomes impossible. The reason we found out about this so late is because sepolicy_tests.py is broken and doesn\u0027t check product/system_ext.\n\nCan you share what tests we have for this or point me to documentation? Specifically, I wonder what the problem would be if these were labelled as something new, like \"system_for_vendor_overlay_file\" which is a system_file.",
      "parentUuid": "a2585d05_903bc1b2",
      "revId": "4fee5fe43735f9d908f659f27994ea576d2151db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "207a3cd0_63e6d097",
        "filename": "private/file_contexts",
        "patchSetId": 4
      },
      "lineNbr": 479,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2020-09-03T06:21:32Z",
      "side": 1,
      "message": "Sorry for the late update.\nThe test for vendor_overlay is `fs_mgr_vendor_overlay_test`. You can find the document here: https://source.android.com/devices/bootloader/system-as-root#using-vendor-overlay. vendor_overlay files will override the existing vendor files. As in the examples in the doc, they must have the same file context with the original files.\n\nI think we need to update `sepolicy_tests.py` to have both \"system/vendor\" and \"product/vendor_overlay\" (as well as \"system/product/vendor_overlay)\" in `TestVendorTypeViolations()`. But AFAIK, the test script does not check the regex form of the directories. The `TestSystemTypeViolations` passes even without excluding \"system/vendor\" now.",
      "parentUuid": "f99d6432_e26f53e5",
      "revId": "4fee5fe43735f9d908f659f27994ea576d2151db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}