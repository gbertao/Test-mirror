{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "71ca1ac5_6c9fc1cc",
        "filename": "private/apexd.te",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-02-23T13:18:21Z",
      "side": 1,
      "message": "Kenn, did you check if apexd avoid reading these files by configuring libvintf?",
      "range": {
        "startLine": 124,
        "startChar": 0,
        "endLine": 128,
        "endChar": 0
      },
      "revId": "61a3dc114067b3ffbf612c09040a845ca7307ba4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "281e8ebe_2148ff6e",
        "filename": "private/apexd.te",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1965505
      },
      "writtenOn": "2023-02-24T03:24:12Z",
      "side": 1,
      "message": "RuntimeInfo\u0027s part of the compatibility check requires the selinux/policyvers file, we must have it or else all tests will fail.   The /proc/config.gz is actually not needed for our use of libvintf, and our testing works fine without this permission, but libvintf tries to read it and it adds a distracting error message into the logs.  We could modify libvintf to conditionally read /proc/config.gz to avoid this error message, or we could just modify libvintf to conditionally suppress the error message.",
      "parentUuid": "71ca1ac5_6c9fc1cc",
      "range": {
        "startLine": 124,
        "startChar": 0,
        "endLine": 128,
        "endChar": 0
      },
      "revId": "61a3dc114067b3ffbf612c09040a845ca7307ba4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47a7b0bf_d7046cf7",
        "filename": "private/apexd.te",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-02-27T01:35:44Z",
      "side": 1,
      "message": "Inviting Yifan for his opinion on this.",
      "parentUuid": "281e8ebe_2148ff6e",
      "range": {
        "startLine": 124,
        "startChar": 0,
        "endLine": 128,
        "endChar": 0
      },
      "revId": "61a3dc114067b3ffbf612c09040a845ca7307ba4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a213d2e5_3bef82f2",
        "filename": "private/apexd.te",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-02-27T01:42:44Z",
      "side": 1,
      "message": "I thought it could be controlled via https://cs.android.com/android/platform/superproject/+/master:system/libvintf/include/vintf/CheckFlags.h",
      "parentUuid": "47a7b0bf_d7046cf7",
      "range": {
        "startLine": 124,
        "startChar": 0,
        "endLine": 128,
        "endChar": 0
      },
      "revId": "61a3dc114067b3ffbf612c09040a845ca7307ba4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6601832_51031858",
        "filename": "private/apexd.te",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1965505
      },
      "writtenOn": "2023-02-27T23:03:53Z",
      "side": 1,
      "message": "Your thoughts are correct, with this code in apexd.cpp:\n\n```\n  // Disable RuntimeInfo check to avoid requiring read permission of /proc\n  // and other restricted resources\n  vintf::CheckFlags::Type flags \u003d vintf::CheckFlags::DEFAULT;\n  flags \u003d flags.disableRuntimeInfo();\n\n  if (vintf_with_new_apex-\u003echeckCompatibility(\u0026error, flags) ...\n```\n\nthen we do not need to grant the permissions to apexd for running its testing.\n\nQuestion: Is the libvintf testing lower in quality because of disabling RuntimeInfo?  Are we skipping some checks that would catch a bad apex update?\n\n(in testing, both test_badX apexes are still caught by apexd with these modifications, but these two are not an exhaustive bad apex test)",
      "parentUuid": "a213d2e5_3bef82f2",
      "range": {
        "startLine": 124,
        "startChar": 0,
        "endLine": 128,
        "endChar": 0
      },
      "revId": "61a3dc114067b3ffbf612c09040a845ca7307ba4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c76fff6_da489ebc",
        "filename": "private/apexd.te",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-02-27T23:21:42Z",
      "side": 1,
      "message": "It seems fine because\n- vendor apexes don\u0027t contribute to `RuntimeInfo`\n- system apexes don\u0027t contribute to FCM",
      "parentUuid": "d6601832_51031858",
      "range": {
        "startLine": 124,
        "startChar": 0,
        "endLine": 128,
        "endChar": 0
      },
      "revId": "61a3dc114067b3ffbf612c09040a845ca7307ba4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}