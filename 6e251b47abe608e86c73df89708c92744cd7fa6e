{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d52e5bf5_f621e228",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2021-01-30T04:31:44Z",
      "side": 1,
      "message": "smoreland suggested:\n  \"we might just call it bpf_tethering_type to be consistent with some other file type names\"\nand to CC android-security-selinux@ - but I can\u0027t figure out how to do the latter from gerrit.\n\nBut I\u0027m not sure what to do, so I\u0027ll let Jeff pick and choose.",
      "revId": "6e251b47abe608e86c73df89708c92744cd7fa6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fca04260_56c15805",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2021-01-30T04:34:08Z",
      "side": 1,
      "message": "Also note that this applies not only to:\n  /sys/fs/bpf/tethering\n  /sys/fs/bpf/tethering/...\nbut also to:\n  /sys/fs/bpf/tetheringfoo\n\nNot sure if that\u0027s a problem, and/or how to fix that if it is.",
      "revId": "6e251b47abe608e86c73df89708c92744cd7fa6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f44fefcf_8c6045f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2021-02-01T14:01:04Z",
      "side": 1,
      "message": "LGTM in principle but the I\u0027m not very familiar with the precise selinux mechanics being used here. Someone like Jeff should take a look.",
      "revId": "6e251b47abe608e86c73df89708c92744cd7fa6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0aecf95f_897313e8",
        "filename": "private/bpfloader.te",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-02-01T22:28:06Z",
      "side": 1,
      "message": "\u0027~\u0027 is really rare in Android - did I miss any PSA? will wait for Jeff. I thought there was some reason for this.",
      "range": {
        "startLine": 23,
        "startChar": 11,
        "endLine": 23,
        "endChar": 12
      },
      "revId": "6e251b47abe608e86c73df89708c92744cd7fa6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40d3d00b_32ea5c20",
        "filename": "private/bpfloader.te",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2021-02-01T14:01:04Z",
      "side": 1,
      "message": "While system_server and netutils wrappers do need to accesss fs_bpf (but why can netutils_wrapper write to it, I wonder), should we disallow access to fs_bpf_tethering?",
      "range": {
        "startLine": 31,
        "startChar": 71,
        "endLine": 31,
        "endChar": 84
      },
      "revId": "6e251b47abe608e86c73df89708c92744cd7fa6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e986560d_20a4be5f",
        "filename": "private/bpfloader.te",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2021-02-01T20:14:11Z",
      "side": 1,
      "message": "That would run into problems if we ever want to ship iptables xt_bpf programs in the module.  This seems more future proof.",
      "parentUuid": "40d3d00b_32ea5c20",
      "range": {
        "startLine": 31,
        "startChar": 71,
        "endLine": 31,
        "endChar": 84
      },
      "revId": "6e251b47abe608e86c73df89708c92744cd7fa6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22a09e3d_7862e02c",
        "filename": "private/bpfloader.te",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2021-02-01T14:01:04Z",
      "side": 1,
      "message": "Out of curiosity, why is this rule here? Is it so that absolutely nothing can perform any operation other than these on fs_bpf and fs_bpf_tethering? What operations are we concerned about here?",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 86
      },
      "revId": "6e251b47abe608e86c73df89708c92744cd7fa6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9cc71921_37070057",
        "filename": "private/bpfloader.te",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2021-02-01T20:15:12Z",
      "side": 1,
      "message": "Stuff like unpinning or renaming in particular.",
      "parentUuid": "22a09e3d_7862e02c",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 86
      },
      "revId": "6e251b47abe608e86c73df89708c92744cd7fa6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b10bcdc_c9064b5b",
        "filename": "private/genfs_contexts",
        "patchSetId": 1
      },
      "lineNbr": 350,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2021-02-01T14:01:04Z",
      "side": 1,
      "message": "Given that this change is moderately involved, I wonder if we should use a name here that\u0027s not specific to tethering, such as fs_bpf_network_stack, for consistency with the network_stack type which is the domain in which the networkstack process runs?",
      "range": {
        "startLine": 350,
        "startChar": 24,
        "endLine": 350,
        "endChar": 54
      },
      "revId": "6e251b47abe608e86c73df89708c92744cd7fa6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4efa6a4_3195d878",
        "filename": "private/genfs_contexts",
        "patchSetId": 1
      },
      "lineNbr": 350,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2021-02-01T20:14:11Z",
      "side": 1,
      "message": "I considered that... but the apex is called tethering and not network stack,\nand we pin stuff to /sys/fs/bpf/tethering...\n\nhttp://cs/aosp-master/system/bpf/bpfloader/BpfLoader.cpp?l\u003d60\u0026rcl\u003dd8a4578f30dd1a355591a7b18d139a9ac0a48f72\n\n// Tethering mainline module\n        {\n                .dir \u003d \"/apex/com.android.tethering/etc/bpf/\",\n                .prefix \u003d \"tethering/\",\n        },\n\nI think when/if we ever want to ship other programs via an other module (like Connectivity, we\u0027ll need to add another?",
      "parentUuid": "9b10bcdc_c9064b5b",
      "range": {
        "startLine": 350,
        "startChar": 24,
        "endLine": 350,
        "endChar": 54
      },
      "revId": "6e251b47abe608e86c73df89708c92744cd7fa6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20c63bf7_e67f3c9b",
        "filename": "private/genfs_contexts",
        "patchSetId": 1
      },
      "lineNbr": 350,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-02-01T22:28:06Z",
      "side": 1,
      "message": "+1, name things according to their definition, not in terms of their (current) purpose.",
      "parentUuid": "f4efa6a4_3195d878",
      "range": {
        "startLine": 350,
        "startChar": 24,
        "endLine": 350,
        "endChar": 54
      },
      "revId": "6e251b47abe608e86c73df89708c92744cd7fa6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fbc15d3_87c228ae",
        "filename": "private/genfs_contexts",
        "patchSetId": 1
      },
      "lineNbr": 350,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2021-02-01T22:42:21Z",
      "side": 1,
      "message": "Steven, I\u0027m not sure exactly what you\u0027re +1\u0027ing.\nLorenzo, I\u0027m also not clear on what the future plans are here wrt. network stack, connectivity and tethering mainline modules.",
      "parentUuid": "20c63bf7_e67f3c9b",
      "range": {
        "startLine": 350,
        "startChar": 24,
        "endLine": 350,
        "endChar": 54
      },
      "revId": "6e251b47abe608e86c73df89708c92744cd7fa6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5097a70c_13847845",
        "filename": "private/genfs_contexts",
        "patchSetId": 1
      },
      "lineNbr": 350,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-02-02T00:59:04Z",
      "side": 1,
      "message": "Sorry for the ambiguity. I\u0027m +1\u0027ing the current naming (tethering-specific naming).",
      "parentUuid": "4fbc15d3_87c228ae",
      "range": {
        "startLine": 350,
        "startChar": 24,
        "endLine": 350,
        "endChar": 54
      },
      "revId": "6e251b47abe608e86c73df89708c92744cd7fa6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5587a594_ad4bd051",
        "filename": "private/network_stack.te",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2021-02-01T14:01:04Z",
      "side": 1,
      "message": "Can you elaborate a bit here? Does it mean that init and vendor init (which are OEM and vendor code) will be able to access the maps? If so, what can they do, and why? What breaks if they are not allowed? Will it just policy compilation, or will it break at runtime, or...?",
      "range": {
        "startLine": 50,
        "startChar": 33,
        "endLine": 50,
        "endChar": 62
      },
      "revId": "6e251b47abe608e86c73df89708c92744cd7fa6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29f9e80a_ef52b91a",
        "filename": "private/network_stack.te",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2021-02-01T20:14:11Z",
      "side": 1,
      "message": "They have the privs that they are not neverallowed down below.\nThey\u0027re not terribly worrying, but they shouldn\u0027t actually need anything.\n\nSo they have:\n  dir { getattr open read search setattr }\n  file { map open read setattr }\n\nOf which really only setattr is problematic, but they seem to get these via some generic rules AFAICT.  There\u0027s a TODO to figure out how to remove this in the bpfloader.te",
      "parentUuid": "5587a594_ad4bd051",
      "range": {
        "startLine": 50,
        "startChar": 33,
        "endLine": 50,
        "endChar": 62
      },
      "revId": "6e251b47abe608e86c73df89708c92744cd7fa6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7a5805f_2764370d",
        "filename": "private/network_stack.te",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2021-02-01T14:01:04Z",
      "side": 1,
      "message": "For those not familiar with selinux, what does this mean? That anything could potentially use getattr on the directory, but only bpfloader, init, etc. can do anything else?",
      "range": {
        "startLine": 51,
        "startChar": 11,
        "endLine": 51,
        "endChar": 13
      },
      "revId": "6e251b47abe608e86c73df89708c92744cd7fa6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e32f8bb_ffa56ed9",
        "filename": "private/network_stack.te",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2021-02-01T20:14:11Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "c7a5805f_2764370d",
      "range": {
        "startLine": 51,
        "startChar": 11,
        "endLine": 51,
        "endChar": 13
      },
      "revId": "6e251b47abe608e86c73df89708c92744cd7fa6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f7429c6_210baa3b",
        "filename": "public/file.te",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-02-01T22:28:06Z",
      "side": 1,
      "message": "should we copy attribute system, to make this work like sysfs/sysfs_type?\n\nI think the primary disadvantage of the current rules is that we need to make several rules based on fs_bpf + fs_bpf_tethering. By introducing an attribute, we could have a way to apply that logic in the future (sure - with 2 types it\u0027s manageable, but we wouldn\u0027t want to rewrite the policy again, I think)",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 83,
        "endChar": 50
      },
      "revId": "6e251b47abe608e86c73df89708c92744cd7fa6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59852a8f_a7d688a3",
        "filename": "public/file.te",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2021-02-01T22:42:21Z",
      "side": 1,
      "message": "I\u0027d love to... but I\u0027d need some guidance.\nI\u0027m not sure where to make what changes.",
      "parentUuid": "1f7429c6_210baa3b",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 83,
        "endChar": 50
      },
      "revId": "6e251b47abe608e86c73df89708c92744cd7fa6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}