{
  "comments": [
    {
      "key": {
        "uuid": "1a7be83a_74812c6f",
        "filename": "private/property_contexts",
        "patchSetId": 1
      },
      "lineNbr": 229,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-11-29T18:10:46Z",
      "side": 1,
      "message": "I don\u0027t see the prop being used",
      "range": {
        "startLine": 229,
        "startChar": 0,
        "endLine": 229,
        "endChar": 18
      },
      "revId": "12c0d332c03a7d7d607cd17a1c812e7f526684b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c4dfea7_514bed37",
        "filename": "private/property_contexts",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-11-29T18:10:46Z",
      "side": 1,
      "message": "don\u0027t just specify the prefix, but the entire prop name and along with its type using the \u0027exact\u0027 keyword  in public/property_contexts.",
      "range": {
        "startLine": 230,
        "startChar": 0,
        "endLine": 230,
        "endChar": 57
      },
      "revId": "12c0d332c03a7d7d607cd17a1c812e7f526684b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c0da477_ad1b44c4",
        "filename": "private/property_contexts",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-12-02T11:41:52Z",
      "side": 1,
      "message": "There\u0027s a bunch of other prefix rules above (like \u0027apexd.\u0027 and \u0027persist.apex.\u0027), what\u0027s the deal with those?\n\nI wanted to be able to evolve what sysprops I use in future module updates",
      "parentUuid": "4c4dfea7_514bed37",
      "range": {
        "startLine": 230,
        "startChar": 0,
        "endLine": 230,
        "endChar": 57
      },
      "revId": "12c0d332c03a7d7d607cd17a1c812e7f526684b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0405b746_be1e30d0",
        "filename": "private/property_contexts",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-12-02T13:58:24Z",
      "side": 1,
      "message": "They are for internal props which are only used inside the system partition. Since this new one is for every partition, it\u0027s a public property whose schema should be kept stable. \n\n\u003e I wanted to be able to evolve what sysprops I use in future module updates\nHmm, I understand this. If this prop is never access directly (i.e. via the prop name as string literal) but always via a wrapper API, then this should be fine.",
      "parentUuid": "3c0da477_ad1b44c4",
      "range": {
        "startLine": 230,
        "startChar": 0,
        "endLine": 230,
        "endChar": 57
      },
      "revId": "12c0d332c03a7d7d607cd17a1c812e7f526684b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4bf9aab_beeca6db",
        "filename": "private/property_contexts",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-12-02T15:47:29Z",
      "side": 1,
      "message": "isn\u0027t access controlled per process, not per partition? I don\u0027t actually want this prop to be read outside of system components (derive_sdk + framework-sdkext), but I don\u0027t think there\u0027s a way to achieve that.",
      "parentUuid": "0405b746_be1e30d0",
      "range": {
        "startLine": 230,
        "startChar": 0,
        "endLine": 230,
        "endChar": 57
      },
      "revId": "12c0d332c03a7d7d607cd17a1c812e7f526684b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "960af734_54d72953",
        "filename": "private/sdk.te",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-11-29T18:10:46Z",
      "side": 1,
      "message": "name the file as derive_sdk.te",
      "revId": "12c0d332c03a7d7d607cd17a1c812e7f526684b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5422bcc_b7facb71",
        "filename": "private/sdk.te",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-11-29T18:10:46Z",
      "side": 1,
      "message": "this program should be able to search /apex, right? then I guess you might need something like this\n\nallow derive_sdk apex_mnt_dir:dir search",
      "range": {
        "startLine": 3,
        "startChar": 5,
        "endLine": 3,
        "endChar": 15
      },
      "revId": "12c0d332c03a7d7d607cd17a1c812e7f526684b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3db3a049_5b9d2662",
        "filename": "private/sdk.te",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-12-02T12:44:05Z",
      "side": 1,
      "message": "it seems to function without this (when run from a shell with root, but that doesn\u0027t matter right?)",
      "parentUuid": "b5422bcc_b7facb71",
      "range": {
        "startLine": 3,
        "startChar": 5,
        "endLine": 3,
        "endChar": 15
      },
      "revId": "12c0d332c03a7d7d607cd17a1c812e7f526684b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d97bf114_45f0247c",
        "filename": "private/sdk.te",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-12-02T12:53:36Z",
      "side": 1,
      "message": "yeah, running from a shell with root doesn\u0027t quite reflect the actual situation.\nBut nick@ might correct me if I was wrong.",
      "parentUuid": "3db3a049_5b9d2662",
      "range": {
        "startLine": 3,
        "startChar": 5,
        "endLine": 3,
        "endChar": 15
      },
      "revId": "12c0d332c03a7d7d607cd17a1c812e7f526684b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2aafd9e_e7c654c5",
        "filename": "public/property.te",
        "patchSetId": 1
      },
      "lineNbr": 621,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-11-29T17:12:40Z",
      "side": 1,
      "message": "No idea why it needs to be added here, please let me know if it doesn\u0027t make sense",
      "range": {
        "startLine": 621,
        "startChar": 0,
        "endLine": 621,
        "endChar": 20
      },
      "revId": "12c0d332c03a7d7d607cd17a1c812e7f526684b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae0f719c_add8eb00",
        "filename": "public/property.te",
        "patchSetId": 1
      },
      "lineNbr": 621,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-11-29T18:10:46Z",
      "side": 1,
      "message": "this long rule should be written as\n\nneverallow { coredomain -init -system_writes_vendor_properties_violators } vendor_system_property_type:property_service set\n\nor \n\nneverallow { coredomain -init -system_writes_vendor_properties_violators } { property_type -system_property_type}:property_service set\n\nBut, let\u0027s keep your change until we define all *_prop types using the new macros like system_restricted_prop",
      "parentUuid": "a2aafd9e_e7c654c5",
      "range": {
        "startLine": 621,
        "startChar": 0,
        "endLine": 621,
        "endChar": 20
      },
      "revId": "12c0d332c03a7d7d607cd17a1c812e7f526684b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "098764b8_a0da55f6",
        "filename": "public/vendor_init.te",
        "patchSetId": 1
      },
      "lineNbr": 224,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-11-29T17:12:40Z",
      "side": 1,
      "message": "Same here",
      "revId": "12c0d332c03a7d7d607cd17a1c812e7f526684b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}