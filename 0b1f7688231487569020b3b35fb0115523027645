{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8e844ba3_7936ccde",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1115183
      },
      "writtenOn": "2023-01-13T02:26:01Z",
      "side": 1,
      "message": "Can you please provide more context on the reason for this change? What is asrmservice and where is its code? Why does it need access to bpf maps? Why does it need permission to attach bpf programs to tracepoints? The implications of granting these permissions are not clear to me from the commit message or the linked bug",
      "revId": "0b1f7688231487569020b3b35fb0115523027645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4aec0e8f_acfefd15",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1927740
      },
      "writtenOn": "2023-01-13T02:36:10Z",
      "side": 1,
      "message": "Hi Connor,  \nWe create a new service named asrmservice, which is followed with gpuservice.\nAsrmservice is to track system resource status and adjust system resource for user case performance via bpf.\nOur bpf code create bpf maps and progs for asrmservice, similar as gpumem or others.\nAsrmservice will access bpf maps and read/write parameters from maps. \nBpf code will report event via perf event by tracking tracepoints.",
      "parentUuid": "8e844ba3_7936ccde",
      "revId": "0b1f7688231487569020b3b35fb0115523027645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b18f0a7_8803fb60",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1984770
      },
      "writtenOn": "2023-01-13T02:42:55Z",
      "side": 1,
      "message": "\u003e Hi Connor,  \n\u003e We create a new service named asrmservice, which is followed with gpuservice.\n\u003e Asrmservice is to track system resource status and adjust system resource for user case performance via bpf.\n\u003e Our bpf code create bpf maps and progs for asrmservice, similar as gpumem or others.\n\u003e Asrmservice will access bpf maps and read/write parameters from maps. \n\u003e Bpf code will report event via perf event by tracking tracepoints.\nAsrmservice and bpf code are in vendor project, not in AOSP, so they are not upstreamed.",
      "parentUuid": "4aec0e8f_acfefd15",
      "revId": "0b1f7688231487569020b3b35fb0115523027645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2651102c_ade1ac2d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2023-01-13T10:11:41Z",
      "side": 1,
      "message": "This isn\u0027t going to be accepted with the extra copyright headers.\nAlso they make the code review difficult.\nAdditionally I doubt it\u0027s appropriate to be changing prebuilts for old api levels at this point in time.",
      "revId": "0b1f7688231487569020b3b35fb0115523027645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72b7595e_5844ec92",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2023-01-13T10:14:39Z",
      "side": 1,
      "message": "There appears to be way too much churn in this commit.",
      "revId": "0b1f7688231487569020b3b35fb0115523027645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f52f3269_ea01ff4f",
        "filename": "private/asrmservice.te",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1115183
      },
      "writtenOn": "2023-01-13T02:32:40Z",
      "side": 1,
      "message": "read permission should not be necessary here if the only reason for perf event permissions is to allow tracepoint program attachment, see e.g. system_server which has only `open write cpu kernel`. Is there another reason this needs to be granted?",
      "range": {
        "startLine": 18,
        "startChar": 52,
        "endLine": 18,
        "endChar": 56
      },
      "revId": "0b1f7688231487569020b3b35fb0115523027645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eae87f40_eea56a9e",
        "filename": "private/asrmservice.te",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1984770
      },
      "writtenOn": "2023-01-13T02:45:58Z",
      "side": 1,
      "message": "Will verify if it\u0027s needed.",
      "parentUuid": "f52f3269_ea01ff4f",
      "range": {
        "startLine": 18,
        "startChar": 52,
        "endLine": 18,
        "endChar": 56
      },
      "revId": "0b1f7688231487569020b3b35fb0115523027645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "966a11fd_be7401fa",
        "filename": "private/asrmservice.te",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1927740
      },
      "writtenOn": "2023-01-13T07:35:39Z",
      "side": 1,
      "message": "Can\u0027t remove read permission, will failed as below code shown.\nstruct perf_reader *reader \u003d static_cast\u003cperf_reader*\u003e(bpf_open_perf_buffer(\n                perf_reader_raw, perf_reader_lost, (void*)\u0026cpu, -1, cpu, /* page_cnt */1));\t\n            if (reader \u003d\u003d NULL){\t\n                ALOGE(\"reader init failed: %s\", strerror(errno));\t\n                goto fail_1;\n            }",
      "parentUuid": "eae87f40_eea56a9e",
      "range": {
        "startLine": 18,
        "startChar": 52,
        "endLine": 18,
        "endChar": 56
      },
      "revId": "0b1f7688231487569020b3b35fb0115523027645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd267ef0_be093ffb",
        "filename": "private/bpfloader.te",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2023-01-13T10:14:39Z",
      "side": 1,
      "message": "please keep things lined up as they were before.\n\nplease add this CL to a topic that implements asrmservice",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 41,
        "endChar": 168
      },
      "revId": "0b1f7688231487569020b3b35fb0115523027645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f9868c7_11e0ce27",
        "filename": "private/bpfloader.te",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2023-01-13T10:14:39Z",
      "side": 1,
      "message": "please keep stuff sorted",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 63,
        "endChar": 14
      },
      "revId": "0b1f7688231487569020b3b35fb0115523027645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ccef3d6_68bba1a9",
        "filename": "private/bpfloader.te",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2023-01-13T10:14:39Z",
      "side": 1,
      "message": "please keep stuff sorted",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 71,
        "endChar": 148
      },
      "revId": "0b1f7688231487569020b3b35fb0115523027645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "092bacca_b9b6cb2d",
        "filename": "private/file_contexts",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2023-01-13T10:14:39Z",
      "side": 1,
      "message": "this doesn\u0027t look valid to me... but jeffv@ would be better able to comment",
      "range": {
        "startLine": 263,
        "startChar": 0,
        "endLine": 263,
        "endChar": 58
      },
      "revId": "0b1f7688231487569020b3b35fb0115523027645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}