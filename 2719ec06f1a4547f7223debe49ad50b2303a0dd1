{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5ab4f593_1d2535ff",
        "filename": "tests/treble_sepolicy_tests.py",
        "patchSetId": 5
      },
      "lineNbr": 324,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-01-26T21:03:17Z",
      "side": 1,
      "message": "we may want to rename this test to remove \u0027treble\u0027 from the name since it is more generic now",
      "revId": "2719ec06f1a4547f7223debe49ad50b2303a0dd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4aa0f7ba_3ad79c87",
        "filename": "tests/treble_sepolicy_tests.py",
        "patchSetId": 5
      },
      "lineNbr": 324,
      "author": {
        "id": 1985265
      },
      "writtenOn": "2023-01-27T08:54:37Z",
      "side": 1,
      "message": "I see there is a sepolicy_tests.py. Or should I move this isolated test to that file?",
      "parentUuid": "5ab4f593_1d2535ff",
      "revId": "2719ec06f1a4547f7223debe49ad50b2303a0dd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9fc1b9d_85158fa1",
        "filename": "tests/treble_sepolicy_tests.py",
        "patchSetId": 5
      },
      "lineNbr": 324,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-01-27T23:48:58Z",
      "side": 1,
      "message": "If it works there, I\u0027d recommend moving it there. This file is pretty specific to a 2016/2017 project in Android, but if it doesn\u0027t work there easily, please file a bug to rename this",
      "parentUuid": "4aa0f7ba_3ad79c87",
      "revId": "2719ec06f1a4547f7223debe49ad50b2303a0dd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16365776_baa34763",
        "filename": "tests/treble_sepolicy_tests.py",
        "patchSetId": 5
      },
      "lineNbr": 324,
      "author": {
        "id": 1985265
      },
      "writtenOn": "2023-01-28T03:04:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e9fc1b9d_85158fa1",
      "revId": "2719ec06f1a4547f7223debe49ad50b2303a0dd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7f6ae2c_109b26c7",
        "filename": "tests/treble_sepolicy_tests.py",
        "patchSetId": 5
      },
      "lineNbr": 325,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-01-26T21:03:17Z",
      "side": 1,
      "message": "nit: name this \"TestIsolatedAttributeConsistency\" or similar since this is what it is doing.",
      "range": {
        "startLine": 325,
        "startChar": 16,
        "endLine": 325,
        "endChar": 26
      },
      "revId": "2719ec06f1a4547f7223debe49ad50b2303a0dd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41af9268_97b180d4",
        "filename": "tests/treble_sepolicy_tests.py",
        "patchSetId": 5
      },
      "lineNbr": 325,
      "author": {
        "id": 1985265
      },
      "writtenOn": "2023-01-27T08:54:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7f6ae2c_109b26c7",
      "range": {
        "startLine": 325,
        "startChar": 16,
        "endLine": 325,
        "endChar": 26
      },
      "revId": "2719ec06f1a4547f7223debe49ad50b2303a0dd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa1abba4_2f3c6936",
        "filename": "tests/treble_sepolicy_tests.py",
        "patchSetId": 5
      },
      "lineNbr": 348,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-01-26T21:03:17Z",
      "side": 1,
      "message": "is this permission needed? We shouldn\u0027t actually need to pass any FDs to servicemanager - I suspect it\u0027s added due to the macro only",
      "range": {
        "startLine": 348,
        "startChar": 0,
        "endLine": 348,
        "endChar": 30
      },
      "revId": "2719ec06f1a4547f7223debe49ad50b2303a0dd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c2a3c09_c5ac6cfb",
        "filename": "tests/treble_sepolicy_tests.py",
        "patchSetId": 5
      },
      "lineNbr": 348,
      "author": {
        "id": 1985265
      },
      "writtenOn": "2023-01-27T14:16:37Z",
      "side": 1,
      "message": "It is added for the rule of hal_graphics_allocator_client in `binder_call(hal_graphics_allocator_client, servicemanager)`.",
      "parentUuid": "aa1abba4_2f3c6936",
      "range": {
        "startLine": 348,
        "startChar": 0,
        "endLine": 348,
        "endChar": 30
      },
      "revId": "2719ec06f1a4547f7223debe49ad50b2303a0dd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2588259_dc6e827c",
        "filename": "tests/treble_sepolicy_tests.py",
        "patchSetId": 5
      },
      "lineNbr": 348,
      "author": {
        "id": 1985265
      },
      "writtenOn": "2023-01-27T14:16:37Z",
      "side": 1,
      "message": "Looks like it is needed for hal_graphics_allocator_client. `binder_call(hal_graphics_allocator_client, servicemanager)`\nNot sure if we can remove this access and still make the hal_graphics_allocator work?",
      "parentUuid": "aa1abba4_2f3c6936",
      "range": {
        "startLine": 348,
        "startChar": 0,
        "endLine": 348,
        "endChar": 30
      },
      "revId": "2719ec06f1a4547f7223debe49ad50b2303a0dd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3557fc7_b713b687",
        "filename": "tests/treble_sepolicy_tests.py",
        "patchSetId": 5
      },
      "lineNbr": 358,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-01-26T21:03:17Z",
      "side": 1,
      "message": "How do we know there won\u0027t be a prefix collision?",
      "range": {
        "startLine": 358,
        "startChar": 66,
        "endLine": 358,
        "endChar": 76
      },
      "revId": "2719ec06f1a4547f7223debe49ad50b2303a0dd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7ab6409_b952cb2e",
        "filename": "tests/treble_sepolicy_tests.py",
        "patchSetId": 5
      },
      "lineNbr": 358,
      "author": {
        "id": 1985265
      },
      "writtenOn": "2023-01-27T08:54:37Z",
      "side": 1,
      "message": "Good point. Add more explicit checking here.",
      "parentUuid": "b3557fc7_b713b687",
      "range": {
        "startLine": 358,
        "startChar": 66,
        "endLine": 358,
        "endChar": 76
      },
      "revId": "2719ec06f1a4547f7223debe49ad50b2303a0dd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}