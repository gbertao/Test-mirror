{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "57e9959e_12f5229d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1019013
      },
      "writtenOn": "2022-12-08T11:31:47Z",
      "side": 1,
      "message": "+CC Pierre to check whether it\u0027s possible to pass file descriptor across the process in Rust, instead of sending file path.\n\nDear Pierre, could you answer Alan\u0027s question in the `private/crosvm.te`? It would be a great help.",
      "revId": "d1bf4e749971d94b2d7fb39939216549daa6c271",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e12d94e_4b404078",
        "filename": "private/crosvm.te",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2022-12-08T09:58:24Z",
      "side": 1,
      "message": "The normal mechanism is that we get the app to open the file, and pass an fd to VS \u0026 thence to crosvm. Can we do that here?",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 49,
        "endChar": 2
      },
      "revId": "d1bf4e749971d94b2d7fb39939216549daa6c271",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "904f94eb_617fe669",
        "filename": "private/crosvm.te",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1019013
      },
      "writtenOn": "2022-12-08T11:31:47Z",
      "side": 1,
      "message": "I don\u0027t know whether it\u0027s possible to pass file descriptor across the process in Rust.\n\nDear Pierre, could you answer this question instead?",
      "parentUuid": "8e12d94e_4b404078",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 49,
        "endChar": 2
      },
      "revId": "d1bf4e749971d94b2d7fb39939216549daa6c271",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80de2666_61c0c302",
        "filename": "private/crosvm.te",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1882526
      },
      "writtenOn": "2022-12-08T12:07:03Z",
      "side": 1,
      "message": "After confirming with Alan offline, I much prefer the idea of passing the (opened) file to crosvm, as we already do for the other images than to grant more permissions to it. For example, see how `add_preserved_fd` is used to [pass the kernel](https://source.corp.google.com/android/packages/modules/Virtualization/virtualizationservice/src/crosvm.rs;l\u003d773).",
      "parentUuid": "904f94eb_617fe669",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 49,
        "endChar": 2
      },
      "revId": "d1bf4e749971d94b2d7fb39939216549daa6c271",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3dabe7dd_c43ff405",
        "filename": "private/crosvm.te",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1019013
      },
      "writtenOn": "2022-12-08T12:28:24Z",
      "side": 1,
      "message": "Follow-up newbie question to understand sepolicy better: If I read sepolicy correctly, virtualizationservice can\u0027t search shell_data_file:dir as well, so we need the similar change for the `virtualizationservice.te`. Is `virtualizationservice` better than `crosvm` for opening file? Is it worth to add extra logic for testing only change?",
      "parentUuid": "80de2666_61c0c302",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 49,
        "endChar": 2
      },
      "revId": "d1bf4e749971d94b2d7fb39939216549daa6c271",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "664c5793_2805cf6a",
        "filename": "private/crosvm.te",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2022-12-08T12:33:23Z",
      "side": 1,
      "message": "For the other files, it\u0027s the app that opens the file, and then the fd is passed from the app to VS and thence to crosvm. (And apps can access shell_data_file.)\n\nIs this one different?",
      "parentUuid": "3dabe7dd_c43ff405",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 49,
        "endChar": 2
      },
      "revId": "d1bf4e749971d94b2d7fb39939216549daa6c271",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "704296e5_a8d205af",
        "filename": "private/crosvm.te",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1019013
      },
      "writtenOn": "2022-12-08T12:56:53Z",
      "side": 1,
      "message": "Other test artifacts are inside the VM apk (e.g. `assets/vm_config.json` in the `MicrodroidTestApp.apk`), but I\u0027m doing this for custom `pvmfw.img`, and it doesn\u0027t seem to be included in the VM app itself. Custom `pvmfw.img` seems to be in the grey area -- I think it\u0027s better not not built-in with virtualizationservice nor VM app. So asking to pushing the binary to some place (e.g. `/data/local/tmp`) or generate on the fly (b/243671509) seems to be the right choice.",
      "parentUuid": "664c5793_2805cf6a",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 49,
        "endChar": 2
      },
      "revId": "d1bf4e749971d94b2d7fb39939216549daa6c271",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22598484_842b3b30",
        "filename": "private/crosvm.te",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2022-12-08T13:19:54Z",
      "side": 1,
      "message": "Well in normal operation the app passes files in the app\u0027s private data directories as well.\n\nI guess my question is, what does this test look like? It is another Microdroid test, or a host test, or something new?\nHow do we ask VS to run with the custom pvmfw? Or are we running crosvm directly?\nDoes the test need root?",
      "parentUuid": "704296e5_a8d205af",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 49,
        "endChar": 2
      },
      "revId": "d1bf4e749971d94b2d7fb39939216549daa6c271",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bffae225_e2e47ce2",
        "filename": "public/domain.te",
        "patchSetId": 3
      },
      "lineNbr": 1143,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2022-12-08T09:58:24Z",
      "side": 1,
      "message": "Can you just move this neverallow to private? It\u0027s confusing to have it partly public and partly private.\n(Maybe move all the shell_data_file rules to private.)",
      "range": {
        "startLine": 1132,
        "startChar": 0,
        "endLine": 1143,
        "endChar": 27
      },
      "revId": "d1bf4e749971d94b2d7fb39939216549daa6c271",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}