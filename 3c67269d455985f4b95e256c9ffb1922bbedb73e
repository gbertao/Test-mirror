{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "126ef670_7efcad45",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-01-12T09:41:38Z",
      "side": 1,
      "message": "The description doesn\u0027t match with the change which is about the removal of selinuxContextsMutator.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 26,
        "endChar": 53
      },
      "revId": "3c67269d455985f4b95e256c9ffb1922bbedb73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26a872e5_64fb461b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2021-01-12T09:54:15Z",
      "side": 1,
      "message": "selinuxContextsMutator used to create its own image variant. This refactors selinux contexts modules so they can use ImageInterface functions.",
      "parentUuid": "126ef670_7efcad45",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 26,
        "endChar": 53
      },
      "revId": "3c67269d455985f4b95e256c9ffb1922bbedb73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7027212_41da9e81",
        "filename": "build/soong/selinux_contexts.go",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2021-01-12T08:38:28Z",
      "side": 1,
      "message": "I had to do this because I can\u0027t use AddInterVariationDependency anymore.",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 104,
        "endChar": 2
      },
      "revId": "3c67269d455985f4b95e256c9ffb1922bbedb73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57f4479c_2c543aad",
        "filename": "build/soong/selinux_contexts.go",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-01-12T09:41:38Z",
      "side": 1,
      "message": "How can this be true? a recovery variant that isn\u0027t installed in recovery?",
      "range": {
        "startLine": 121,
        "startChar": 4,
        "endLine": 121,
        "endChar": 51
      },
      "revId": "3c67269d455985f4b95e256c9ffb1922bbedb73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8bb8c979_af8c6263",
        "filename": "build/soong/selinux_contexts.go",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2021-01-12T09:54:15Z",
      "side": 1,
      "message": "InstallInRecovery is true when \"recovery: true\", and this can be true if \"recovery_available: true\".\n\nWell.. maybe we want to rename all \"InstallIn{partition}\" functions?",
      "parentUuid": "57f4479c_2c543aad",
      "range": {
        "startLine": 121,
        "startChar": 4,
        "endLine": 121,
        "endChar": 51
      },
      "revId": "3c67269d455985f4b95e256c9ffb1922bbedb73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cbaaa5a_aa646a6d",
        "filename": "build/soong/selinux_contexts.go",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-01-12T10:23:25Z",
      "side": 1,
      "message": "I hope so. InstallInRecovery returning false for a recovery variant (which will actually be installed in recovery partition) doesn\u0027t sound right, which is a type of confusions that this CL tries to fix.",
      "parentUuid": "8bb8c979_af8c6263",
      "range": {
        "startLine": 121,
        "startChar": 4,
        "endLine": 121,
        "endChar": 51
      },
      "revId": "3c67269d455985f4b95e256c9ffb1922bbedb73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd8b5712_85a220e8",
        "filename": "build/soong/selinux_contexts.go",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2021-02-02T11:10:02Z",
      "side": 1,
      "message": "Let\u0027s fix this in a followup CL",
      "parentUuid": "8cbaaa5a_aa646a6d",
      "range": {
        "startLine": 121,
        "startChar": 4,
        "endLine": 121,
        "endChar": 51
      },
      "revId": "3c67269d455985f4b95e256c9ffb1922bbedb73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc58f10a_dcad7021",
        "filename": "build/soong/selinux_contexts.go",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-01-12T09:41:38Z",
      "side": 1,
      "message": "What do this and the below fix?",
      "range": {
        "startLine": 122,
        "startChar": 33,
        "endLine": 122,
        "endChar": 49
      },
      "revId": "3c67269d455985f4b95e256c9ffb1922bbedb73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc14883a_00e02452",
        "filename": "build/soong/selinux_contexts.go",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2021-01-12T09:54:15Z",
      "side": 1,
      "message": "1) I added AddFarVariationDependencies call in DepsMutator. There I used ctx.ModuleName() because I once heard it\u0027s better than m.Name().\n\n2) I changed m.Name() call to ctx.ModuleName() to match them with DepsMutator.",
      "parentUuid": "dc58f10a_dcad7021",
      "range": {
        "startLine": 122,
        "startChar": 33,
        "endLine": 122,
        "endChar": 49
      },
      "revId": "3c67269d455985f4b95e256c9ffb1922bbedb73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5d862e6_d83c764c",
        "filename": "build/soong/selinux_contexts.go",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-01-12T10:23:25Z",
      "side": 1,
      "message": "If we don\u0027t override Name() for selinuxContextsModule, which is the case, m.Name() should be the same as ctx.ModuleName() right?\n\nI am not opposed to doing this, but I think it should be done in a separate CL. We have other places where m.Name() is used in this file.",
      "parentUuid": "bc14883a_00e02452",
      "range": {
        "startLine": 122,
        "startChar": 33,
        "endLine": 122,
        "endChar": 49
      },
      "revId": "3c67269d455985f4b95e256c9ffb1922bbedb73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ca26d63_aa539c41",
        "filename": "build/soong/selinux_contexts.go",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2021-02-02T11:10:02Z",
      "side": 1,
      "message": "Reverted",
      "parentUuid": "c5d862e6_d83c764c",
      "range": {
        "startLine": 122,
        "startChar": 33,
        "endLine": 122,
        "endChar": 49
      },
      "revId": "3c67269d455985f4b95e256c9ffb1922bbedb73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77718227_b0953ce2",
        "filename": "build/soong/selinux_contexts.go",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-01-12T09:41:38Z",
      "side": 1,
      "message": "Why? selinux context modules are arch-neutral, aren\u0027t they?",
      "range": {
        "startLine": 182,
        "startChar": 75,
        "endLine": 182,
        "endChar": 80
      },
      "revId": "3c67269d455985f4b95e256c9ffb1922bbedb73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c695d2f_0d467493",
        "filename": "build/soong/selinux_contexts.go",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2021-01-12T09:54:15Z",
      "side": 1,
      "message": "In arch mutator, recovery variants are disabled if they are not MultilibFirst. This is to avoid it.",
      "parentUuid": "77718227_b0953ce2",
      "range": {
        "startLine": 182,
        "startChar": 75,
        "endLine": 182,
        "endChar": 80
      },
      "revId": "3c67269d455985f4b95e256c9ffb1922bbedb73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9411591c_e9215d1d",
        "filename": "build/soong/selinux_contexts.go",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-01-12T10:23:25Z",
      "side": 1,
      "message": "Hmm, shouldn\u0027t we fix there then? I think First and Common should be allowed.",
      "parentUuid": "9c695d2f_0d467493",
      "range": {
        "startLine": 182,
        "startChar": 75,
        "endLine": 182,
        "endChar": 80
      },
      "revId": "3c67269d455985f4b95e256c9ffb1922bbedb73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "832cc234_a6601186",
        "filename": "build/soong/selinux_contexts.go",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2021-02-02T11:10:02Z",
      "side": 1,
      "message": "Done. Based on aosp/715444 it will be safe.",
      "parentUuid": "9411591c_e9215d1d",
      "range": {
        "startLine": 182,
        "startChar": 75,
        "endLine": 182,
        "endChar": 80
      },
      "revId": "3c67269d455985f4b95e256c9ffb1922bbedb73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}