{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4fa38f58_96a05229",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1938075
      },
      "writtenOn": "2024-02-15T05:53:36Z",
      "side": 1,
      "message": "After talking extensively with @sunnygoyal@google.com and @jeffv@google.com, it was decided that creating an SELinux context just for com.android.systemui was more risky than previously believed, and will require extensive testing across all available devices when we create it. Therefore, we are switching to a different approach.\n\nWe are giving platform_apps access to this directory in userdebug/eng builds only. That is going to be the short-term solution, and the long-term solution is going to be something more robust. That solution will be better though, if we have more time to dig into it and talk about it. The short-term solution will unblock this effort, and allow dogfooders to access this feature on their user-debug devices as the first exposed audience who can use this feature.",
      "revId": "0312017ad7b9980df6d7b5293e5767c0dd80a007",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62e9c0df_6ccbc216",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2024-02-15T06:59:41Z",
      "side": 1,
      "message": "I\u0027m fine with this approach temporarily. Let\u0027s follow up on what the permanent solution should be.",
      "revId": "0312017ad7b9980df6d7b5293e5767c0dd80a007",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7ad6ced_780abe70",
        "filename": "private/platform_app.te",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1040443
      },
      "writtenOn": "2024-02-15T12:41:16Z",
      "side": 1,
      "message": "I\u0027m going to ask the same question for the 3rd time:\ngiven that perfetto will attach the trace for you in the bugreport once you invoke dumpstate, why do you need  access yourself to trace_data_file?\n\nAlso the rule is inconsistent with the comment.\n\nThe comment says /data/misc/wmtrace, but that would require wm_trace_data_file NOT \ntrace_data_file (which instead is /data/local/traces).\nSee https://cs.android.com/android/platform/superproject/main/+/main:system/sepolicy/private/file_contexts;l\u003d588?q\u003dtrace_data_file%20f:sepolicy%20f:context%20-f:test%20-f:prebuilt",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 72,
        "endChar": 0
      },
      "revId": "0312017ad7b9980df6d7b5293e5767c0dd80a007",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e255e1b_a2066a06",
        "filename": "private/platform_app.te",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1436778
      },
      "writtenOn": "2024-02-15T13:48:04Z",
      "side": 1,
      "message": "afaik Betterbug invokes dumpstate to take the BR, the trace tile stops the trace before, so dumpstate will attach the AOT session, not the session started by this tile. \n\nWe want to stop the trace as soon as possible to avoid betterbug information being included in the trace (and overwriting useful trace data), so the tile needs to stop perfetto and fetch the file to send to Betterbug",
      "parentUuid": "f7ad6ced_780abe70",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 72,
        "endChar": 0
      },
      "revId": "0312017ad7b9980df6d7b5293e5767c0dd80a007",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cde54697_595e3528",
        "filename": "private/platform_app.te",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1938075
      },
      "writtenOn": "2024-02-15T16:10:24Z",
      "side": 1,
      "message": "My bad Primiano for making you ask this 3 times Primiano. @natanieljr@google.com covered the reason already, but I\u0027ll explain it as well in my words.\n\nThe issue is that currently the traces are being directly shared, rather than captured in a bugreport. That is currently how Traceur does this as well. Bugreport capture is not a currently enabled feature from the Record Issue Tile, although that is one of the features I am investigating currently.\n\nAlso, I will soon put out another revision using domain_auto_trans instead of the direct perfetto permissions.",
      "parentUuid": "5e255e1b_a2066a06",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 72,
        "endChar": 0
      },
      "revId": "0312017ad7b9980df6d7b5293e5767c0dd80a007",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a76916b_dde909ed",
        "filename": "private/platform_app.te",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2024-02-15T06:59:41Z",
      "side": 1,
      "message": "Based on primiano\u0027s feedback (which I agree with), you should be using \"domain_auto_trans()\" here instead of this (that tells the system that perfetto should be run in the perfetto context instead of in the platform_app context). I think that may also remove the need for the below permission, but please do verify.",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 83,
        "endChar": 54
      },
      "revId": "0312017ad7b9980df6d7b5293e5767c0dd80a007",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c9621f8_32517965",
        "filename": "private/platform_app.te",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1040443
      },
      "writtenOn": "2024-02-15T12:41:16Z",
      "side": 1,
      "message": "+1 as I mention is a matter of composability and maintainability, not just selinux rules aesthetics.",
      "parentUuid": "6a76916b_dde909ed",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 83,
        "endChar": 54
      },
      "revId": "0312017ad7b9980df6d7b5293e5767c0dd80a007",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6bda7a3_bfec3536",
        "filename": "private/platform_app.te",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1938075
      },
      "writtenOn": "2024-02-28T22:34:27Z",
      "side": 1,
      "message": "I think we should keep this here, and not use domain_auto_trans. My reasoning is:\n1. This is a temporary solution, so we don\u0027t need to worry about upkeeping N sources that execute perfetto for very long. This line will be removed as soon as we get a long-term solution.\n2. If we use a domain_auto_trans, perfetto needs to be given permissions to trace_data_file, in addition to giving platform_app permissions to trace_data_file. The perfetto command line is writing its output to a file in /data/local/traces, and the system_ui process is sharing it, so both need permissions.\n\n    One idea to get around this issue has been given here: https://docs.google.com/document/d/1_Vb2zZsXRMkJEaMfgOEcg4VzpdoF0HydvLjfRO9Q5jg/edit?tab\u003dt.0.\n\n    That doesn\u0027t make things better security wise for platform_apps though, because SystemUI still needs to share other files within the /data/local/trace directory, so it still needs the same new permissions to trace_data_file and wm_trace_data_file that are already listed in this CL. If anything, it would need more permissions to that new file type, and we would have to make significant code changes to packages/apps/Traceur to implement conditional logic for SystemUI vs for Traceur. For a temporary solution, I think it is simpler and less risky to use the currently proposed solution.\n\n    Also, if we do go with the long-term solution of using a Traceur-Perfetto/Winscope service to start/stop traces, then this idea would make that code change more complicated.\n\nAlso, if y\u0027all really want to use domain_auto_trans, I put together a work-in-progress CL (aosp/2982893) with the minimal number of permissions that would need to be given to perfetto to allow that to happen without breaking the new feature. It requires that BOTH perfetto and platform_app have permissions to trace_data_file and wm_trace_data_file. I would be happy going forward with that solution, but I personally like the solution here better.",
      "parentUuid": "0c9621f8_32517965",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 83,
        "endChar": 54
      },
      "revId": "0312017ad7b9980df6d7b5293e5767c0dd80a007",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0242721d_769463fb",
        "filename": "private/platform_app.te",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1938075
      },
      "writtenOn": "2024-03-04T15:49:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e6bda7a3_bfec3536",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 83,
        "endChar": 54
      },
      "revId": "0312017ad7b9980df6d7b5293e5767c0dd80a007",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}