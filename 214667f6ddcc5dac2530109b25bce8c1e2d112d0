{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b1f2303d_e548907f",
        "filename": "private/artd.te",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2022-12-12T17:02:43Z",
      "side": 1,
      "message": "Are you sure you need this?\ninstalld doesn\u0027t have it. And restorecon in app directories can be pretty fraught.",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 96,
        "endChar": 48
      },
      "revId": "214667f6ddcc5dac2530109b25bce8c1e2d112d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aaa04cee_6229ef9b",
        "filename": "private/artd.te",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-12-12T17:19:47Z",
      "side": 1,
      "message": "I need this because otherwise restorecon fails. I guess installd gets this transitively from some other rule, but I wasn\u0027t able to figure out which one. I\u0027m also wondering why restorecon needs this. Is there a way to print the stacktrace when an SELinux denial happens?\n\nRegarding restorecon in app directories, we have to do this because we create `oat` folders next to the secondary dex files in app directories on the fly when we compile secondary dex files.",
      "parentUuid": "b1f2303d_e548907f",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 96,
        "endChar": 48
      },
      "revId": "214667f6ddcc5dac2530109b25bce8c1e2d112d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1a8b9fe_71669266",
        "filename": "private/artd.te",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2022-12-12T17:49:43Z",
      "side": 1,
      "message": "\u003e I need this because otherwise restorecon fails. I guess installd gets this transitively from some other rule, but I wasn\u0027t able to figure out which one.\n\nIt doesn\u0027t seem to - and nothing much does:\n\n```\n$ /usr/bin/sesearch -A   -t packages_list_file -c file -p read /tmp/policy\nallow heapprofd packages_list_file:file { getattr ioctl lock map open read watch watch_reads };\nallow init packages_list_file:file { create getattr map open read relabelfrom relabelto setattr unlink write };\nallow logd packages_list_file:file { getattr ioctl lock map open read watch watch_reads };\nallow runas packages_list_file:file { getattr ioctl lock map open read watch watch_reads };\nallow sdcardd packages_list_file:file { getattr ioctl lock map open read watch watch_reads };\nallow simpleperf_app_runner packages_list_file:file { getattr ioctl lock map open read watch watch_reads };\nallow storaged packages_list_file:file { getattr ioctl lock map open read watch watch_reads };\nallow system_server packages_list_file:file { append create getattr ioctl lock map open read rename setattr unlink watch watch_reads write };\nallow traced_perf packages_list_file:file { getattr ioctl lock map open read watch watch_reads };\nallow traced_probes packages_list_file:file { getattr ioctl lock map open read watch watch_reads };\n```\n\n\n\n\u003e  I\u0027m also wondering why restorecon needs this. Is there a way to print the stacktrace when an SELinux denial happens?\n\nThere is, but it\u0027s a little complicated: https://source.android.com/docs/security/features/selinux/validate#dumping_user_and_kernel_stacks\n\n\n\n\u003e \n\u003e Regarding restorecon in app directories, we have to do this because we create `oat` folders next to the secondary dex files in app directories on the fly when we compile secondary dex files.\n\nSo you just restorecon the newly created folder? That\u0027s less of a problem.",
      "parentUuid": "aaa04cee_6229ef9b",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 96,
        "endChar": 48
      },
      "revId": "214667f6ddcc5dac2530109b25bce8c1e2d112d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "824b93fc_bc29cec8",
        "filename": "private/artd.te",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-12-12T18:46:42Z",
      "side": 1,
      "message": "Yes, we just want to restorecon the newly created folder. Is there an easier way to do that?",
      "parentUuid": "d1a8b9fe_71669266",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 96,
        "endChar": 48
      },
      "revId": "214667f6ddcc5dac2530109b25bce8c1e2d112d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c3ca1c5_d78833a5",
        "filename": "private/artd.te",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2022-12-13T10:04:45Z",
      "side": 1,
      "message": "Well, the other way to do it is to set the label correctly as you create it. But that\u0027s not easy either (you need to compute the label, including the categories, and it requires a bunch of different selinux permissions).\nSo create directory + restorecon is the normal way of doing it.\n\nWhat I was worried about was running restorecon on unrelated files, but if you\u0027re not doing that it\u0027s fine.\n\nIt looks like the access to packages_list_file is here: cs.android.com/android/platform/superproject/+/master:external/selinux/libselinux/src/android/android_device.c;drc\u003d4d132a10b0f7372cac13853eac258e827eda1d45;l\u003d451\n\nThat\u0027s used if the seinfo isn\u0027t present. But I thought you were passing in the seinfo? It appears in art/artd/binder/com/android/server/art/OutputArtifacts.aidl.",
      "parentUuid": "824b93fc_bc29cec8",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 96,
        "endChar": 48
      },
      "revId": "214667f6ddcc5dac2530109b25bce8c1e2d112d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87e40443_60ae04d2",
        "filename": "private/artd.te",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-12-13T16:05:48Z",
      "side": 1,
      "message": "Thank you for finding this out! You saved my day! It turns out that there is a bug in artd code that makes it do restorecon without seinfo, and hence that code path is hit. I\u0027ll fix it. This rule is not needed.",
      "parentUuid": "4c3ca1c5_d78833a5",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 96,
        "endChar": 48
      },
      "revId": "214667f6ddcc5dac2530109b25bce8c1e2d112d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}