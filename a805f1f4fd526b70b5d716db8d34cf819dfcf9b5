{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "495f50f2_774261fd",
        "filename": "tests/policy.py",
        "patchSetId": 13
      },
      "lineNbr": 138,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-02-04T02:38:21Z",
      "side": 1,
      "message": "This can never fail - since we associate both of these types in the policy.\n\nIf `P(x)` is the function which gives us the set of all permissions which domain \u0027x\u0027 has, then the test we need is that P(isolated_compute_app) - P(isolated_app) is a constant set.",
      "range": {
        "startLine": 138,
        "startChar": 20,
        "endLine": 138,
        "endChar": 52
      },
      "revId": "a805f1f4fd526b70b5d716db8d34cf819dfcf9b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4358451_ec830675",
        "filename": "tests/policy.py",
        "patchSetId": 13
      },
      "lineNbr": 138,
      "author": {
        "id": 1985265
      },
      "writtenOn": "2023-02-06T15:58:36Z",
      "side": 1,
      "message": "I think the reason that we need compliance test is to make sure partners to correctly setting up these domains, and that is why Jeff suggest we do this instead, iiuc (https://android-review.git.corp.google.com/c/platform/system/sepolicy/+/2402879/comment/27e0f5c6_393068e9/). \n\nYes we need to verify we don\u0027t grant isolated_compute_app unnecessary permissions. In this case we use neverallow rules to catch the violations. These neverallow rules shall catch the same thing as isolated_app did, but more relaxed on certain access (e.g., camera_service and other we explicitly added, but not the rest of the services). \n\nThe rest of the permissions are ones that can be allowed for isolated_app too. In that case it does no harm to assign them to isolated_compute_app. I think we don\u0027t need to guarantee P(isolated_compute_app) - P(isolated_app). We just need to make sure those permissions we granted to isolated_compute_app are correctly relaxed and restricted, and this should be done with neverallow rules. \n\n(Jeff please correct me if I have any misunderstanding on this)",
      "parentUuid": "495f50f2_774261fd",
      "range": {
        "startLine": 138,
        "startChar": 20,
        "endLine": 138,
        "endChar": 52
      },
      "revId": "a805f1f4fd526b70b5d716db8d34cf819dfcf9b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a7f8cc8_4a9d16b3",
        "filename": "tests/policy.py",
        "patchSetId": 13
      },
      "lineNbr": 138,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-02-06T21:49:58Z",
      "side": 1,
      "message": "The whole point is that these are isolated services. We cannot give isolated_compute_app more permissions. It\u0027s a risk. If what you are saying were true, we should use system_app or platform_app, not introduce another version of isolated_app. The security properties of your project depend on removing these permissions.\n\nThis CL, as it is, is testing something which we really aren\u0027t concerned partners modify. Technically it does add more coverage, but it\u0027s guarding against malicious action, essentially. What we need to do is remove the permissions that are given to isolated_compute_app that we know about and are easy to accidentally give, and we need to remove those permissions.",
      "parentUuid": "f4358451_ec830675",
      "range": {
        "startLine": 138,
        "startChar": 20,
        "endLine": 138,
        "endChar": 52
      },
      "revId": "a805f1f4fd526b70b5d716db8d34cf819dfcf9b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43bc48d4_e1d79d90",
        "filename": "tests/policy.py",
        "patchSetId": 13
      },
      "lineNbr": 138,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2023-02-07T17:29:36Z",
      "side": 1,
      "message": "If you want to prevent isolated_compute_app from having additional permissions, then enforce that with neverallow rules.\n\nWhat this is attempting to address is that attributes can be removed from policy (e.g. on partner devices) which will remove the enforcement of neverallow rules applied to isolated_app_all.\n\nBasically, if you want to enforce neverallow rules to attributes, you need additional tests that the attribute is applied as expected.",
      "parentUuid": "7a7f8cc8_4a9d16b3",
      "range": {
        "startLine": 138,
        "startChar": 20,
        "endLine": 138,
        "endChar": 52
      },
      "revId": "a805f1f4fd526b70b5d716db8d34cf819dfcf9b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41ca45c1_fac6a902",
        "filename": "tests/policy.py",
        "patchSetId": 13
      },
      "lineNbr": 138,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-02-07T20:21:06Z",
      "side": 1,
      "message": "The reason it can\u0027t be neverallow rules is because we can\u0027t write one for every case and type that partners create. It\u0027s impossible to write the neverallow rules we need here.",
      "parentUuid": "43bc48d4_e1d79d90",
      "range": {
        "startLine": 138,
        "startChar": 20,
        "endLine": 138,
        "endChar": 52
      },
      "revId": "a805f1f4fd526b70b5d716db8d34cf819dfcf9b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9311abc1_1ab45a7f",
        "filename": "tests/policy.py",
        "patchSetId": 13
      },
      "lineNbr": 138,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2023-02-08T07:46:18Z",
      "side": 1,
      "message": "I see your point, but I have a couple of concerns.\n\n1. partners have customizations that might be necessary if they use this domain. e.g. at least one SoC vendor has a separate service for custom codecs that they provide. Shouldn\u0027t they be able to grant access to that? Clearly access to hardware accelerated codecs is fine since we\u0027re doing it. If this is intended to be a generally useful domain. Is it a feature or a bug to overly constrain this domain?\n2. To the point above, we generally try to enforce specific security properties (e.g. no network or disk access), not a broad \"no customization\" mandate.",
      "parentUuid": "41ca45c1_fac6a902",
      "range": {
        "startLine": 138,
        "startChar": 20,
        "endLine": 138,
        "endChar": 52
      },
      "revId": "a805f1f4fd526b70b5d716db8d34cf819dfcf9b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}