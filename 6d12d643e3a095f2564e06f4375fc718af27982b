{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "30a13180_6603c48d",
        "filename": "public/attributes",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2022-07-19T09:01:33Z",
      "side": 0,
      "message": "Don\u0027t we need to add some compat for this?\nWhat about existing vendor policy that references this attribute?",
      "range": {
        "startLine": 187,
        "startChar": 0,
        "endLine": 187,
        "endChar": 25
      },
      "revId": "6d12d643e3a095f2564e06f4375fc718af27982b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b6c26b7_c91b6499",
        "filename": "public/attributes",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-07-19T14:27:56Z",
      "side": 0,
      "message": "It was only used for neverallows, and it did not have `expandattribute vendor_servce false;`, so this and the parent CL are compile-time only changes (we should probably have an automated way to verify this - I know selinux people used to check the compiled policy doesn\u0027t not change between builds). We can also see if this throws an error against the _rvc builds in presubmit once this is runnable there.",
      "parentUuid": "30a13180_6603c48d",
      "range": {
        "startLine": 187,
        "startChar": 0,
        "endLine": 187,
        "endChar": 25
      },
      "revId": "6d12d643e3a095f2564e06f4375fc718af27982b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa0101dc_fe8d3d8e",
        "filename": "public/attributes",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2022-07-19T15:12:00Z",
      "side": 0,
      "message": "Hmm. I\u0027m not entirely convinced. Vendor policy is compiled with the public files as input, so I don\u0027t think there\u0027s any way we can be sure there isn\u0027t a direct reference somewhere we can\u0027t see, e.g. in non-Pixel vendor policy.\nIt\u0027s present in the .cil, even if not in the final policy.",
      "parentUuid": "7b6c26b7_c91b6499",
      "range": {
        "startLine": 187,
        "startChar": 0,
        "endLine": 187,
        "endChar": 25
      },
      "revId": "6d12d643e3a095f2564e06f4375fc718af27982b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "705b3a9c_b39bee4a",
        "filename": "public/attributes",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-07-19T15:41:38Z",
      "side": 0,
      "message": "Sine the attribute is expanded, it\u0027s compile time only. A vendor reference to the policy would be absorbed into that type at compile time.",
      "parentUuid": "aa0101dc_fe8d3d8e",
      "range": {
        "startLine": 187,
        "startChar": 0,
        "endLine": 187,
        "endChar": 25
      },
      "revId": "6d12d643e3a095f2564e06f4375fc718af27982b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}