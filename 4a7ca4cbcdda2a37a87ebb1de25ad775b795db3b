{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "71b1ed42_6459c2e1",
        "filename": "private/app.te",
        "patchSetId": 2
      },
      "lineNbr": 359,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2023-02-03T09:52:41Z",
      "side": 1,
      "message": "Can you add a comment here that application opt-out is done within the perfetto daemon?",
      "range": {
        "startLine": 359,
        "startChar": 2,
        "endLine": 359,
        "endChar": 40
      },
      "revId": "4a7ca4cbcdda2a37a87ebb1de25ad775b795db3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1f325ea_220a3122",
        "filename": "private/app.te",
        "patchSetId": 2
      },
      "lineNbr": 359,
      "author": {
        "id": 1128769
      },
      "writtenOn": "2023-02-03T15:13:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "71b1ed42_6459c2e1",
      "range": {
        "startLine": 359,
        "startChar": 2,
        "endLine": 359,
        "endChar": 40
      },
      "revId": "4a7ca4cbcdda2a37a87ebb1de25ad775b795db3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ca0be98_e2deb659",
        "filename": "private/domain.te",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2023-02-03T09:52:41Z",
      "side": 1,
      "message": "It doesn\u0027t seem to me like we get much value out of adding this attribute, plus it has additional downside:\n1. It has a performance cost on slow-path policy lookups (not on cached lookups though). Adding a single attribute isn\u0027t the worst thing, but during Treble (for example) we added a huge number of attributes and it caused problems. It\u0027s better to avoid it unless necessary.\n2. If you\u0027re going to enforce security sensitive rules on an attribute, you need to add an additional test (e.g. in tests/sepolicy_tests.py) that assert that each of these domains has this attribute. That ensures that partners do not remove the attribute.",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 25,
        "endChar": 43
      },
      "revId": "4a7ca4cbcdda2a37a87ebb1de25ad775b795db3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5593e3de_b0f1e8f5",
        "filename": "private/domain.te",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1128769
      },
      "writtenOn": "2023-02-03T10:58:57Z",
      "side": 1,
      "message": "So is your recommendation then to go back to listing the domains individually in each rule (across multiple files) then? I\u0027d prefer to find a way for the list to only be defined in one place to ease reasoning on existing rules and maintenance for future exclusions, but am unsure of how to best write that in sepolicy lang.\n\n(I tried doing a define(`no_dump_domain\u0027, `{ ...list... }\u0027 before but the language doesn\u0027t seem to allow for `allow { set -{set} }` syntax, so that didn\u0027t work.)",
      "parentUuid": "6ca0be98_e2deb659",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 25,
        "endChar": 43
      },
      "revId": "4a7ca4cbcdda2a37a87ebb1de25ad775b795db3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfc58d72_a4847744",
        "filename": "private/domain.te",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2023-02-03T11:01:52Z",
      "side": 1,
      "message": "It doesn\u0027t?\n\nDon\u0027t we do that here?\nhttps://cs.android.com/android/platform/superproject/+/master:system/sepolicy/private/app_neverallows.te;l\u003d5?q\u003dall_untrusted_apps\u0026sq\u003d",
      "parentUuid": "5593e3de_b0f1e8f5",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 25,
        "endChar": 43
      },
      "revId": "4a7ca4cbcdda2a37a87ebb1de25ad775b795db3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b186c154_9406b07d",
        "filename": "private/domain.te",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1128769
      },
      "writtenOn": "2023-02-03T11:30:49Z",
      "side": 1,
      "message": "Hmm, maybe I\u0027m holding it wrong. Here\u0027s what I was trying:\n```\ndefine(`no_dump_domain\u0027,`{\n  apexd        \n  bpfloader    \n  crash_dump   \n  crosvm       \n  diced        \n  init         \n  kernel       \n  keystore     \n  llkd         \n  logd         \n  ueventd      \n  vendor_init  \n  vold         \n}\u0027)\n\nallow crash_dump {\n  domain\n  -no_dump_domain\n}:process { ptrace signal sigchld sigstop sigkill };\n```\n\nWhich fails with:\n```\nsystem/sepolicy/private/domain.te:48:ERROR \u0027syntax error\u0027 at token \u0027{\u0027 on line 47260:\n  -{\n  domain\ncheckpolicy:  error(s) encountered while parsing configuration\n```\n\nMaybe I can instead define the list as { domain -x -y -z } and then use no_dump_domain and ~no_dump_domain directly. Let me experiment further.",
      "parentUuid": "cfc58d72_a4847744",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 25,
        "endChar": 43
      },
      "revId": "4a7ca4cbcdda2a37a87ebb1de25ad775b795db3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ac73ae5_a44ade6f",
        "filename": "private/domain.te",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1128769
      },
      "writtenOn": "2023-02-03T15:13:56Z",
      "side": 1,
      "message": "Uploaded a patch set that goes back to relisting the same set in each file, given your comment of moving rules where the \"domain\" is not the subject into their respective files. Had no success in making a single definition that\u0027s reusable, and \"allow { x -{ ... } }\" doesn\u0027t work after all. The untrusted_app list gets away with the \"subtracted elements\" always being individual labels.",
      "parentUuid": "b186c154_9406b07d",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 25,
        "endChar": 43
      },
      "revId": "4a7ca4cbcdda2a37a87ebb1de25ad775b795db3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfd1843d_a8f268e0",
        "filename": "private/domain.te",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2023-02-03T09:52:41Z",
      "side": 1,
      "message": "policy is organized scontext, so this should remain in crash_dump.te.",
      "range": {
        "startLine": 28,
        "startChar": 6,
        "endLine": 28,
        "endChar": 16
      },
      "revId": "4a7ca4cbcdda2a37a87ebb1de25ad775b795db3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18f20043_e0d06378",
        "filename": "private/domain.te",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1128769
      },
      "writtenOn": "2023-02-03T15:13:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dfd1843d_a8f268e0",
      "range": {
        "startLine": 28,
        "startChar": 6,
        "endLine": 28,
        "endChar": 16
      },
      "revId": "4a7ca4cbcdda2a37a87ebb1de25ad775b795db3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}