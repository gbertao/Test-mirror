{
  "comments": [
    {
      "key": {
        "uuid": "4a46c48b_0fbfe599",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2018-11-08T15:16:41Z",
      "side": 1,
      "message": "The message here is inconsistent with the change. In particular, this also allows apexd to manipulate files in /data/app, which is more than just communication.",
      "revId": "0de8a8a7e2624a97287e7a1dfc624a0a451c06d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e29116f3_41653ecf",
        "filename": "private/apexd.te",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2018-11-08T15:16:41Z",
      "side": 1,
      "message": "This allows apexd to manipulate (delete, rename) files in /data/app, which feels like something only packagemanager should be doing.",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "0de8a8a7e2624a97287e7a1dfc624a0a451c06d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a74adef9_fe25358e",
        "filename": "private/apexd.te",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2018-11-08T15:17:14Z",
      "side": 1,
      "message": "can you get someone from the package manager team to review this change?",
      "parentUuid": "e29116f3_41653ecf",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "0de8a8a7e2624a97287e7a1dfc624a0a451c06d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86f7a80a_71332167",
        "filename": "private/apexd.te",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1305591
      },
      "writtenOn": "2018-11-08T15:18:23Z",
      "side": 1,
      "message": "Thanks! Will ask toddke@",
      "parentUuid": "a74adef9_fe25358e",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "0de8a8a7e2624a97287e7a1dfc624a0a451c06d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00e52b41_ade8ad58",
        "filename": "private/apexd.te",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1060678
      },
      "writtenOn": "2018-11-09T14:58:26Z",
      "side": 1,
      "message": "Historically, we\u0027ve only provided installd with the ability to manipulate files in /data/app. system server can\u0027t even do this.",
      "parentUuid": "86f7a80a_71332167",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "0de8a8a7e2624a97287e7a1dfc624a0a451c06d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12a36e39_5bef5f42",
        "filename": "private/apexd.te",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2018-11-11T15:29:47Z",
      "side": 1,
      "message": "APK files are really sensitive files because they contain downloadable executable code, and the install process for APKs is already complicated enough without having to worry about other processes tweaking with the /data/app directory. \n\nAs a general rule, every directory should be owned by exactly one process, and the owner of /data/app is installd.",
      "parentUuid": "00e52b41_ade8ad58",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "0de8a8a7e2624a97287e7a1dfc624a0a451c06d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "655d35f2_acb20616",
        "filename": "private/apexd.te",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1305591
      },
      "writtenOn": "2018-11-12T19:02:59Z",
      "side": 1,
      "message": "ack, will check if I can make it work with read-only permission. thanks for the review!",
      "parentUuid": "12a36e39_5bef5f42",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "0de8a8a7e2624a97287e7a1dfc624a0a451c06d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4f41fa7_c06a9f16",
        "filename": "private/apexd.te",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1305591
      },
      "writtenOn": "2018-11-12T19:42:19Z",
      "side": 1,
      "message": "it turns out the write/remove permission in apk_data_file wasn\u0027t needed (I got the suggestion from audit2allow, sorry for not trying to restrict further).\n\nI left only the search permission on apk_data_file, since that seems to be needed. The write permission on apk_tmp_file is to allow apexd to move files to its own directory instead of copying, to avoid waste of space. I could hardlink instead, and let PackageInstaller clear apk_tmp_file:dir at the end of the session, but the problem would then be that the package file owner would be system:system, whereas apexd is running as root:system.\n\nNote that we\u0027re trying to avoid granting dac_override, so apexd won\u0027t likely be able to change owner of the file.",
      "parentUuid": "655d35f2_acb20616",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "0de8a8a7e2624a97287e7a1dfc624a0a451c06d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c79c550_df183799",
        "filename": "private/apexd.te",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2018-11-12T20:23:07Z",
      "side": 1,
      "message": "Package manager should pass a file descriptor to apexd so that apexd could copy the file itself. It seems like the code is passing files by name, not by file descriptor.  If you have the file descriptor then it\u0027s straight forward to copy the contents of the file.",
      "parentUuid": "b4f41fa7_c06a9f16",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "0de8a8a7e2624a97287e7a1dfc624a0a451c06d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b5994b0_3fd17a0a",
        "filename": "private/apexd.te",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-11-12T20:59:52Z",
      "side": 1,
      "message": "Counter question: Why should there be a copy? That\u0027s unnecessary I/O churn (and we expect some modules to be not small). (The package manager itself isn\u0027t doing copies to finish its work, either.)",
      "parentUuid": "5c79c550_df183799",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "0de8a8a7e2624a97287e7a1dfc624a0a451c06d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3092e87_e1c82e5c",
        "filename": "private/apexd.te",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1305591
      },
      "writtenOn": "2018-11-12T21:34:27Z",
      "side": 1,
      "message": "What Andreas said :) We have a slight preference for moving or to the very least hardlinking (see my remark above about hardlinks), to avoid unnecessary waste of space. This is the reason why this is not a copy. What are the security concerns with this approach? I guess if the \"write\" permission on apk_tmp_file:dir is a problem I could test the hardlink approach, which would only require read.",
      "parentUuid": "4b5994b0_3fd17a0a",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "0de8a8a7e2624a97287e7a1dfc624a0a451c06d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5583e8bb_01924859",
        "filename": "private/apexd.te",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1305591
      },
      "writtenOn": "2018-11-19T16:00:46Z",
      "side": 1,
      "message": "Nick: friendly ping? We have some alternative approaches in mind which would require some work. If you feel strongly about the current approach we can discuss this, but can you please comment on the last change, given what Andreas and I wrote above? Thanks.",
      "parentUuid": "d3092e87_e1c82e5c",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "0de8a8a7e2624a97287e7a1dfc624a0a451c06d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61f51581_b57eeeed",
        "filename": "private/apexd.te",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2018-11-19T16:11:10Z",
      "side": 1,
      "message": "I\u0027d prefer the hardlinking approach too. Even if you do this, directory access isn\u0027t necessary. You\u0027d still pass the file descriptor, then use linkat(AT_EMPTY_PATH) to link the file descriptor into whatever directory you need. (https://lwn.net/Articles/562488/, https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id\u003dbb2314b47996491bbc5add73633905c3120b6268). Directory search access isn\u0027t required.",
      "parentUuid": "5583e8bb_01924859",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "0de8a8a7e2624a97287e7a1dfc624a0a451c06d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94a7c8ea_72ea3813",
        "filename": "private/apexd.te",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1305591
      },
      "writtenOn": "2018-11-19T21:55:23Z",
      "side": 1,
      "message": "OK, I\u0027ll try that way. In the meantime I\u0027ll send you a separate CL just to allow PackageManager to communicate via binder to apexd, which unblocks other cases.",
      "parentUuid": "61f51581_b57eeeed",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "0de8a8a7e2624a97287e7a1dfc624a0a451c06d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f0055ca_4188cd2e",
        "filename": "private/apexd.te",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1305591
      },
      "writtenOn": "2018-12-04T00:04:02Z",
      "side": 1,
      "message": "Nick, I have the following error when trying linkat(AT_EMPTY_PATH) and passing the open file descriptor from PM to apexd:\n\n\n12-03 17:58:10.002  1265  1382 D PackageInstaller: commitApexLocked of /data/app/vmdl1271575215.tmp/base.apex\n12-03 17:58:10.003  1265  1265 I PackageInstalle: type\u003d1400 audit(0.0:13): avc: denied { use } for path\u003d\"/data/app/vmdl1271575215.tmp/base.apex\" dev\u003d\"dm-4\" ino\u003d3549 scontext\u003du:r:apexd:s0 tcontext\u003du:r:system_server:s0 tclass\u003dfd permissive\u003d1\n12-03 17:58:10.003  1265  1265 I PackageInstalle: type\u003d1400 audit(0.0:14): avc: denied { read } for path\u003d\"/data/app/vmdl1271575215.tmp/base.apex\" dev\u003d\"dm-4\" ino\u003d3549 scontext\u003du:r:apexd:s0 tcontext\u003du:object_r:apk_tmp_file:s0 tclass\u003dfile permissive\u003d1\n12-03 17:58:10.005   722   749 D apexd   : stagePackage() received by ApexService (fd: 16)\n12-03 17:58:10.006   722   749 E apexd   : Failed to stage package: Unable to rename incoming package (fd :16) to /data/apex/com.android.apex.test@1.apex: Cross-device link\n12-03 17:58:10.009  1265  1382 E PackageInstaller: Commit of session 1271575215 failed: java.lang.IllegalArgumentException: Unable to rename incoming package (fd :16) to /data/apex/com.android.apex.test@1.apex: Cross-device link: Unable to rename incoming package (fd :16) to /data/apex/com.android.apex.test@1.apex: Cross-device link\n\nSELinux is disabled so ignore the audit line.\n\nI don\u0027t understand why this is considered Cross-device link tbh.\n\nI might opt for having package installer write to /data/apex/some_tmp_dir and passing the file path to apexd, as you suggested in another thread. WDYT?",
      "parentUuid": "94a7c8ea_72ea3813",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "0de8a8a7e2624a97287e7a1dfc624a0a451c06d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}