{
  "comments": [
    {
      "key": {
        "uuid": "4ceef5e2_1ee6529d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2019-03-13T23:50:21Z",
      "side": 1,
      "message": "Mention that this is analogous to how we have to allow everyone to search the fscrypt keyring and keys?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 43
      },
      "revId": "1d2bb5e74f92ecef2a5505714e2c6a1d62e88a8c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d1da884_93d2b939",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2019-03-14T15:59:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ceef5e2_1ee6529d",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 43
      },
      "revId": "1d2bb5e74f92ecef2a5505714e2c6a1d62e88a8c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81f4557b_23e5e976",
        "filename": "private/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2019-03-13T23:50:21Z",
      "side": 1,
      "message": "Make the comment explain that kernel:key is for the fs-verity keyring, while mini-keyctl:key is for the keys in it?",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 76,
        "endChar": 35
      },
      "revId": "1d2bb5e74f92ecef2a5505714e2c6a1d62e88a8c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "425bafb7_e36d52ec",
        "filename": "private/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2019-03-14T15:42:45Z",
      "side": 1,
      "message": "The default label for keys is the label of the process that created the key. This obfuscates the intended purpose and controls of the key, as this comment indicates.\n\nWhile perhaps not appropriate for this CL, we should consider using setkeycreatecon() (https://linux.die.net/man/3/setkeycreatecon) to assign a more meaningful label to the generated key. This would allow finer grain control and clarify the intended scope of the keys. \n\n(it really shouldn\u0027t be the case that \"kernel\", \"mini-keyctl\", and \"su\" all essentially describe the same key)",
      "parentUuid": "81f4557b_23e5e976",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 76,
        "endChar": 35
      },
      "revId": "1d2bb5e74f92ecef2a5505714e2c6a1d62e88a8c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa6a5a37_0fbcc740",
        "filename": "private/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2019-03-14T15:59:26Z",
      "side": 1,
      "message": "The current setup just picks up all keys from a (well, two) certain directories at boot.\n\nExplicitly but generically naming them would probably be hard (or a nontrivial rewrite), is my guess. +xzhou\n\nComments updated.",
      "parentUuid": "425bafb7_e36d52ec",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 76,
        "endChar": 35
      },
      "revId": "1d2bb5e74f92ecef2a5505714e2c6a1d62e88a8c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d086c9f7_7c95d57c",
        "filename": "private/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2019-03-14T16:08:27Z",
      "side": 1,
      "message": "Can you point me to the code which performs this loading?\n\nSome thoughts:\n\n1) In the same way that we have a configuration file which maps filenames-\u003elabels [1] and services-\u003elabels [2], we could have a configuration file which maps keys-\u003elabels. This would allow libselinux to determine the key labels itself instead of more complicated logic elsewhere.\n\n2) If the key is derived from the filesystem, we could assign the key based on the label of the file. Eg, if we load from /system/foo/bar, which has label \"u:object_r:foo_bar:s0\", then the key would also be assigned the \"u:object_r:foo_bar:s0\" label. In essence, instead of inheriting the key label from the process, it inherits the key label from the label of the source file.\n\n#1 is probably cleaner and more in line with how other SELinux labeling decisions are made.\n\n[1] https://android.googlesource.com/platform/system/sepolicy/+/refs/heads/master/private/file_contexts\n[2] https://android.googlesource.com/platform/system/sepolicy/+/refs/heads/master/private/service_contexts",
      "parentUuid": "aa6a5a37_0fbcc740",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 76,
        "endChar": 35
      },
      "revId": "1d2bb5e74f92ecef2a5505714e2c6a1d62e88a8c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56644a6b_5da68897",
        "filename": "private/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2019-03-14T16:23:53Z",
      "side": 1,
      "message": "https://android.googlesource.com/platform/system/core/+/refs/heads/master/rootdir/init.rc, lines 590ff are the hookup into the boot process.\n\nmini-keyctl is in system/core/libkeyutils.",
      "parentUuid": "d086c9f7_7c95d57c",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 76,
        "endChar": 35
      },
      "revId": "1d2bb5e74f92ecef2a5505714e2c6a1d62e88a8c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39ef51a3_4eae6e6e",
        "filename": "private/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1042276
      },
      "writtenOn": "2019-03-14T16:42:46Z",
      "side": 1,
      "message": "What I\u0027d like to achieve (and I think it\u0027s the currently behavior) is to basically separate the debugging/attacking scenario (`mini-keyctl add` with root) with production case (mini-keyctl to load from verified partitions in init).\n\nThe confusion is probably around kernel:key vs mini-keyctl:key here?  Like Eric said, kernel:key is the .fs-verity keyring (which IS A special \"key\") and we probably can\u0027t and shouldn\u0027t change it.  Then the question is whether we want to label the actual keys to match.  I don\u0027t feel strongly either way.\n\nBut we may consider change it to perhaps \"fs-verity:key\".  So if there is more non-fs-verity keys in the future, it won\u0027t be searchable by all domains.",
      "parentUuid": "56644a6b_5da68897",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 76,
        "endChar": 35
      },
      "revId": "1d2bb5e74f92ecef2a5505714e2c6a1d62e88a8c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}