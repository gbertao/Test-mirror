{
  "comments": [
    {
      "key": {
        "uuid": "78a3f2d7_a473d9c8",
        "filename": "public/attributes",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2019-08-27T23:04:57Z",
      "side": 1,
      "message": "qq: Can coredomain talk to vendor_service? I can\u0027t find neverallows that forbid that.",
      "range": {
        "startLine": 105,
        "startChar": 10,
        "endLine": 105,
        "endChar": 24
      },
      "revId": "df0a65785cac195af64abdcb36edb25660ebe040",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e465f87c_ce0ef5cf",
        "filename": "public/attributes",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-08-27T23:48:55Z",
      "side": 1,
      "message": "I have commented there.",
      "parentUuid": "78a3f2d7_a473d9c8",
      "range": {
        "startLine": 105,
        "startChar": 10,
        "endLine": 105,
        "endChar": 24
      },
      "revId": "df0a65785cac195af64abdcb36edb25660ebe040",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c0dd5c6_075a4604",
        "filename": "public/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 630,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-08-27T23:48:55Z",
      "side": 1,
      "message": "this\n\n(it\u0027s fine for a vendor process to send a vendor_service to system as an IBinder and it can be pinged, but if a user transaction happens, it\u0027ll hit a runtime stability error, Stability::check in libbbinder\u0027s Stability.cpp).",
      "range": {
        "startLine": 628,
        "startChar": 0,
        "endLine": 630,
        "endChar": 37
      },
      "revId": "df0a65785cac195af64abdcb36edb25660ebe040",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e51f7d3_7c8bf1c5",
        "filename": "public/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 630,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2019-08-28T00:03:14Z",
      "side": 1,
      "message": "Why can\u0027t that be a build-time error? like it is currently with neverallows",
      "parentUuid": "7c0dd5c6_075a4604",
      "range": {
        "startLine": 628,
        "startChar": 0,
        "endLine": 630,
        "endChar": 37
      },
      "revId": "df0a65785cac195af64abdcb36edb25660ebe040",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "240658b3_11336252",
        "filename": "public/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 630,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-08-28T00:14:16Z",
      "side": 1,
      "message": "Neverallows are build errors only if there is an allow rule. Without the rule, it\u0027s also a runtime error. Stability policy doesn\u0027t need to be in sepolicy because it\u0027s orthogonal.\n\nIt\u0027s intentional that a vendor binder can be sent to system even if it isn\u0027t used. For instance, a vendor could send an IBinder token or send a binder as a convenient opaque token.",
      "parentUuid": "6e51f7d3_7c8bf1c5",
      "range": {
        "startLine": 628,
        "startChar": 0,
        "endLine": 630,
        "endChar": 37
      },
      "revId": "df0a65785cac195af64abdcb36edb25660ebe040",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d68d266_1cd23dd7",
        "filename": "public/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 630,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2019-08-28T00:34:57Z",
      "side": 1,
      "message": "I\u0027m not convinced this is a good idea. Replacing parts of sepolicy with some other access policy will at the very least make sepolicy not very readable, e.g. here you can\u0027t tell if system processes can talk to vendor_service without looking at implementation details of libbinder. Neverallows also have degree of enforcement (CTS) that we don\u0027t have with runtime checks.",
      "parentUuid": "240658b3_11336252",
      "range": {
        "startLine": 628,
        "startChar": 0,
        "endLine": 630,
        "endChar": 37
      },
      "revId": "df0a65785cac195af64abdcb36edb25660ebe040",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de01eb8c_24444593",
        "filename": "public/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 630,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-08-28T00:54:35Z",
      "side": 1,
      "message": "These issues are still orthogonal. You would still have \u0027binder_call\u0027 (someone would still have to give a permission for something to talk to a vendor service over binder). We already do this since there is no such thing as hwbinder_call. No sepolicy has been replaced.\n\nThere is a separate long-standing discussion to potentially remove binder_call from talking about processes and instead talk about which processes can use which interfaces to talk to which processes, but it isn\u0027t clear this will ever happen.",
      "parentUuid": "0d68d266_1cd23dd7",
      "range": {
        "startLine": 628,
        "startChar": 0,
        "endLine": 630,
        "endChar": 37
      },
      "revId": "df0a65785cac195af64abdcb36edb25660ebe040",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "861fd58d_ab9e4917",
        "filename": "public/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 630,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2019-08-28T17:55:45Z",
      "side": 1,
      "message": "Sorry, I\u0027m going on a tangent. This change LGTM. But I do want to continue the discussion on the use of vendor_service attribute.\n\n\u003e No sepolicy has been replaced.\n\n\"Coredomain can\u0027t talk to vendor_service.\" This constraint is no longer in sepolicy. \n\nAnother concern is that there is room to apply \"vendor_service\" inappropriately. As is, sepolicy doesn\u0027t distinguish between vendor_service and vintf_service for services added by vendor. So say, you have a vintf stability interface in vendor and pixel sepolicy marks it as vendor_service, instead of vintf_service. \n\nI\u0027d like to avoid a situation where the attribute grows divergent from its original meaning (e.g. app_api_service b/36783122).",
      "parentUuid": "de01eb8c_24444593",
      "range": {
        "startLine": 628,
        "startChar": 0,
        "endLine": 630,
        "endChar": 37
      },
      "revId": "df0a65785cac195af64abdcb36edb25660ebe040",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e5717dd_3a8ac632",
        "filename": "public/domain.te",
        "patchSetId": 1
      },
      "lineNbr": 630,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-08-28T18:26:49Z",
      "side": 1,
      "message": "I\u0027ve talked to Tri offline. I\u0027ll remove vintf_service. The only distinction that matters for security is if a service is served by vendor or not AND which process is allowed to talk to which.\n\ncoredomain is allowed to talk to vintf_service OR vendor_service, it\u0027s just that for a non-@VintfStability service user-defined APIs (as opposed to pingBinder/dump) are restricted.",
      "parentUuid": "861fd58d_ab9e4917",
      "range": {
        "startLine": 628,
        "startChar": 0,
        "endLine": 630,
        "endChar": 37
      },
      "revId": "df0a65785cac195af64abdcb36edb25660ebe040",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}