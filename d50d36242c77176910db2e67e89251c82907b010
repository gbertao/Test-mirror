{
  "comments": [
    {
      "key": {
        "uuid": "6fe48867_70213a80",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-03-29T21:21:34Z",
      "side": 1,
      "message": "Seems the bug is closed. Are there more details on what the additional pending changes are for?\n\n- what will happen if it isn\u0027t in Android Q?\n- what is the work necessary for downstream implementors?\n- are tests for this being added in VTS?",
      "range": {
        "startLine": 12,
        "startChar": 5,
        "endLine": 12,
        "endChar": 13
      },
      "revId": "d50d36242c77176910db2e67e89251c82907b010",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c37bc8e9_c9d51908",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1267775
      },
      "writtenOn": "2019-03-29T21:27:40Z",
      "side": 1,
      "message": "I just realize that we should allow this to be configurable. And hence this patch is a follow-up on the previous work. Basically if we don\u0027t get this in, we lose this feature for all Pixel devices, and OEMs will have to jump in to SurfaceFlinger and modify SurfaceFlinger in order to use this hidden feature.\n\nthere will be another follow-up patch that uses this sysprop in SurfaceFlinger\n\nVTS for sysprop? I think I have asked this question in an email thread about how to make some compliance on sysprops but I didn\u0027t recall any conclusion. So no, there are no VTS tests. We don\u0027t enforce anything on this property.",
      "parentUuid": "6fe48867_70213a80",
      "range": {
        "startLine": 12,
        "startChar": 5,
        "endLine": 12,
        "endChar": 13
      },
      "revId": "d50d36242c77176910db2e67e89251c82907b010",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b49a0f4_7560e677",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-03-29T21:35:52Z",
      "side": 1,
      "message": "Alright, ack. It seems this will be less work for partners.\n\n\u003e another follow-up patch that uses this sysprop in SurfaceFlinger\n\nI\u0027m assuming this is the ones in internal? lgtm\n\n\u003e VTS for sysprop? I think I have asked this question in an email thread about how to make some compliance on sysprops but I didn\u0027t recall any conclusion\n\nYes, many properties were grandfathered in. Moving forward, we are trying to strengthen the compatibility story here as currently, breakages are hard to detect. These APIs form system/vendor contracts that must be kept just as long as any HIDL interface (approximately three releases to deprecate, judging from history) but without data to inform deprecation. For testing now, we only have integration tests (e.g. the fwk-only OTA tests on automatic integration). If surface flinger stops reading this property and vendor needs it, would the symptoms be apparent?",
      "parentUuid": "c37bc8e9_c9d51908",
      "range": {
        "startLine": 12,
        "startChar": 5,
        "endLine": 12,
        "endChar": 13
      },
      "revId": "d50d36242c77176910db2e67e89251c82907b010",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee847e33_9de69cf6",
        "filename": "public/property_contexts",
        "patchSetId": 2
      },
      "lineNbr": 380,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-03-29T21:21:34Z",
      "side": 1,
      "message": "hmmm. I didn\u0027t realize this name before. Usually the term \u0027default\u0027 is reserved for \u0027.*\u0027 contexts. Maybe we should change this in a follow-up.",
      "range": {
        "startLine": 380,
        "startChar": 58,
        "endLine": 380,
        "endChar": 70
      },
      "revId": "d50d36242c77176910db2e67e89251c82907b010",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}